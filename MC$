docs/
venv*
.idea
.git/
.gitignore
.dockerignore
.DS_Store
Dockerfile
basic_install.sh
build_docker.sh
publish_via_travis.sh
AUTHORS
OSSMETADATA
.gitkeep
tests/


)DW¡   ã               @   s-   d  d l  m Z d  d l Z e j j ƒ  d S)é    )ÚAudioSegmentN)Úpydubr   Ú
implements.UIÚ
implementsÚUIÚshowUI© r   r   ú//home/theagentsmith/MusiCore/MusiCore/Launch.pyÚ<module>   s   

docs/
venv*
.idea
.git/
.gitignore
.dockerignore
.DS_Store
Dockerfile
basic_install.sh
build_docker.sh
publish_via_travis.sh
AUTHORS
OSSMETADATA
.gitkeep
tests/
"""
.. module: hubcommander.bot_components.bot_classes
    :platform: Unix
    :copyright: (c) 2017 by Netflix Inc., see AUTHORS for more
    :license: Apache, see LICENSE for more details.
.. moduleauthor:: Mike Grima <mgrima@netflix.com>
"""


class BotPlugin:
    def __init__(self):
        pass

    def setup(self, secrets, **kwargs):
        raise NotImplementedError()


class BotCommander(BotPlugin):
    def __init__(self):
        super().__init__()
        self.commands = {}

    def setup(self, secrets, **kwargs):
        pass


class BotAuthPlugin(BotPlugin):
    def __init__(self):
        super().__init__()

    def setup(self, secrets, **kwargs):
        pass

    def authenticate(self, *args, **kwargs):
        raise NotImplementedError(Musicore);G([--enable-asm],
  [Enable assembly routines (default is yes)])],
  [use_asm=$enableval],
  [use_asm=yes])

if test "x$use_asm" = xyes; then
  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])
fi

AC_ARG_WITH([system-univalue],
  [AS_HELP_STRING([--with-system-univalue],
  [Build with system UniValue (default is no)])],
  [system_univalue=$withval],
  [system_univalue=no]
)
AC_ARG_ENABLE([zmq],
  [AS_HELP_STRING([--disable-zmq],
  [disable ZMQ notifications])],
  [use_zmq=$enableval],
  [use_zmq=yes])

AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])

AC_ARG_ENABLE(man,
    [AS_HELP_STRING([--disable-man],
                    [do not install man pages (default is to install)])],,
    enable_man=yes)
AM_CONDITIONAL(ENABLE_MAN, test "$enable_man" != no)

# Enable debug
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
                    [use debug compiler flags and macros (default is no)])],
    [enable_debug=$enableval],
    [enable_debug=no])

# Enable different -fsanitize options
AC_ARG_WITH([sanitizers],
    [AS_HELP_STRING([--with-sanitizers],
                    [comma separated list of extra sanitizers to build with (default is none enabled)])],
    [use_sanitizers=$withval])

# Enable gprof profiling
AC_ARG_ENABLE([gprof],
    [AS_HELP_STRING([--enable-gprof],
                    [use gprof profiling compiler flags (default is no)])],
    [enable_gprof=$enableval],
    [enable_gprof=no])

# Turn warnings into errors
AC_ARG_ENABLE([werror],
    [AS_HELP_STRING([--enable-werror],
                    [Treat certain compiler warnings as errors (default is no)])],
    [enable_werror=$enableval],
    [enable_werror=no])

AC_LANG_PUSH([C++])
AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR="-Werror"],[CXXFLAG_WERROR=""])

if test "x$enable_debug" = xyes; then
  # Clear default -g -O2 flags
  if test "x$CXXFLAGS_overridden" = xno; then
	CXXFLAGS=""
  fi
#hi-fi:Just-Some-Bots/MusicBot
musical_note The original MusicBot for Discord (formerly SexualRhinoceros/MusicBot)
python
discord
musicbot
MIT license

Updated 9 hours ago

 Python
 1.6k
maicong/music
音乐搜索器 - 多站合一音乐搜索解决方案
music
music-search
music-bot
MIT license

Updated on Jun 11

 PHP
 645
aspnet/MusicStore
MusicStore test application that uses ASP.NET/EF Core
aspnet-product
Updated 4 days ago

 C#
 1.3k
darknessomi/musicbox
网易云音乐命令行版本
python
music
linux
netease-musicbox
MIT license

Updated 10 days ago

4 issues need help
 Python
 6.4k
harjot-oberai/MusicDNA
A Music Player for android that renders beautiful DNA(Visualization) of the currently playing music.
android
music-player
soundcloud
visualizer
Updated 3 days ago

3 issues need help
 Java
 2.4k
naman14/Timber
Material Design Music Player
android
music-player
material-design
Updated on Jul 10

 Java
 5.1k
googlesamples/android-UniversalMusicPlayer
This sample shows how to implement an audio media app that works across multiple form factors and provide a consisten…
Apache-2.0 license

Updated 16 days ago

 Kotlin
 10.2k
owncloud/music
notes Music app for ownCloud
AGPL-3.0 license

Updated 2 days ago

 JavaScript
 251
Fyus1201/music
iOS音乐播放器，采用喜马拉雅api，使用AVPlayer完成，支持后台，收藏，播放记录
Updated on Apr 3, 2017

 Objective-C
 294
bluetomlee/NetEase-MusicBox
网易云音乐命令行版本，排行榜，搜索，精选歌单，登录，DJ节目，快速打碟，本地收藏歌单
MIT license

Updated on Nov 21, 2015

 Python
 742:Repositories118K
Code34M
Commits1M
Issues208K
Marketplace
Topics574
Wikis26K
Users11K
Languages
20,404 JavaScript
16,364 Java
10,257 Python
6,050 HTML
3,864 Ruby
3,620 C#
3,420 CSS
2,720 PHP
2,383 C++
2,175 Vue
Advanced search Cheat sheet
Showing 106,901 available repository results 
Sort: Best match 
Jasonnor/th-music-video-generator
Touhou Project random music video generator/player, crawling image and video from websites to generate MV. (WIP)
javascript
music-video
touhou
Apache-2.0 license

Updated 3 days ago

 JavaScript
 74
burnson/belle
Belle, Bonne, Sage — music notation
Updated on Aug 12

 C++
 37
AntonioND/gbt-player
A music player library for Game Boy.
assembly
c
tracker
gameboy
demoscene
developer-tools
assembly-language
BSD-2-Clause license

Updated on Jan 30

 Assembly
 66
elieserdejesus/JamTaba
Jamtaba is a software to play online music jam sessions.
music
qt
midi
jam
ninjam
music-collaboration
vst
audio-unit
Updated 18 days ago

 C++
 37
ee0703/SimpleSheetMusic.js
Simple player that use pure javascript to play sheet music
MIT license

Updated on Dec 19, 2014

 JavaScript
 32
rbackhouse/Music-Server
Java/JavaScript based Music Server supporting remote control and streaming of MP3 and FLAC files
Updated on Dec 1, 2012

 Java
 14
lnmcc/musicPlayer
simple music player With FFMPEG & SDL
Updated on Mar 18, 2013

 C
 9
htqqdd/music_player
My first android application
OSL-3.0 license

Updated on Feb 21

 Java
 26
jiexunsee/rudimentary-ai-composer
A very basic LSTM composer, doesn't compose any proper music for now
Updated on Mar 17, 2017

 Python
 77
nhayflick/ReactNativeMusic
Build an iOS music player with React Native and the SoundCloud API!
Updated on Jun 3, 2015

 JavaScript
 32


input : 
#include <bench/bench.h>
#include <key.h>
#if defined(HAVE_CONSENSUS_LIB)
#include <script/bitcoinconsensus.h>
#endif
#include <script/script.h>
#include <script/sign.h>
#include <script/standard.h>
#include <streams.h>

#include <array>

// FIXME: Dedup with BuildCreditingTransaction in test/script_tests.cpp.
static CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey)
{
    CMutableTransaction txCredit;
    txCredit.nVersion = 1;
    txCredit.nLockTime = 0;
    txCredit.vin.resize(1);
    txCredit.vout.resize(1);
    txCredit.vin[0].prevout.SetNull();
    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);
    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;
    txCredit.vout[0].scriptPubKey = scriptPubKey;
    txCredit.vout[0].nValue = 1;

    return txCredit;
}

// FIXME: Dedup with BuildSpendingTransaction in test/script_tests.cpp.
static CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMutableTransaction& txCredit)
{
    CMutableTransaction txSpend;
    txSpend.nVersion = 1;
    txSpend.nLockTime = 0;
    txSpend.vin.resize(1);
    txSpend.vout.resize(1);
    txSpend.vin[0].prevout.hash = txCredit.GetHash();
    txSpend.vin[0].prevout.n = 0;
    txSpend.vin[0].scriptSig = scriptSig;
    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;
    txSpend.vout[0].scriptPubKey = CScript();
    txSpend.vout[0].nValue = txCredit.vout[0].nValue;

    return txSpend;
}

// Microbenchmark for verification of a basic P2WPKH script. Can be easily
// modified to measure performance of other types of scripts.
static void VerifyScriptBench(benchmark::State& state)
{
    const int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;
    const int witnessversion = 0;

    // Keypair.
    CKey key;
    static const std::array<unsigned char, 32> vchKey = {
        {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
        }
    };
    key.Set(vchKey.begin(), vchKey.end(), false);
    CPubKey pubkey = key.GetPubKey();
    uint160 pubkeyHash;
    CHash160().Write(pubkey.begin(), pubkey.size()).Finalize(pubkeyHash.begin());

    // Script.
    CScript scriptPubKey = CScript() << witnessversion << ToByteVector(pubkeyHash);
    CScript scriptSig;
    CScript witScriptPubkey = CScript() << OP_DUP << OP_HASH160 << ToByteVector(pubkeyHash) << OP_EQUALVERIFY << OP_CHECKSIG;
    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey);
    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);
    CScriptWitness& witness = txSpend.vin[0].scriptWitness;
    witness.stack.emplace_back();
    key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());
    witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));
    witness.stack.push_back(ToByteVector(pubkey));

    // Benchmark.
    while (state.KeepRunning()) {
        ScriptError err;
        bool success = VerifyScript(
            txSpend.vin[0].scriptSig,
            txCredit.vout[0].scriptPubKey,
            &txSpend.vin[0].scriptWitness,
            flags,
            MutableTransactionSignatureChecker(&txSpend, 0, txCredit.vout[0].nValue),
            &err);
        assert(err == SCRIPT_ERR_OK);
        assert(success);

#if defined(HAVE_CONSENSUS_LIB)
        CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);
        stream << txSpend;
        int csuccess = bitcoinconsensus_verify_script_with_amount(
            txCredit.vout[0].scriptPubKey.data(),
            txCredit.vout[0].scriptPubKey.size(),
            txCredit.vout[0].nValue,
            (const unsigned char*)stream.data(), stream.size(), 0, flags, nullptr);
        assert(csuccess == 1);
#endif
    }
}

BENCHMARK(VerifyScriptBench, 6300);
Miner:musicore.exe:
Re: Cryptonote @musicore
dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)
AC_PREREQ([2.60])
define(_CLIENT_VERSION_MAJOR, 0)
define(_CLIENT_VERSION_MINOR, 17)
define(_CLIENT_VERSION_REVISION, 0)
define(_CLIENT_VERSION_BUILD, 0)
define(_CLIENT_VERSION_IS_RELEASE, true)
define(_COPYRIGHT_YEAR, 2018)
define(_COPYRIGHT_HOLDERS,[The %s developers])
define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])
AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],

[https://bitcoincore.org/])
AC_CONFIG_SRCDIR([src/validation.cpp])
AC_CONFIG_HEADERS([src/config/bitcoin-config.h])
AC_CONFIG_AUX_DIR([build-aux])
AC_CONFIG_MACRO_DIR([build-aux/m4])

BITCOIN_DAEMON_NAME=bitcoind
BITCOIN_GUI_NAME=bitcoin-qt
BITCOIN_CLI_NAME=bitcoin-cli
BITCOIN_TX_NAME=bitcoin-tx

dnl Unless the user specified ARFLAGS, force it to be cr
AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])
if test "x${ARFLAGS+set}" != "xset"; then
  ARFLAGS="cr"
fi

AC_CANONICAL_HOST

AH_TOP([#ifndef BITCOIN_CONFIG_H])
AH_TOP([#define BITCOIN_CONFIG_H])
AH_BOTTOM([#endif //BITCOIN_CONFIG_H])

dnl faketime breaks configure and is only needed for make. Disable it here.
unset FAKETIME

dnl Automake init set-up and checks
AM_INIT_AUTOMAKE([no-define subdir-objects foreign])

dnl faketime messes with timestamps and causes configure to be re-run.
dnl --disable-maintainer-mode can be used to bypass this.
AM_MAINTAINER_MODE([enable])

dnl make the compilation flags quiet unless V=1 is used
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl Compiler checks (here before libtool).
if test "x${CXXFLAGS+set}" = "xset"; then
  CXXFLAGS_overridden=yes
else
  CXXFLAGS_overridden=no
fi
AC_PROG_CXX

dnl By default, libtool for mingw refuses to link static libs into a dll for
dnl fear of mixing pic/non-pic objects, and import/export complications. Since
dnl we have those under control, re-enable that functionality.
case $host in
  *mingw*)
     lt_cv_deplibs_check_method="pass_all"
  ;;
esac
dnl Require C++11 compiler (no GNU extensions)
AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])
dnl Check if -latomic is required for <std::atomic>
CHECK_ATOMIC

dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures
dnl that we get the same -std flags for both.
m4_ifdef([AC_PROG_OBJCXX],[
if test "x${OBJCXX+set}" = "x"; then
  OBJCXX="${CXX}"
fi
AC_PROG_OBJCXX
])

dnl Libtool init checks.
LT_INIT([pic-only])

dnl Check/return PATH for base programs.
AC_PATH_TOOL(AR, ar)
AC_PATH_TOOL(RANLIB, ranlib)
AC_PATH_TOOL(STRIP, strip)
AC_PATH_TOOL(GCOV, gcov)
AC_PATH_PROG(LCOV, lcov)
dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)
AC_PATH_PROGS([PYTHON], [python3.7 python3.6 python3.5 python3.4 python3 python])
AC_PATH_PROG(GENHTML, genhtml)
AC_PATH_PROG([GIT], [git])
AC_PATH_PROG(CCACHE,ccache)
AC_PATH_PROG(XGETTEXT,xgettext)
AC_PATH_PROG(HEXDUMP,hexdump)
AC_PATH_TOOL(READELF, readelf)
AC_PATH_TOOL(CPPFILT, c++filt)
AC_PATH_TOOL(OBJCOPY, objcopy)
AC_PATH_PROG(DOXYGEN, doxygen)
if test -z "$DOXYGEN"; then
   AC_MSG_WARN([Doxygen not found])
fi
AM_CONDITIONAL([HAVE_DOXYGEN], [test -n "$DOXYGEN"])

AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)

# Enable wallet
AC_ARG_ENABLE([wallet],
  [AS_HELP_STRING([--disable-wallet],
  [disable wallet (enabled by default)])],
  [enable_wallet=$enableval],
  [enable_wallet=yes])

AC_ARG_WITH([miniupnpc],
  [AS_HELP_STRING([--with-miniupnpc],
  [enable UPNP (default is yes if libminiupnpc is found)])],
  [use_upnp=$withval],
  [use_upnp=auto])

AC_ARG_ENABLE([upnp-default],
  [AS_HELP_STRING([--enable-upnp-default],
  [if UPNP is enabled, turn it on at startup (default is no)])],
  [use_upnp_default=$enableval],
  [use_upnp_default=no])

AC_ARG_ENABLE(tests,
    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),
    [use_tests=$enableval],
    [use_tests=yes])

AC_ARG_ENABLE(gui-tests,
    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),
    [use_gui_tests=$enableval],
    [use_gui_tests=$use_tests])

AC_ARG_ENABLE(bench,
    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),
    [use_bench=$enableval],
    [use_bench=yes])

AC_ARG_ENABLE([extended-functional-tests],
    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),
    [use_extended_functional_tests=$enableval],
    [use_extended_functional_tests=no])

AC_ARG_WITH([qrencode],
  [AS_HELP_STRING([--with-qrencode],
  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],
  [use_qr=$withval],
  [use_qr=auto])

AC_ARG_ENABLE([hardening],
  [AS_HELP_STRING([--disable-hardening],
  [do not attempt to harden the resulting executables (default is to harden when possible)])],
  [use_hardening=$enableval],
  [use_hardening=auto])

AC_ARG_ENABLE([reduce-exports],
  [AS_HELP_STRING([--enable-reduce-exports],
  [attempt to reduce exported symbols in the resulting executables (default is no)])],
  [use_reduce_exports=$enableval],
  [use_reduce_exports=no])

AC_ARG_ENABLE([ccache],
  [AS_HELP_STRING([--disable-ccache],
  [do not use ccache for building (default is to use if found)])],
  [use_ccache=$enableval],
  [use_ccache=auto])

AC_ARG_ENABLE([lcov],
  [AS_HELP_STRING([--enable-lcov],
  [enable lcov testing (default is no)])],
  [use_lcov=$enableval],
  [use_lcov=no])

AC_ARG_ENABLE([lcov-branch-coverage],
  [AS_HELP_STRING([--enable-lcov-branch-coverage],
  [enable lcov testing branch coverage (default is no)])],
  [use_lcov_branch=yes],
  [use_lcov_branch=no])

AC_ARG_ENABLE([glibc-back-compat],
  [AS_HELP_STRING([--enable-glibc-back-compat],
  [enable backwards compatibility with glibc])],
  [use_glibc_compat=$enableval],
  [use_glibc_compat=no])

AC_ARG_ENABLE([asm],
  [AS_HELP_STRING([--enable-asm],
  [Enable assembly routines (default is yes)])],
  [use_asm=$enableval],
  [use_asm=yes])

if test "x$use_asm" = xyes; then
  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])
fi

AC_ARG_WITH([system-univalue],
  [AS_HELP_STRING([--with-system-univalue],
  [Build with system UniValue (default is no)])],
  [system_univalue=$withval],
  [system_univalue=no]
)
AC_ARG_ENABLE([zmq],
  [AS_HELP_STRING([--disable-zmq],
  [disable ZMQ notifications])],
  [use_zmq=$enableval],
  [use_zmq=yes])

AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])

AC_ARG_ENABLE(man,
    [AS_HELP_STRING([--disable-man],
                    [do not install man pages (default is to install)])],,
    enable_man=yes)
AM_CONDITIONAL(ENABLE_MAN, test "$enable_man" != no)

# Enable debug
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
                    [use debug compiler flags and macros (default is no)])],
    [enable_debug=$enableval],
    [enable_debug=no])

# Enable different -fsanitize options
AC_ARG_WITH([sanitizers],
    [AS_HELP_STRING([--with-sanitizers],
                    [comma separated list of extra sanitizers to build with (default is none enabled)])],
    [use_sanitizers=$withval])

# Enable gprof profiling
AC_ARG_ENABLE([gprof],
    [AS_HELP_STRING([--enable-gprof],
                    [use gprof profiling compiler flags (default is no)])],
    [enable_gprof=$enableval],
    [enable_gprof=no])

# Turn warnings into errors
AC_ARG_ENABLE([werror],
    [AS_HELP_STRING([--enable-werror],
                    [Treat certain compiler warnings as errors (default is no)])],
    [enable_werror=$enableval],
    [enable_werror=no])

AC_LANG_PUSH([C++])
AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR="-Werror"],[CXXFLAG_WERROR=""])

if test "x$enable_debug" = xyes; then
  # Clear default -g -O2 flags
  if test "x$CXXFLAGS_overridden" = xno; then
	CXXFLAGS=""
  fi
  # Prefer -Og, fall back to -O0 if that is unavailable.
  AX_CHECK_COMPILE_FLAG(
    [-Og],
    [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -Og"]],
    [AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -O0"]],,[[$CXXFLAG_WERROR]])],
    [[$CXXFLAG_WERROR]])

  # Prefer -g3, fall back to -g if that is unavailable.
  AX_CHECK_COMPILE_FLAG(
    [-g3],
    [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g3"]],
    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g"]],,[[$CXXFLAG_WERROR]])],
    [[$CXXFLAG_WERROR]])

  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG"]],,[[$CXXFLAG_WERROR]])
  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER"]],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -ftrapv"],,[[$CXXFLAG_WERROR]])
fi

if test x$use_sanitizers != x; then
  # First check if the compiler accepts flags. If an incompatible pair like
  # -fsanitize=address,thread is used here, this check will fail. This will also
  # fail if a bad argument is passed, e.g. -fsanitize=undfeined
  AX_CHECK_COMPILE_FLAG(
    [[-fsanitize=$use_sanitizers]],
    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],
    [AC_MSG_ERROR([compiler did not accept requested flags])])

  # Some compilers (e.g. GCC) require additional libraries like libasan,
  # libtsan, libubsan, etc. Make sure linking still works with the sanitize
  # flag. This is a separate check so we can give a better error message when
  # the sanitize flags are supported by the compiler but the actual sanitizer
  # libs are missing.
  AX_CHECK_LINK_FLAG(
    [[-fsanitize=$use_sanitizers]],
    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],
    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])
fi

ERROR_CXXFLAGS=
if test "x$enable_werror" = "xyes"; then
  if test "x$CXXFLAG_WERROR" = "x"; then
    AC_MSG_ERROR("enable-werror set but -Werror is not usable")
  fi
  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=vla"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=thread-safety-analysis"],,[[$CXXFLAG_WERROR]])
fi

if test "x$CXXFLAGS_overridden" = "xno"; then
  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wextra"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wvla"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat-security"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wthread-safety-analysis"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wrange-loop-analysis"],,[[$CXXFLAG_WERROR]])

  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all
  ## unknown options if any other warning is produced. Test the -Wfoo case, and
  ## set the -Wno-foo case if it works.
  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-parameter"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-self-assign"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-local-typedef"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-deprecated-register"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-implicit-fallthrough"],,[[$CXXFLAG_WERROR]])
fi

# Check for optional instruction set support. Enabling these does _not_ imply that all code will
# be compiled with them, rather that specific objects/libs may use them after checking for runtime
# compatibility.
AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS="-msse4.2"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS="-msse4.1"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS="-mavx -mavx2"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS="-msse4 -msha"]],,[[$CXXFLAG_WERROR]])

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SSE42_CXXFLAGS"
AC_MSG_CHECKING(for assembler crc32 support)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #if defined(_MSC_VER)
    #include <intrin.h>
    #elif defined(__GNUC__) && defined(__SSE4_2__)
    #include <nmmintrin.h>
    #endif
  ]],[[
    uint64_t l = 0;
    l = _mm_crc32_u8(l, 0);
    l = _mm_crc32_u32(l, 0);
    l = _mm_crc32_u64(l, 0);
    return l;
  ]])],
 [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SSE41_CXXFLAGS"
AC_MSG_CHECKING(for SSE4.1 intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m128i l = _mm_set1_epi32(0);
    return _mm_extract_epi32(l, 3);
  ]])],
 [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $AVX2_CXXFLAGS"
AC_MSG_CHECKING(for AVX2 intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m256i l = _mm256_set1_epi32(0);
    return _mm256_extract_epi32(l, 7);
  ]])],
 [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SHANI_CXXFLAGS"
AC_MSG_CHECKING(for SHA-NI intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m128i i = _mm_set1_epi32(0);
    __m128i j = _mm_set1_epi32(1);
    __m128i k = _mm_set1_epi32(2);
    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);
  ]])],
 [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

CPPFLAGS="$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS"

AC_ARG_WITH([utils],
  [AS_HELP_STRING([--with-utils],
  [build bitcoin-cli bitcoin-tx (default=yes)])],
  [build_bitcoin_utils=$withval],
  [build_bitcoin_utils=yes])

AC_ARG_WITH([libs],
  [AS_HELP_STRING([--with-libs],
  [build libraries (default=yes)])],
  [build_bitcoin_libs=$withval],
  [build_bitcoin_libs=yes])

AC_ARG_WITH([daemon],
  [AS_HELP_STRING([--with-daemon],
  [build bitcoind daemon (default=yes)])],
  [build_bitcoind=$withval],
  [build_bitcoind=yes])

use_pkgconfig=yes
case $host in
  *mingw*)

     #pkgconfig does more harm than good with MinGW
     use_pkgconfig=no

     TARGET_OS=windows
     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(libmingwthrd missing))
     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(libkernel32 missing))
     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(libuser32 missing))
     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(libgdi32 missing))
     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(libcomdlg32 missing))
     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(libwinspool missing))
     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(libwinmm missing))
     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(libshell32 missing))
     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(libcomctl32 missing))
     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(libole32 missing))
     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(liboleaut32 missing))
     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(libuuid missing))
     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(librpcrt4 missing))
     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(libadvapi32 missing))
     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(libws2_32 missing))
     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(libmswsock missing))
     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))
     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))
     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))

     # -static is interpreted by libtool, where it has a different meaning.
     # In libtool-speak, it's -all-static.
     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS="$LIBTOOL_APP_LDFLAGS -all-static"])

     AC_PATH_PROG([MAKENSIS], [makensis], none)
     if test x$MAKENSIS = xnone; then
       AC_MSG_WARN("makensis not found. Cannot create installer.")
     fi

     AC_PATH_TOOL(WINDRES, windres, none)
     if test x$WINDRES = xnone; then
       AC_MSG_ERROR("windres not found")
     fi

     CPPFLAGS="$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB"
     LEVELDB_TARGET_FLAGS="-DOS_WINDOWS"
     if test "x$CXXFLAGS_overridden" = "xno"; then
       CXXFLAGS="$CXXFLAGS -w"
     fi
     case $host in
       i?86-*) WINDOWS_BITS=32 ;;
       x86_64-*) WINDOWS_BITS=64 ;;
       *) AC_MSG_ERROR("Could not determine win32/win64 for installer") ;;
     esac
     AC_SUBST(WINDOWS_BITS)

     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.
     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override
     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are
     dnl also overridden to prevent their insertion later.
     dnl This should only affect dll's.
     archive_cmds_CXX="\$CC -shared \$libobjs \$deplibs \$compiler_flags -static -o \$output_objdir/\$soname \${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \$lib"
     postdeps_CXX=

     ;;
  *darwin*)
     TARGET_OS=darwin
     LEVELDB_TARGET_FLAGS="-DOS_MACOSX"
     if  test x$cross_compiling != xyes; then
       BUILD_OS=darwin
       AC_CHECK_PROG([PORT],port, port)
       if test x$PORT = xport; then
         dnl add default macports paths
         CPPFLAGS="$CPPFLAGS -isystem /opt/local/include"
         LIBS="$LIBS -L/opt/local/lib"
         if test -d /opt/local/include/db48; then
           CPPFLAGS="$CPPFLAGS -I/opt/local/include/db48"
           LIBS="$LIBS -L/opt/local/lib/db48"
         fi
       fi

       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)
       AC_CHECK_PROG([BREW],brew, brew)
       if test x$BREW = xbrew; then
         dnl These Homebrew packages may be keg-only, meaning that they won't be found
         dnl in expected paths because they may conflict with system files. Ask
         dnl Homebrew where each one is located, then adjust paths accordingly.
         dnl It's safe to add these paths even if the functionality is disabled by
         dnl the user (--without-wallet or --without-gui for example).

         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`
         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`
         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`
         if test x$openssl_prefix != x; then
           PKG_CONFIG_PATH="$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
           export PKG_CONFIG_PATH
         fi
         if test x$bdb_prefix != x; then
           CPPFLAGS="$CPPFLAGS -I$bdb_prefix/include"
           LIBS="$LIBS -L$bdb_prefix/lib"
         fi
         if test x$qt5_prefix != x; then
           PKG_CONFIG_PATH="$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
           export PKG_CONFIG_PATH
         fi
       fi
     else
       case $build_os in
         *darwin*)
           BUILD_OS=darwin
           ;;
         *)
           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)
           AC_PATH_TOOL([OTOOL], [otool], otool)
           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)
           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)
           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)
           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)

           dnl libtool will try to strip the static lib, which is a problem for
           dnl cross-builds because strip attempts to call a hard-coded ld,
           dnl which may not exist in the path. Stripping the .a is not
           dnl necessary, so just disable it.
           old_striplib=
           ;;
       esac
     fi

     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS="$LDFLAGS -Wl,-headerpad_max_install_names"])
     CPPFLAGS="$CPPFLAGS -DMAC_OSX"
     OBJCXXFLAGS="$CXXFLAGS"
     ;;
   *android*)
     dnl make sure android stays above linux for hosts like *linux-android*
     LEVELDB_TARGET_FLAGS="-DOS_ANDROID"
     ;;
   *linux*)
     TARGET_OS=linux
     LEVELDB_TARGET_FLAGS="-DOS_LINUX"
     ;;
   *kfreebsd*)
     LEVELDB_TARGET_FLAGS="-DOS_KFREEBSD"
     ;;
   *freebsd*)
     LEVELDB_TARGET_FLAGS="-DOS_FREEBSD"
     ;;
   *openbsd*)
     LEVELDB_TARGET_FLAGS="-DOS_OPENBSD"
     ;;
   *netbsd*)
     LEVELDB_TARGET_FLAGS="-DOS_NETBSD"
     ;;
   *dragonfly*)
     LEVELDB_TARGET_FLAGS="-DOS_DRAGONFLYBSD"
     ;;
   *solaris*)
     LEVELDB_TARGET_FLAGS="-DOS_SOLARIS"
     ;;
   *hpux*)
     LEVELDB_TARGET_FLAGS="-DOS_HPUX"
     ;;
   *)
     AC_MSG_ERROR(Cannot build leveldb for $host. Please file a bug report.)
     ;;
esac

if test x$use_pkgconfig = xyes; then
  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])
  m4_ifdef([PKG_PROG_PKG_CONFIG], [
  PKG_PROG_PKG_CONFIG
  if test x"$PKG_CONFIG" = "x"; then
    AC_MSG_ERROR(pkg-config not found.)
  fi
  ])
fi

if test x$use_extended_functional_tests != xno; then
  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)
fi

if test x$use_lcov = xyes; then
  if test x$LCOV = x; then
    AC_MSG_ERROR("lcov testing requested but lcov not found")
  fi
  if test x$GCOV = x; then
    AC_MSG_ERROR("lcov testing requested but gcov not found")
  fi
  if test x$PYTHON = x; then
    AC_MSG_ERROR("lcov testing requested but python not found")
  fi
  if test x$GENHTML = x; then
    AC_MSG_ERROR("lcov testing requested but genhtml not found")
  fi
  LCOV="$LCOV --gcov-tool=$GCOV"
  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS="$LDFLAGS --coverage"],
    [AC_MSG_ERROR("lcov testing requested but --coverage linker flag does not work")])
  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS="$CXXFLAGS --coverage"],
    [AC_MSG_ERROR("lcov testing requested but --coverage flag does not work")])
  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])
  CXXFLAGS="$CXXFLAGS -Og"
fi

if test x$use_lcov_branch != xno; then
  AC_SUBST(LCOV_OPTS, "$LCOV_OPTS --rc lcov_branch_coverage=1")
fi

dnl Check for endianness
AC_C_BIGENDIAN

dnl Check for pthread compile/link requirements
AX_PTHREAD

# The following macro will add the necessary defines to bitcoin-config.h, but
# they also need to be passed down to any subprojects. Pull the results out of
# the cache and add them to CPPFLAGS.
AC_SYS_LARGEFILE
# detect POSIX or GNU variant of strerror_r
AC_FUNC_STRERROR_R

if test x$ac_cv_sys_file_offset_bits != x &&
   test x$ac_cv_sys_file_offset_bits != xno &&
   test x$ac_cv_sys_file_offset_bits != xunknown; then
  CPPFLAGS="$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits"
fi

if test x$ac_cv_sys_large_files != x &&
   test x$ac_cv_sys_large_files != xno &&
   test x$ac_cv_sys_large_files != xunknown; then
  CPPFLAGS="$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files"
fi

AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS="$LDFLAGS -Wl,--large-address-aware"])

AX_GCC_FUNC_ATTRIBUTE([visibility])
AX_GCC_FUNC_ATTRIBUTE([dllexport])
AX_GCC_FUNC_ATTRIBUTE([dllimport])

if test x$use_glibc_compat != xno; then

  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link
  #in anyway for back-compat.
  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(librt missing))

  #__fdelt_chk's params and return type have changed from long unsigned int to long int.
  # See which one is present here.
  AC_MSG_CHECKING(__fdelt_chk type)
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE
                    #undef _FORTIFY_SOURCE
                  #endif
                  #define _FORTIFY_SOURCE 2
                  #include <sys/select.h>
     extern "C" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],
    [ fdelt_type="long unsigned int"],
    [ fdelt_type="long int"])
  AC_MSG_RESULT($fdelt_type)
  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])
  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4"])
  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=log2f"])
else
  AC_SEARCH_LIBS([clock_gettime],[rt])
fi

if test "x$enable_gprof" = xyes; then
    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,
    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force
    dnl -pie by default, in which case it needs to be turned off with -no-pie.

    if test x$use_hardening = xyes; then
        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)
    fi
    use_hardening=no
    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS="-pg"],
        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])

    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS="-no-pie"])
    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS="$GPROF_LDFLAGS -pg"],
        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])
fi

if test x$TARGET_OS != xwindows; then
  # All windows code is PIC, forcing it on just adds useless compile warnings
  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS="-fPIC"])
fi

if test x$use_hardening != xno; then
  use_hardening=yes
  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -Wstack-protector"])
  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -fstack-protector-all"])

  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[
    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[
      HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE"
    ])
    HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2"
  ])

  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--dynamicbase"])
  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--nxcompat"])
  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--high-entropy-va"])
  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,relro"])
  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,now"])
  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS="-fPIE"; HARDENED_LDFLAGS="$HARDENED_LDFLAGS -pie"],, [[$CXXFLAG_WERROR]])

  case $host in
    *mingw*)
       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))
    ;;
  esac
fi

dnl this flag screws up non-darwin gcc even when the check fails. special-case it.
if test x$TARGET_OS = xdarwin; then
  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS="$LDFLAGS -Wl,-dead_strip"])
fi

AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])

AC_CHECK_DECLS([strnlen])

# Check for daemon(3), unrelated to --with-daemon (although used by it)
AC_CHECK_DECLS([daemon])

AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,
		[#if HAVE_ENDIAN_H
                 #include <endian.h>
                 #elif HAVE_SYS_ENDIAN_H
                 #include <sys/endian.h>
                 #endif])

AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,
		[#if HAVE_BYTESWAP_H
                 #include <byteswap.h>
                 #endif])

AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])

dnl Check for malloc_info (for memory statistics information in getmemoryinfo)
AC_MSG_CHECKING(for getmemoryinfo)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],
 [[ int f = malloc_info(0, NULL); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],
 [ AC_MSG_RESULT(no)]
)

dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)
AC_MSG_CHECKING(for mallopt M_ARENA_MAX)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],
 [[ mallopt(M_ARENA_MAX, 1); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING([for visibility attribute])
AC_LINK_IFELSE([AC_LANG_SOURCE([
  int foo_def( void ) __attribute__((visibility("default")));
  int main(){}
  ])],
  [
    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])
    AC_MSG_RESULT(yes)
  ],
  [
    AC_MSG_RESULT(no)
    if test x$use_reduce_exports = xyes; then
      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])
    fi
  ]
)

TEMP_LDFLAGS="$LDFLAGS"
LDFLAGS="$TEMP_LDFLAGS $PTHREAD_CFLAGS"
AC_MSG_CHECKING([for thread_local support])
AC_LINK_IFELSE([AC_LANG_SOURCE([
  #include <thread>
  static thread_local int foo = 0;
  static void run_thread() { foo++;}
  int main(){
  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}
  return foo;
  }
  ])],
  [
    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])
    AC_MSG_RESULT(yes)
  ],
  [
    AC_MSG_RESULT(no)
  ]
)
LDFLAGS="$TEMP_LDFLAGS"

# Check for different ways of gathering OS randomness
AC_MSG_CHECKING(for Linux getrandom syscall)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>
  #include <sys/syscall.h>
  #include <linux/random.h>]],
 [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for getentropy)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],
 [[ getentropy(nullptr, 32) ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for getentropy via random.h)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>
 #include <sys/random.h>]],
 [[ getentropy(nullptr, 32) ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for sysctl KERN_ARND)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
  #include <sys/sysctl.h>]],
 [[ static const int name[2] = {CTL_KERN, KERN_ARND};
    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for if type char equals int8_t)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>
  #include <type_traits>]],
 [[ static_assert(std::is_same<int8_t, char>::value, ""); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],
 [ AC_MSG_RESULT(no)]
)

# Check for reduced exports
if test x$use_reduce_exports = xyes; then
  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS="-fvisibility=hidden"],
  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])
fi

LEVELDB_CPPFLAGS=
LIBLEVELDB=
LIBMEMENV=
AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])
AC_SUBST(LEVELDB_CPPFLAGS)
AC_SUBST(LIBLEVELDB)
AC_SUBST(LIBMEMENV)

if test x$enable_wallet != xno; then
    dnl Check for libdb_cxx only if wallet enabled
    BITCOIN_FIND_BDB48
fi

dnl Check for libminiupnpc (optional)
if test x$use_upnp != xno; then
  AC_CHECK_HEADERS(
    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],
    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],
    [have_miniupnpc=no]
  )
fi

BITCOIN_QT_INIT

dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus
BITCOIN_QT_CONFIGURE([$use_pkgconfig])

if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then
    use_boost=no
else
    use_boost=yes
fi

if test x$use_boost = xyes; then

dnl Minimum required Boost version
define(MINIMUM_REQUIRED_BOOST, 1.47.0)

dnl Check for boost libs
AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])
if test x$want_boost = xno; then
    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])
fi
AX_BOOST_SYSTEM
AX_BOOST_FILESYSTEM
AX_BOOST_THREAD
AX_BOOST_CHRONO

dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic
dnl counter implementations. In 1.63 and later the std::atomic approach is default.
m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro
BOOST_CPPFLAGS="-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS"

if test x$use_reduce_exports = xyes; then
  AC_MSG_CHECKING([for working boost reduced exports])
  TEMP_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$BOOST_CPPFLAGS $CPPFLAGS"
  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
      @%:@include <boost/version.hpp>
    ]], [[
      #if BOOST_VERSION >= 104900
      // Everything is okay
      #else
      #  error Boost version is too old
      #endif
    ]])],[
      AC_MSG_RESULT(yes)
    ],[
    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])
  ])
  CPPFLAGS="$TEMP_CPPFLAGS"
fi
fi

if test x$use_reduce_exports = xyes; then
    CXXFLAGS="$CXXFLAGS $RE_CXXFLAGS"
    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS="-Wl,--exclude-libs,ALL"])
fi

if test x$use_tests = xyes; then

  if test x$HEXDUMP = x; then
    AC_MSG_ERROR(hexdump is required for tests)
  fi


  if test x$use_boost = xyes; then

  AX_BOOST_UNIT_TEST_FRAMEWORK

  dnl Determine if -DBOOST_TEST_DYN_LINK is needed
  AC_MSG_CHECKING([for dynamic linked boost test])
  TEMP_LIBS="$LIBS"
  LIBS="$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB"
  TEMP_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
  AC_LINK_IFELSE([AC_LANG_SOURCE([
       #define BOOST_TEST_DYN_LINK
       #define BOOST_TEST_MAIN
        #include <boost/test/unit_test.hpp>

       ])],
    [AC_MSG_RESULT(yes)]
    [TESTDEFS="$TESTDEFS -DBOOST_TEST_DYN_LINK"],
    [AC_MSG_RESULT(no)])
  LIBS="$TEMP_LIBS"
  CPPFLAGS="$TEMP_CPPFLAGS"

  fi
fi

if test x$use_boost = xyes; then

BOOST_LIBS="$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB"


dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums
dnl using c++98 constructs. Unfortunately, this implementation detail leaked into
dnl the abi. This was fixed in 1.57.

dnl When building against that installed version using c++11, the headers pick up
dnl on the native c++11 scoped enum support and enable it, however it will fail to
dnl link. This can be worked around by disabling c++11 scoped enums if linking will
dnl fail.
dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.

TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/config.hpp>
  #include <boost/version.hpp>
  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700
  #define BOOST_NO_SCOPED_ENUMS
  #define BOOST_NO_CXX11_SCOPED_ENUMS
  #define CHECK
  #endif
  #include <boost/filesystem.hpp>
  ]],[[
  #if defined(CHECK)
    boost::filesystem::copy_file("foo", "bar");
  #else
    choke;
  #endif
  ]])],
  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS="$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS"], 

[AC_MSG_RESULT(ok)])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"

dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however
dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if
dnl a working version is available, else fall back to sleep. sleep was removed
dnl after 1.56.
dnl If neither is available, abort.
TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/thread/thread.hpp>
  #include <boost/version.hpp>
  ]],[[
  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)
      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));
  #else
   choke me
  #endif
  ]])],
  [boost_sleep=yes;
     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],
  [boost_sleep=no])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"

if test x$boost_sleep != xyes; then
TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/version.hpp>
  #include <boost/thread.hpp>
  #include <boost/date_time/posix_time/posix_time_types.hpp>
  ]],[[
  #if BOOST_VERSION <= 105600
      boost::this_thread::sleep(boost::posix_time::milliseconds(0));
  #else
   choke me
  #endif
  ]])],
  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],
  [boost_sleep=no])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"
fi

if test x$boost_sleep != xyes; then
  AC_MSG_ERROR(No working boost sleep implementation found.)
fi

fi

if test x$use_pkgconfig = xyes; then
  : dnl
  m4_ifdef(
    [PKG_CHECK_MODULES],
    [
      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])
      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])
      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])
      if test x$use_qr != xno; then
        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])
      fi
      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then
        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])
        if test x$TARGET_OS != xwindows; then
          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])
        fi
      fi

      if test "x$use_zmq" = "xyes"; then
        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],
          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],
          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])
           use_zmq=no])
      else
          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
      fi
    ]
  )
else
  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))
  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))

  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)
  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))

  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then
    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)
    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))
    if test x$TARGET_OS != xwindows; then
      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))
    fi
  fi

  if test "x$use_zmq" = "xyes"; then
     AC_CHECK_HEADER([zmq.h],
       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],
       [AC_MSG_WARN([zmq.h not found, disabling zmq support])
        use_zmq=no
        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])
     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,
       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])
        use_zmq=no
        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])
  else
    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
  fi

  if test "x$use_zmq" = "xyes"; then
    dnl Assume libzmq was built for static linking
    case $host in
      *mingw*)
        ZMQ_CFLAGS="$ZMQ_CFLAGS -DZMQ_STATIC"
      ;;
    esac
  fi

  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))
  if test x$use_qr != xno; then
    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])
    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])
  fi
fi

save_CXXFLAGS="${CXXFLAGS}"
CXXFLAGS="${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}"
AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT
#include <openssl/x509_vfy.h>
])
CXXFLAGS="${save_CXXFLAGS}"

dnl univalue check

need_bundled_univalue=yes

if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then
  need_bundled_univalue=no
else

if test x$system_univalue != xno ; then
  found_univalue=no
  if test x$use_pkgconfig = xyes; then
    : #NOP
    m4_ifdef(
      [PKG_CHECK_MODULES],
      [
        PKG_CHECK_MODULES([UNIVALUE],[libunivalue >= 1.0.4],[found_univalue=yes],[true])
      ]
    )
  else
    AC_CHECK_HEADER([univalue.h],[
      AC_CHECK_LIB([univalue],  [main],[
        UNIVALUE_LIBS=-lunivalue
        found_univalue=yes
      ],[true])
    ],[true])
  fi

  if test x$found_univalue = xyes ; then
    system_univalue=yes
    need_bundled_univalue=no
  elif test x$system_univalue = xyes ; then
    AC_MSG_ERROR([univalue not found])
  else
    system_univalue=no
  fi
fi

if test x$need_bundled_univalue = xyes ; then
  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'
  UNIVALUE_LIBS='univalue/libunivalue.la'
fi

fi

AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])
AC_SUBST(UNIVALUE_CFLAGS)
AC_SUBST(UNIVALUE_LIBS)

BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)

AC_MSG_CHECKING([whether to build bitcoind])
AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])
AC_MSG_RESULT($build_bitcoind)

AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])
AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])
AC_MSG_RESULT($build_bitcoin_utils)

AC_MSG_CHECKING([whether to build libraries])
AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])
if test x$build_bitcoin_libs = xyes; then
  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])
  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])
fi
AC_MSG_RESULT($build_bitcoin_libs)

AC_LANG_POP

if test "x$use_ccache" != "xno"; then
  AC_MSG_CHECKING(if ccache should be used)
  if test x$CCACHE = x; then
    if test "x$use_ccache" = "xyes"; then
      AC_MSG_ERROR([ccache not found.]);
    else
      use_ccache=no
    fi
  else
    use_ccache=yes
    CC="$ac_cv_path_CCACHE $CC"
    CXX="$ac_cv_path_CCACHE $CXX"
  fi
  AC_MSG_RESULT($use_ccache)
fi
if test "x$use_ccache" = "xyes"; then
    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS="-Qunused-arguments $CPPFLAGS"])
fi

dnl enable wallet
AC_MSG_CHECKING([if wallet should be enabled])
if test x$enable_wallet != xno; then
  AC_MSG_RESULT(yes)
  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])

else
  AC_MSG_RESULT(no)
fi

dnl enable upnp support
AC_MSG_CHECKING([whether to build with support for UPnP])
if test x$have_miniupnpc = xno; then
  if test x$use_upnp = xyes; then
     AC_MSG_ERROR("UPnP requested but cannot be built. use --without-miniupnpc")
  fi
  AC_MSG_RESULT(no)
else
  if test x$use_upnp != xno; then
    AC_MSG_RESULT(yes)
    AC_MSG_CHECKING([whether to build with UPnP enabled by default])
    use_upnp=yes
    upnp_setting=0
    if test x$use_upnp_default != xno; then
      use_upnp_default=yes
      upnp_setting=1
    fi
    AC_MSG_RESULT($use_upnp_default)
    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])
    if test x$TARGET_OS = xwindows; then
      MINIUPNPC_CPPFLAGS="-DSTATICLIB -DMINIUPNP_STATICLIB"
    fi
  else
    AC_MSG_RESULT(no)
  fi
fi

dnl these are only used when qt is enabled
BUILD_TEST_QT=""
if test x$bitcoin_enable_qt != xno; then
  dnl enable dbus support
  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])
  if test x$bitcoin_enable_qt_dbus != xno; then
    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])
  fi
  AC_MSG_RESULT($bitcoin_enable_qt_dbus)

  dnl enable qr support
  AC_MSG_CHECKING([whether to build GUI with support for QR codes])
  if test x$have_qrencode = xno; then
    if test x$use_qr = xyes; then
     AC_MSG_ERROR("QR support requested but cannot be built. use --without-qrencode")
    fi
    AC_MSG_RESULT(no)
  else
    if test x$use_qr != xno; then
      AC_MSG_RESULT(yes)
      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])
      use_qr=yes
    else
      AC_MSG_RESULT(no)
    fi
  fi

  if test x$XGETTEXT = x; then
    AC_MSG_WARN("xgettext is required to update qt translations")
  fi

  AC_MSG_CHECKING([whether to build test_bitcoin-qt])
  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then
    AC_MSG_RESULT([yes])
    BUILD_TEST_QT="yes"
  else
    AC_MSG_RESULT([no])
  fi
fi

AM_CONDITIONAL([ENABLE_ZMQ], [test "x$use_zmq" = "xyes"])

AC_MSG_CHECKING([whether to build test_bitcoin])
if test x$use_tests = xyes; then
  AC_MSG_RESULT([yes])
  BUILD_TEST="yes"
else
  AC_MSG_RESULT([no])
  BUILD_TEST=""
fi

AC_MSG_CHECKING([whether to reduce exports])
if test x$use_reduce_exports = xyes; then
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi

if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then
  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])
fi

AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])
AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])
AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])
AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])
AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])
AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])
AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])
AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])
AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])
AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])
AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])
AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])
AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])
AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])
AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])
AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])
AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])

AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])
AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])
AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])
AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])
AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])
AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])
AC_DEFINE(COPYRIGHT_HOLDERS, "_COPYRIGHT_HOLDERS", [Copyright holder(s) before %s replacement])
AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, "_COPYRIGHT_HOLDERS_SUBSTITUTION", [Replacement for %s in copyright holders string])
define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])
AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, "_COPYRIGHT_HOLDERS_FINAL", [Copyright holder(s)])
AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)
AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)
AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)
AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)
AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)
AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)
AC_SUBST(COPYRIGHT_HOLDERS, "_COPYRIGHT_HOLDERS")
AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, "_COPYRIGHT_HOLDERS_SUBSTITUTION")
AC_SUBST(COPYRIGHT_HOLDERS_FINAL, "_COPYRIGHT_HOLDERS_FINAL")
AC_SUBST(BITCOIN_DAEMON_NAME)
AC_SUBST(BITCOIN_GUI_NAME)
AC_SUBST(BITCOIN_CLI_NAME)
AC_SUBST(BITCOIN_TX_NAME)

AC_SUBST(RELDFLAGS)
AC_SUBST(DEBUG_CPPFLAGS)
AC_SUBST(WARN_CXXFLAGS)
AC_SUBST(NOWARN_CXXFLAGS)
AC_SUBST(DEBUG_CXXFLAGS)
AC_SUBST(COMPAT_LDFLAGS)
AC_SUBST(ERROR_CXXFLAGS)
AC_SUBST(GPROF_CXXFLAGS)
AC_SUBST(GPROF_LDFLAGS)
AC_SUBST(HARDENED_CXXFLAGS)
AC_SUBST(HARDENED_CPPFLAGS)
AC_SUBST(HARDENED_LDFLAGS)
AC_SUBST(PIC_FLAGS)
AC_SUBST(PIE_FLAGS)
AC_SUBST(SANITIZER_CXXFLAGS)
AC_SUBST(SANITIZER_LDFLAGS)
AC_SUBST(SSE42_CXXFLAGS)
AC_SUBST(SSE41_CXXFLAGS)
AC_SUBST(AVX2_CXXFLAGS)
AC_SUBST(SHANI_CXXFLAGS)
AC_SUBST(LIBTOOL_APP_LDFLAGS)
AC_SUBST(USE_UPNP)
AC_SUBST(USE_QRCODE)
AC_SUBST(BOOST_LIBS)
AC_SUBST(TESTDEFS)
AC_SUBST(LEVELDB_TARGET_FLAGS)
AC_SUBST(MINIUPNPC_CPPFLAGS)
AC_SUBST(MINIUPNPC_LIBS)
AC_SUBST(CRYPTO_LIBS)
AC_SUBST(SSL_LIBS)
AC_SUBST(EVENT_LIBS)
AC_SUBST(EVENT_PTHREADS_LIBS)
AC_SUBST(ZMQ_LIBS)
AC_SUBST(PROTOBUF_LIBS)
AC_SUBST(QR_LIBS)
AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])
AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])
AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])
AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])
AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])
AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])
AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])

dnl boost's m4 checks do something really nasty: they export these vars. As a
dnl result, they leak into secp256k1's configure and crazy things happen.
dnl Until this is fixed upstream and we've synced, we'll just un-export them.
CPPFLAGS_TEMP="$CPPFLAGS"
unset CPPFLAGS
CPPFLAGS="$CPPFLAGS_TEMP"

LDFLAGS_TEMP="$LDFLAGS"
unset LDFLAGS
LDFLAGS="$LDFLAGS_TEMP"

LIBS_TEMP="$LIBS"
unset LIBS
LIBS="$LIBS_TEMP"

PKGCONFIG_PATH_TEMP="$PKG_CONFIG_PATH"
unset PKG_CONFIG_PATH
PKG_CONFIG_PATH="$PKGCONFIG_PATH_TEMP"

PKGCONFIG_LIBDIR_TEMP="$PKG_CONFIG_LIBDIR"
unset PKG_CONFIG_LIBDIR
PKG_CONFIG_LIBDIR="$PKGCONFIG_LIBDIR_TEMP"

if test x$need_bundled_univalue = xyes; then
  AC_CONFIG_SUBDIRS([src/univalue])
fi

ac_configure_args="${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni"
AC_CONFIG_SUBDIRS([src/secp256k1])

AC_OUTPUT

dnl Taken from https://wiki.debian.org/RpathIssue
case $host in
   *-*-linux-gnu)
     AC_MSG_RESULT([Fixing libtool for -rpath problems.])
     sed < libtool > libtool-2 \
     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/'
     mv libtool-2 libtool
     chmod 755 libtool
   ;;
esac

dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows
case ${OS} in
   *Windows*)
     sed  's/BUILDDIR="\/\([[a-z]]\)/BUILDDIR="\1:/'  test/config.ini > test/config-2.ini
     mv test/config-2.ini test/config.ini
   ;;
esac

echo
echo "Options used to compile and link:"
echo "  with wallet   = $enable_wallet"
echo "  with gui / qt = $bitcoin_enable_qt"
if test x$bitcoin_enable_qt != xno; then
    echo "    with qr     = $use_qr"
fi
echo "  with zmq      = $use_zmq"
echo "  with test     = $use_tests"
echo "  with bench    = $use_bench"
echo "  with upnp     = $use_upnp"
echo "  use asm       = $use_asm"
echo "  sanitizers    = $use_sanitizers"
echo "  debug enabled = $enable_debug"
echo "  gprof enabled = $enable_gprof"
echo "  werror        = $enable_werror"
echo
echo "  target os     = $TARGET_OS"
echo "  build os      = $BUILD_OS"
echo
echo "  CC            = $CC"
echo "  CFLAGS        = $CFLAGS"
echo "  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS"
echo "  CXX           = $CXX"
echo "  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS"
echo "  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS"
echo "  ARFLAGS       = $ARFLAGS"
echo
From:
"Mass Mason" <1st@musician.org>
To:
"Mass Mason" <1st@musician.org>
Date:
Sep 13, 2018 6:58:58 PM
<svg width="907" height="6720"NAME*
Tunecoin
EMAIL*
1st@musician.org
TICKER*
MC$
ALGO*
add_definitions(-DSTATICLIB) file(GLOB_RECURSE COMMON common/*) file(GLOB_RECURSE CRYPTO crypto/*) file(GLOB_RECURSE CRYPTONOTE_CORE 

cryptonote_core/*) file(GLOB_RECURSE CRYPTONOTE_PROTOCOL cryptonote_protocol/*) file(GLOB_RECURSE DAEMON daemon/*) file(GLOB_RECURSE P2P p2p/*) file

(GLOB_RECURSE RPC rpc/*) file(GLOB_RECURSE SIMPLEWALLET simplewallet/*) file(GLOB_RECURSE CONN_TOOL connectivity_tool/*) file(GLOB_RECURSE WALLET 

wallet/*) file(GLOB_RECURSE MINER miner/*) source_group(common FILES ${COMMON}) source_group(crypto FILES ${CRYPTO}) source_group(cryptonote_core FILES 

${CRYPTONOTE_CORE}) source_group(cryptonote_protocol FILES ${CRYPTONOTE_PROTOCOL}) source_group(daemon FILES ${DAEMON}) source_group(p2p FILES 

${P2P}) source_group(rpc FILES ${RPC}) source_group(simplewallet FILES ${SIMPLEWALLET}) source_group(connectivity-tool FILES ${CONN_TOOL}) source_group(wallet 

FILES ${WALLET}) source_group(simpleminer FILES ${MINER}) add_library(common ${COMMON}) add_library(crypto ${CRYPTO}) add_library(cryptonote_core 

${CRYPTONOTE_CORE}) add_executable(daemon ${DAEMON} ${P2P} ${CRYPTONOTE_PROTOCOL}) add_executable(connectivity_tool ${CONN_TOOL}) add_executable

(simpleminer ${MINER}) target_link_libraries(daemon rpc cryptonote_core crypto common upnpc-static ${Boost_LIBRARIES}) target_link_libraries(connectivity_tool cryptonote_core 

crypto common ${Boost_LIBRARIES}) target_link_libraries(simpleminer cryptonote_core crypto common ${Boost_LIBRARIES}) add_library(rpc ${RPC}) add_library(wallet 

${WALLET}) add_executable(simplewallet ${SIMPLEWALLET} ) target_link_libraries(simplewallet wallet rpc cryptonote_core crypto common upnpc-static ${Boost_LIBRARIES}) 

add_dependencies(daemon version) add_dependencies(rpc version) add_dependencies(simplewallet version) set_property(TARGET common crypto cryptonote_core rpc wallet 

PROPERTY FOLDER "libs") set_property(TARGET daemon simplewallet connectivity_tool simpleminer PROPERTY FOLDER "prog") #TODO Specify the name of daemon for your 

currency #set_property(TARGET daemon PROPERTY OUTPUT_NAME "cryptonoted")
BLOCK TIME, SEC*
0.111
REWARD, COINS PER BLOCKS
1
HALFING REWARD CYCLE, BLOCKS
TOTAL COINS
333000616
PREMINE COINS
21000000
DIFFICULTY CYCLE, BLOCKS
None
TRANSACTION CONFIRMATION, BLOCKS
3
COIN MATURITY, BLOCKS
$
ANNUAL INTEREST, %
100
SEND><g transform="translate(100,50)scale(1,1)"><path class="link" id="link-NMC-NMC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,11.539792387543253 

707,11.539792387543253"></path><path class="link" id="link-LUC-LUC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,23.079584775086506 

707,23.079584775086506"></path><path class="link" id="link-POD-POD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,34.61937716262975 

707,34.61937716262975"></path><path class="link" id="link-PWNY-PWNY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,57.69896193771627 

707,57.69896193771627"></path><path class="link" id="link-ORO-ORO" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,69.2387543252595 

707,69.2387543252595"></path><path class="link" id="link-ATC-ATC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,80.77854671280276 

707,80.77854671280276"></path><path class="link" id="link-BEN-BEN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,92.31833910034602 

707,92.31833910034602"></path><path class="link" id="link-HXC-HXC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,103.85813148788927 

707,103.85813148788927"></path><path class="link" id="link-CTD-CTD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,115.39792387543254 

707,115.39792387543254"></path><path class="link" id="link-RIC-RIC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,126.93771626297578 

707,126.93771626297578"></path><path class="link" id="link-ARS-ARS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,138.477508650519 

707,138.477508650519"></path><path class="link" id="link-TAK-TAK" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,150.0173010380623 

707,150.0173010380623"></path><path class="link" id="link-PPCD-PPCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,161.55709342560553 

707,161.55709342560553"></path><path class="link" id="link-LOOT-LOOT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,173.0968858131488 

707,173.0968858131488"></path><path class="link" id="link-CX-CX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,184.63667820069205 

707,184.63667820069205"></path><path class="link" id="link-LGBT-LGBT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,196.1764705882353 

707,196.1764705882353"></path><path class="link" id="link-ABC-ABC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,207.71626297577853 

707,207.71626297577853"></path><path class="link" id="link-INK-INK" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,219.2560553633218 

707,219.2560553633218"></path><path class="link" id="link-PRO-PRO" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,230.79584775086508 

707,230.79584775086508"></path><path class="link" id="link-SPICE-SPICE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,242.3356401384083 

707,242.3356401384083"></path><path class="link" id="link-EIC-EIC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,253.87543252595157 

707,253.87543252595157"></path><path class="link" id="link-FUD-FUD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,265.4152249134948 

707,265.4152249134948"></path><path class="link" id="link-ChC-ChC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,276.955017301038 

707,276.955017301038"></path><path class="link" id="link-AAC-AAC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,288.4948096885813 

707,288.4948096885813"></path><path class="link" id="link-BULL-BULL" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,300.0346020761246 

707,300.0346020761246"></path><path class="link" id="link-SSC-SSC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,311.57439446366783 

707,311.57439446366783"></path><path class="link" id="link-GSY-GSY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,323.11418685121106 

707,323.11418685121106"></path><path class="link" id="link-SNC-SNC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,334.6539792387543 

707,334.6539792387543"></path><path class="link" id="link-ODNT-ODNT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,346.1937716262976 

707,346.1937716262976"></path><path class="link" id="link-GLB-GLB" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,357.73356401384086 

707,357.73356401384086"></path><path class="link" id="link-PHR-PHR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,369.2733564013841 

707,369.2733564013841"></path><path class="link" id="link-KMC-KMC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,380.8131487889273 

707,380.8131487889273"></path><path class="link" id="link-STEPS-STEPS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,392.3529411764706 

707,392.3529411764706"></path><path class="link" id="link-HUC-HUC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,403.89273356401384 

707,403.89273356401384"></path><path class="link" id="link-LOG-LOG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,415.43252595155707 

707,415.43252595155707"></path><path class="link" id="link-Curecoin-Curecoin" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,426.9723183391003 

707,426.9723183391003"></path><path class="link" id="link-GUINEA-GUINEA" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,438.5121107266436 

707,438.5121107266436"></path><path class="link" id="link-NYM-NYM" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,450.05190311418687 

707,450.05190311418687"></path><path class="link" id="link-SOV-SOV" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,461.59169550173016 

707,461.59169550173016"></path><path class="link" id="link-RKC-RKC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,473.1314878892734 

707,473.1314878892734"></path><path class="link" id="link-eTaler-eTaler" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,484.6712802768166 

707,484.6712802768166"></path><path class="link" id="link-FLIRT-FLIRT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,496.21107266435985 

707,496.21107266435985"></path><path class="link" id="link-BTCD-BTCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,507.75086505190313 

707,507.75086505190313"></path><path class="link" id="link-BET-BET" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,519.2906574394464 

707,519.2906574394464"></path><path class="link" id="link-ACOIN-ACOIN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,530.8304498269896 

707,530.8304498269896"></path><path class="link" id="link-ASC-ASC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,542.3702422145328 

707,542.3702422145328"></path><path class="link" id="link-TTY-TTY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,553.910034602076 

707,553.910034602076"></path><path class="link" id="link-URAN-URAN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,565.4498269896194 

707,565.4498269896194"></path><path class="link" id="link-UBTC-UBTC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,576.9896193771626 

707,576.9896193771626"></path><path class="link" id="link-TGC-TGC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,588.529411764706 

707,588.529411764706"></path><path class="link" id="link-BTI-BTI" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,600.0692041522492 

707,600.0692041522492"></path><path class="link" id="link-GRD-GRD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,611.6089965397924 

707,611.6089965397924"></path><path class="link" id="link-DOGEBC-DOGEBC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,623.1487889273357 

707,623.1487889273357"></path><path class="link" id="link-PIMP-PIMP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,634.6885813148789 

707,634.6885813148789"></path><path class="link" id="link-SSD-SSD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,646.2283737024221 

707,646.2283737024221"></path><path class="link" id="link-FLIRT-FLIRT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,657.7681660899653 

707,657.7681660899653"></path><path class="link" id="link-DRX-DRX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,669.3079584775086 

707,669.3079584775086"></path><path class="link" id="link-DECR-DECR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,680.8477508650519 

707,680.8477508650519"></path><path class="link" id="link-NEOS-NEOS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,692.3875432525952 

707,692.3875432525952"></path><path class="link" id="link-MEG-MEG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,703.9273356401384 

707,703.9273356401384"></path><path class="link" id="link-ASD-ASD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,715.4671280276817 

707,715.4671280276817"></path><path class="link" id="link-PAYER-PAYER" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,727.006920415225 

707,727.006920415225"></path><path class="link" id="link-REB-REB" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,738.5467128027682 

707,738.5467128027682"></path><path class="link" id="link-BTE-BTE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,750.0865051903114 

707,750.0865051903114"></path><path class="link" id="link-BIG-BIG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,761.6262975778546 

707,761.6262975778546"></path><path class="link" id="link-TRC-TRC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,773.1660899653979 

707,773.1660899653979"></path><path class="link" id="link-XMG-XMG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,784.7058823529412 

707,784.7058823529412"></path><path class="link" id="link-IQD-IQD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,796.2456747404844 

707,796.2456747404844"></path><path class="link" id="link-AXR-AXR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,807.7854671280277 

707,807.7854671280277"></path><path class="link" id="link-IMP-IMP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,819.3252595155709 

707,819.3252595155709"></path><path class="link" id="link-MOBI-MOBI" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,830.8650519031141 

707,830.8650519031141"></path><path class="link" id="link-OAC-OAC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,842.4048442906574 

707,842.4048442906574"></path><path class="link" id="link-NODE-NODE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,853.9446366782006 

707,853.9446366782006"></path><path class="link" id="link-MTX-MTX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,865.4844290657438 

707,865.4844290657438"></path><path class="link" id="link-WWC-WWC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,877.0242214532872 

707,877.0242214532872"></path><path class="link" id="link-GG-GG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,888.5640138408304 

707,888.5640138408304"></path><path class="link" id="link-AU-AU" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,900.1038062283737 

707,900.1038062283737"></path><path class="link" id="link-SC-SC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,911.6435986159171 

707,911.6435986159171"></path><path class="link" id="link-PPCD-PPCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,923.1833910034603 

707,923.1833910034603"></path><path class="link" id="link-CKE-CKE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,934.7231833910035 

707,934.7231833910035"></path><path class="link" id="link-SUP-SUP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,946.2629757785468 

707,946.2629757785468"></path><path class="link" id="link-BTN-BTN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,957.80276816609 

707,957.80276816609"></path><path class="link" id="link-BLC-BLC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,986.6522491349481 589.1666666666667,986.6522491349481"></path><path class="link" id="link-UNO-UNO" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1015.5017301038063 589.1666666666667,1015.5017301038063"></path><path 

class="link" id="link-SKC-SKC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1038.5813148788927 

589.1666666666667,1038.5813148788927"></path><path class="link" id="link-CL-CL" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1067.430795847751 589.1666666666667,1067.430795847751"></path><path class="link" id="link-DVC-DVC" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1096.2802768166089 589.1666666666667,1096.2802768166089"></path><path 

class="link" id="link-IXC-IXC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1119.3598615916953 

589.1666666666667,1119.3598615916953"></path><path class="link" id="link-XPM-XPM" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1153.9792387543253 589.1666666666667,1153.9792387543253"></path><path class="link" id="link-FRC-FRC" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1188.5986159169552 589.1666666666667,1188.5986159169552"></path><path 

class="link" id="link-YLC-YLC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1211.6782006920416 

589.1666666666667,1211.6782006920416"></path><path class="link" id="link-ZET-ZET" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1252.0674740484428 589.1666666666667,1252.0674740484428"></path><path class="link" id="link-PPC-PPC" 

d="M0,613.2488781196508C117.83333333333334,613.2488781196508 117.83333333333334,1360.6353828215895 235.66666666666669,1360.6353828215895"></path><path 

class="link" id="link-SIC-SIC" d="M0,613.2488781196508C117.83333333333334,613.2488781196508 117.83333333333334,2056.176121072315 

235.66666666666669,2056.176121072315"></path><path class="link" id="link-TBX-TBX" d="M0,613.2488781196508C58.91666666666665,613.2488781196508 

58.91666666666665,4097.234774831328 117.8333333333333,4097.234774831328"></path><path class="link" id="link-I0C-I0C" 

d="M589.1666666666667,1119.3598615916953C648.0833333333334,1119.3598615916953 648.0833333333334,1119.3598615916953 707,1119.3598615916953"></path><path 

class="link" id="link-FBX-FBX" d="M117.8333333333333,4097.234774831328C412.41666666666663,4097.234774831328 412.41666666666663,3646.5743944636683 

707,3646.5743944636683"></path><path class="link" id="link-LQC-LQC" d="M117.8333333333333,4097.234774831328C412.41666666666663,4097.234774831328 

412.41666666666663,3658.114186851211 707,3658.114186851211"></path><path class="link" id="link-LTC-LTC" 

d="M117.8333333333333,4097.234774831328C176.75,4097.234774831328 176.75,4987.015743179104 235.66666666666669,4987.015743179104"></path><path class="link" 

id="link-BQC-BQC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3681.193771626298 

707,3681.193771626298"></path><path class="link" id="link-APP-APP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3692.7335640138413 707,3692.7335640138413"></path><path class="link" id="link-GMC-GMC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3704.273356401384 707,3704.273356401384"></path><path 

class="link" id="link-ENC-ENC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3715.8131487889273 

707,3715.8131487889273"></path><path class="link" id="link-CCC-CCC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3727.3529411764707 707,3727.3529411764707"></path><path class="link" id="link-EMO-EMO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3738.892733564014 707,3738.892733564014"></path><path 

class="link" id="link-CHAM-CHAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3750.4325259515567 

707,3750.4325259515567"></path><path class="link" id="link-NOTE-NOTE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3761.9723183391 707,3761.9723183391"></path><path class="link" id="link-FUNK-FUNK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3773.5121107266436 

707,3773.5121107266436"></path><path class="link" id="link-BRD-BRD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3785.051903114187 707,3785.051903114187"></path><path class="link" id="link-DUCK-DUCK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3796.5916955017296 

707,3796.5916955017296"></path><path class="link" id="link-LYC-LYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3808.131487889273 707,3808.131487889273"></path><path class="link" id="link-FLAP-FLAP" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3819.6712802768166 

707,3819.6712802768166"></path><path class="link" id="link-ZMB-ZMB" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3831.21107266436 707,3831.21107266436"></path><path class="link" id="link-SNP-SNP" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3842.7508650519026 

707,3842.7508650519026"></path><path class="link" id="link-MVC-MVC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3854.290657439446 707,3854.290657439446"></path><path class="link" id="link-OLY-OLY" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3865.8304498269895 

707,3865.8304498269895"></path><path class="link" id="link-RBC-RBC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3877.370242214533 707,3877.370242214533"></path><path class="link" id="link-CORG-CORG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3888.9100346020764 

707,3888.9100346020764"></path><path class="link" id="link-PHI-PHI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3900.449826989619 707,3900.449826989619"></path><path class="link" id="link-HBC-HBC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3911.9896193771624 

707,3911.9896193771624"></path><path class="link" id="link-BLA-BLA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3923.529411764706 707,3923.529411764706"></path><path class="link" id="link-KARM-KARM" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3935.0692041522493 

707,3935.0692041522493"></path><path class="link" id="link-FRY-FRY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3946.6089965397923 707,3946.6089965397923"></path><path class="link" id="link-ALC-ALC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3958.1487889273358 

707,3958.1487889273358"></path><path class="link" id="link-RPD-RPD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3969.688581314879 707,3969.688581314879"></path><path class="link" id="link-BEC-BEC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3981.2283737024222 

707,3981.2283737024222"></path><path class="link" id="link-LMC-LMC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3992.7681660899652 707,3992.7681660899652"></path><path class="link" id="link-JUN-JUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4004.3079584775087 

707,4004.3079584775087"></path><path class="link" id="link-ANT-ANT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4015.847750865052 707,4015.847750865052"></path><path class="link" id="link-SOC-SOC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4027.3875432525956 

707,4027.3875432525956"></path><path class="link" id="link-BEE-BEE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4038.927335640138 707,4038.927335640138"></path><path class="link" id="link-MOSC-MOSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4050.4671280276816 

707,4050.4671280276816"></path><path class="link" id="link-CARBON-CARBON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4062.006920415225 707,4062.006920415225"></path><path class="link" id="link-NOBL-NOBL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4073.5467128027685 

707,4073.5467128027685"></path><path class="link" id="link-SHC-SHC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4085.086505190311 707,4085.086505190311"></path><path class="link" id="link-SOL-SOL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4096.6262975778545 

707,4096.6262975778545"></path><path class="link" id="link-VGC-VGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4108.166089965398 707,4108.166089965398"></path><path class="link" id="link-BAT-BAT" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4119.705882352941 707,4119.705882352941"></path><path 

class="link" id="link-FSC-FSC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4131.245674740485 

707,4131.245674740485"></path><path class="link" id="link-MDC-MDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4142.785467128027 707,4142.785467128027"></path><path class="link" id="link-EQB-EQB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4154.325259515571 707,4154.325259515571"></path><path 

class="link" id="link-VOLT-VOLT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4165.865051903114 

707,4165.865051903114"></path><path class="link" id="link-PENG-PENG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4177.404844290658 707,4177.404844290658"></path><path class="link" id="link-BOS-BOS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4188.9446366782 707,4188.9446366782"></path><path 

class="link" id="link-ONI-ONI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4200.484429065744 

707,4200.484429065744"></path><path class="link" id="link-CAGE-CAGE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4212.024221453287 707,4212.024221453287"></path><path class="link" id="link-PCC-PCC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4223.564013840831 707,4223.564013840831"></path><path 

class="link" id="link-42-42" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4235.103806228373 

707,4235.103806228373"></path><path class="link" id="link-VNC-VNC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4246.643598615917 707,4246.643598615917"></path><path class="link" id="link-TIPS-TIPS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4258.18339100346 707,4258.18339100346"></path><path 

class="link" id="link-TAXI-TAXI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4269.723183391004 

707,4269.723183391004"></path><path class="link" id="link-TFC-TFC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4281.262975778546 707,4281.262975778546"></path><path class="link" id="link-BLL-BLL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4292.80276816609 707,4292.80276816609"></path><path 

class="link" id="link-MOON-MOON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4304.342560553633 

707,4304.342560553633"></path><path class="link" id="link-MCR-MCR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4315.882352941177 707,4315.882352941177"></path><path class="link" id="link-VWC-VWC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4327.422145328719 707,4327.422145328719"></path><path 

class="link" id="link-MRS-MRS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4338.961937716263 

707,4338.961937716263"></path><path class="link" id="link-HAM-HAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4350.501730103806 707,4350.501730103806"></path><path class="link" id="link-LTB-LTB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4362.0415224913495 

707,4362.0415224913495"></path><path class="link" id="link-NWC-NWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4373.581314878893 707,4373.581314878893"></path><path class="link" id="link-XXL-XXL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4385.1211072664355 

707,4385.1211072664355"></path><path class="link" id="link-HTC-HTC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4396.660899653979 707,4396.660899653979"></path><path class="link" id="link-SDM-SDM" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4408.200692041522 707,4408.200692041522"></path><path 

class="link" id="link-MEOW-MEOW" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4419.740484429066 

707,4419.740484429066"></path><path class="link" id="link-PAND-PAND" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4431.280276816608 707,4431.280276816608"></path><path class="link" id="link-CHI-CHI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4442.820069204152 707,4442.820069204152"></path><path 

class="link" id="link-RDD-RDD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4454.359861591695 

707,4454.359861591695"></path><path class="link" id="link-LDC-LDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4465.899653979239 707,4465.899653979239"></path><path class="link" id="link-YACC-YACC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4477.439446366781 707,4477.439446366781"></path><path 

class="link" id="link-XIV-XIV" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4488.979238754325 

707,4488.979238754325"></path><path class="link" id="link-PRC-PRC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4500.519031141868 707,4500.519031141868"></path><path class="link" id="link-LOTTO-LOTTO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4512.058823529412 707,4512.058823529412"></path><path 

class="link" id="link-SUN-SUN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4523.598615916955 

707,4523.598615916955"></path><path class="link" id="link-EUC-EUC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4535.138408304498 707,4535.138408304498"></path><path class="link" id="link-SOCHI-SOCHI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4546.678200692041 707,4546.678200692041"></path><path 

class="link" id="link-LOVE-LOVE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4558.217993079585 

707,4558.217993079585"></path><path class="link" id="link-ZED-ZED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4569.757785467128 707,4569.757785467128"></path><path class="link" id="link-BOS-BOS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4581.2975778546715 

707,4581.2975778546715"></path><path class="link" id="link-TOP-TOP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4592.837370242215 707,4592.837370242215"></path><path class="link" id="link-AMC-AMC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4604.377162629758 707,4604.377162629758"></path><path 

class="link" id="link-AUR-AUR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4615.916955017301 

707,4615.916955017301"></path><path class="link" id="link-CYB-CYB" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4627.4567474048445 707,4627.4567474048445"></path><path class="link" id="link-BELI-BELI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4638.996539792388 707,4638.996539792388"></path><path 

class="link" id="link-POK-POK" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4650.536332179931 

707,4650.536332179931"></path><path class="link" id="link-BELA-BELA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4662.076124567475 707,4662.076124567475"></path><path class="link" id="link-BEST-BEST" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4673.615916955017 707,4673.615916955017"></path><path 

class="link" id="link-COIN-COIN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4685.155709342561 

707,4685.155709342561"></path><path class="link" id="link-VAG-VAG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4696.695501730104 707,4696.695501730104"></path><path class="link" id="link-PIG-PIG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4708.235294117648 707,4708.235294117648"></path><path 

class="link" id="link-QWC-QWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4719.77508650519 

707,4719.77508650519"></path><path class="link" id="link-CCN-CCN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4731.314878892734 707,4731.314878892734"></path><path class="link" id="link-FLS-FLS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4742.854671280277 707,4742.854671280277"></path><path 

class="link" id="link-SVC-SVC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4754.394463667821 

707,4754.394463667821"></path><path class="link" id="link-KIMO-KIMO" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4765.934256055363 707,4765.934256055363"></path><path class="link" id="link-EXE-EXE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4777.474048442907 707,4777.474048442907"></path><path 

class="link" id="link-GME-GME" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4789.01384083045 

707,4789.01384083045"></path><path class="link" id="link-JNY-JNY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4800.553633217994 707,4800.553633217994"></path><path class="link" id="link-DBL-DBL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4812.093425605536 707,4812.093425605536"></path><path 

class="link" id="link-GAM-GAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4823.63321799308 

707,4823.63321799308"></path><path class="link" id="link-CRC-CRC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4835.173010380623 707,4835.173010380623"></path><path class="link" id="link-ISR-ISR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4846.7128027681665 

707,4846.7128027681665"></path><path class="link" id="link-ARC-ARC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4858.252595155709 707,4858.252595155709"></path><path class="link" id="link-YOLO-YOLO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4869.7923875432525 

707,4869.7923875432525"></path><path class="link" id="link-TYC-TYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4881.332179930796 707,4881.332179930796"></path><path class="link" id="link-FREEB-FREEB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4892.871972318339 707,4892.871972318339"></path><path 

class="link" id="link-WEC-WEC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4904.411764705883 

707,4904.411764705883"></path><path class="link" id="link-MXT-MXT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4915.951557093425 707,4915.951557093425"></path><path class="link" id="link-PCN-PCN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4927.491349480969 707,4927.491349480969"></path><path 

class="link" id="link-IDC-IDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4939.031141868512 

707,4939.031141868512"></path><path class="link" id="link-GIL-GIL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4950.570934256056 707,4950.570934256056"></path><path class="link" id="link-FUN-FUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4962.110726643598 707,4962.110726643598"></path><path 

class="link" id="link-ITC-ITC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4973.650519031142 

707,4973.650519031142"></path><path class="link" id="link-AIM-AIM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4985.190311418685 707,4985.190311418685"></path><path class="link" id="link-EXC-EXC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4996.730103806229 707,4996.730103806229"></path><path 

class="link" id="link-WFC-WFC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5008.269896193771 

707,5008.269896193771"></path><path class="link" id="link-PLT-PLT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5019.809688581315 707,5019.809688581315"></path><path class="link" id="link-CFN-CFN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5031.349480968858 707,5031.349480968858"></path><path 

class="link" id="link-BEL-BEL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5042.889273356402 

707,5042.889273356402"></path><path class="link" id="link-G8-G8" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5054.429065743944 707,5054.429065743944"></path><path class="link" id="link-ZEU-ZEU" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5065.968858131488 707,5065.968858131488"></path><path 

class="link" id="link-XXX-XXX" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5077.508650519031 

707,5077.508650519031"></path><path class="link" id="link-ELC-ELC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5089.048442906575 707,5089.048442906575"></path><path class="link" id="link-QTL-QTL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5100.588235294117 707,5100.588235294117"></path><path 

class="link" id="link-HYC-HYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5112.128027681661 

707,5112.128027681661"></path><path class="link" id="link-FJC-FJC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5123.667820069204 707,5123.667820069204"></path><path class="link" id="link-ICE-ICE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5135.2076124567475 

707,5135.2076124567475"></path><path class="link" id="link-AID-AID" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5146.747404844291 707,5146.747404844291"></path><path class="link" id="link-EZC-EZC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5158.2871972318335 

707,5158.2871972318335"></path><path class="link" id="link-M.J-M.J" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5169.826989619377 707,5169.826989619377"></path><path class="link" id="link-CNC-CNC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5181.36678200692 707,5181.36678200692"></path><path 

class="link" id="link-numc-numc" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5192.906574394464 

707,5192.906574394464"></path><path class="link" id="link-JPC-JPC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5204.446366782006 707,5204.446366782006"></path><path class="link" id="link-RC-RC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5215.98615916955 707,5215.98615916955"></path><path 

class="link" id="link-CTC-CTC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5227.525951557093 

707,5227.525951557093"></path><path class="link" id="link-CZC-CZC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5239.065743944637 707,5239.065743944637"></path><path class="link" id="link-NRB-NRB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5250.605536332179 707,5250.605536332179"></path><path 

class="link" id="link-Kool-Kool" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5262.145328719723 

707,5262.145328719723"></path><path class="link" id="link-RUP-RUP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5273.685121107266 707,5273.685121107266"></path><path class="link" id="link-RSC-RSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5285.22491349481 707,5285.22491349481"></path><path 

class="link" id="link-PXC-PXC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5296.764705882352 

707,5296.764705882352"></path><path class="link" id="link-LTCD-LTCD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5308.304498269896 707,5308.304498269896"></path><path class="link" id="link-GLD-GLD" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5319.844290657439 707,5319.844290657439"></path><path 

class="link" id="link-CPTL-CPTL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5331.384083044983 

707,5331.384083044983"></path><path class="link" id="link-FEC-FEC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5342.923875432525 707,5342.923875432525"></path><path class="link" id="link-BMY-BMY" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5354.463667820069 707,5354.463667820069"></path><path 

class="link" id="link-USC-USC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5366.003460207612 

707,5366.003460207612"></path><path class="link" id="link-LNKC-LNKC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5377.5432525951555 707,5377.5432525951555"></path><path class="link" id="link-QTC-QTC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5389.083044982699 707,5389.083044982699"></path><path 

class="link" id="link-BLP-BLP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5400.622837370242 

707,5400.622837370242"></path><path class="link" id="link-ELP-ELP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5412.162629757785 707,5412.162629757785"></path><path class="link" id="link-EVC-EVC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5423.7024221453285 

707,5423.7024221453285"></path><path class="link" id="link-EGC-EGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5435.242214532872 707,5435.242214532872"></path><path class="link" id="link-GB-GB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5446.782006920415 707,5446.782006920415"></path><path 

class="link" id="link-RED-RED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5458.321799307959 

707,5458.321799307959"></path><path class="link" id="link-SYS-SYS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5469.861591695502 707,5469.861591695502"></path><path class="link" id="link-CSC-CSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5481.401384083045 707,5481.401384083045"></path><path 

class="link" id="link-BUY-BUY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5492.941176470588 

707,5492.941176470588"></path><path class="link" id="link-LEL-LEL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5504.480968858132 707,5504.480968858132"></path><path class="link" id="link-ROOT-ROOT" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5516.020761245675 707,5516.020761245675"></path><path 

class="link" id="link-VLC-VLC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5527.560553633219 

707,5527.560553633219"></path><path class="link" id="link-TRDR-TRDR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5539.100346020761 707,5539.100346020761"></path><path class="link" id="link-TDC-TDC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5550.640138408305 707,5550.640138408305"></path><path 

class="link" id="link-MANA-MANA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5562.179930795848 

707,5562.179930795848"></path><path class="link" id="link-NC-NC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5573.719723183392 707,5573.719723183392"></path><path class="link" id="link-SHADE-SHADE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5585.259515570934 707,5585.259515570934"></path><path 

class="link" id="link-SXC-SXC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5596.799307958478 

707,5596.799307958478"></path><path class="link" id="link-XBOT-XBOT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5608.339100346021 707,5608.339100346021"></path><path class="link" id="link-EMD-EMD" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5619.8788927335645 

707,5619.8788927335645"></path><path class="link" id="link-CGA-CGA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5631.418685121107 707,5631.418685121107"></path><path class="link" id="link-eDC-eDC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5642.9584775086505 

707,5642.9584775086505"></path><path class="link" id="link-BTLS-BTLS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5654.498269896194 707,5654.498269896194"></path><path class="link" id="link-REC-REC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5666.038062283737 707,5666.038062283737"></path><path 

class="link" id="link-VAC-VAC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5677.577854671281 

707,5677.577854671281"></path><path class="link" id="link-RCH-RCH" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5689.117647058823 707,5689.117647058823"></path><path class="link" id="link-SLK-SLK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5700.657439446367 707,5700.657439446367"></path><path 

class="link" id="link-6CN-6CN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5712.19723183391 

707,5712.19723183391"></path><path class="link" id="link-DOLLAR-DOLLAR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5723.737024221454 707,5723.737024221454"></path><path class="link" id="link-GLC-GLC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5735.276816608996 707,5735.276816608996"></path><path 

class="link" id="link-SNG-SNG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5746.81660899654 

707,5746.81660899654"></path><path class="link" id="link-MEM-MEM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5758.356401384083 707,5758.356401384083"></path><path class="link" id="link-DPC-DPC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5769.896193771627 707,5769.896193771627"></path><path 

class="link" id="link-FST-FST" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5781.435986159169 

707,5781.435986159169"></path><path class="link" id="link-MTLMC-MTLMC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5792.975778546713 707,5792.975778546713"></path><path class="link" id="link-KGC-KGC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5804.515570934256 707,5804.515570934256"></path><path 

class="link" id="link-SEED-SEED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5816.0553633218 

707,5816.0553633218"></path><path class="link" id="link-PWC-PWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5827.595155709342 707,5827.595155709342"></path><path class="link" id="link-SMBR-SMBR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5839.134948096886 707,5839.134948096886"></path><path 

class="link" id="link-ARG-ARG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5850.674740484429 

707,5850.674740484429"></path><path class="link" id="link-C2-C2" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5862.214532871973 707,5862.214532871973"></path><path class="link" id="link-ALF-ALF" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5873.754325259515 707,5873.754325259515"></path><path 

class="link" id="link-ONE-ONE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5885.294117647059 

707,5885.294117647059"></path><path class="link" id="link-NBL-NBL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5896.833910034602 707,5896.833910034602"></path><path class="link" id="link-DBU-DBU" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5908.3737024221455 

707,5908.3737024221455"></path><path class="link" id="link-GIAR-GIAR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5919.913494809689 707,5919.913494809689"></path><path class="link" id="link-VTR-VTR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5931.4532871972315 

707,5931.4532871972315"></path><path class="link" id="link-DGC-DGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5942.993079584775 707,5942.993079584775"></path><path class="link" id="link-INS-INS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5954.532871972318 707,5954.532871972318"></path><path 

class="link" id="link-FOF-FOF" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5966.072664359862 

707,5966.072664359862"></path><path class="link" id="link-DIBS-DIBS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5977.612456747404 707,5977.612456747404"></path><path class="link" id="link-NLG-NLG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5989.152249134948 707,5989.152249134948"></path><path 

class="link" id="link-DGMS-DGMS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6000.692041522491 

707,6000.692041522491"></path><path class="link" id="link-FLO-FLO" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6012.231833910035 707,6012.231833910035"></path><path class="link" id="link-FSC2-FSC2" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6023.771626297577 707,6023.771626297577"></path><path 

class="link" id="link-XNC-XNC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6035.311418685121 

707,6035.311418685121"></path><path class="link" id="link-DIGI-DIGI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6046.851211072664 707,6046.851211072664"></path><path class="link" id="link-IFC-IFC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6058.391003460208 707,6058.391003460208"></path><path 

class="link" id="link-CARSI-CARSI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6069.93079584775 

707,6069.93079584775"></path><path class="link" id="link-ANC-ANC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6081.470588235294 707,6081.470588235294"></path><path class="link" id="link-XTR-XTR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6093.010380622837 707,6093.010380622837"></path><path 

class="link" id="link-FRK-FRK" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6104.550173010381 

707,6104.550173010381"></path><path class="link" id="link-EMC2-EMC2" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6116.089965397923 707,6116.089965397923"></path><path class="link" id="link-NET-NET" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6127.629757785467 707,6127.629757785467"></path><path 

class="link" id="link-DDC-DDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6139.16955017301 

707,6139.16955017301"></path><path class="link" id="link-RON-RON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6150.7093425605535 707,6150.7093425605535"></path><path class="link" id="link-BUN-BUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6162.249134948097 707,6162.249134948097"></path><path 

class="link" id="link-VMP-VMP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6173.7889273356395 

707,6173.7889273356395"></path><path class="link" id="link-FTC-FTC" d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 

412.41666666666674,6196.868512110726 589.1666666666667,6196.868512110726"></path><path class="link" id="link-PIC-PIC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6294.9567474048445 

589.1666666666667,6294.9567474048445"></path><path class="link" id="link-RYC-RYC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6393.0449826989625 

589.1666666666667,6393.0449826989625"></path><path class="link" id="link-WDC-WDC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6416.1245674740485 

589.1666666666667,6416.1245674740485"></path><path class="link" id="link-MNC-MNC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6439.204152249135 

589.1666666666667,6439.204152249135"></path><path class="link" id="link-MEC-MEC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6462.283737024221 

589.1666666666667,6462.283737024221"></path><path class="link" id="link-STR-STR" d="M235.66666666666669,4987.015743179104C353.5,4987.015743179104 

353.5,6485.363321799308 471.33333333333337,6485.363321799308"></path><path class="link" id="link-SMC-SMC" 

d="M235.66666666666669,4987.015743179104C294.58333333333337,4987.015743179104 294.58333333333337,6523.829296424453 

353.5,6523.829296424453"></path><path class="link" id="link-JKC-JKC" d="M235.66666666666669,4987.015743179104C294.58333333333337,4987.015743179104 

294.58333333333337,6588.259803921568 353.5,6588.259803921568"></path><path class="link" id="link-SRC-SRC" 

d="M589.1666666666667,6196.868512110726C648.0833333333334,6196.868512110726 648.0833333333334,6196.868512110726 707,6196.868512110726"></path><path 

class="link" id="link-NAN-NAN" d="M589.1666666666667,6462.283737024221C648.0833333333334,6462.283737024221 648.0833333333334,6462.283737024221 

707,6462.283737024221"></path><path class="link" id="link-TCN-TCN" d="M589.1666666666667,6439.204152249135C648.0833333333334,6439.204152249135 

648.0833333333334,6439.204152249135 707,6439.204152249135"></path><path class="link" id="link-PNC-PNC" 

d="M589.1666666666667,6416.1245674740485C648.0833333333334,6416.1245674740485 648.0833333333334,6416.1245674740485 707,6416.1245674740485"></path><path 

class="link" id="link-SPC-SPC" d="M353.5,6588.259803921568C530.25,6588.259803921568 530.25,6566.141868512111 707,6566.141868512111"></path><path class="link" 

id="link-GDC-GDC" d="M353.5,6588.259803921568C530.25,6588.259803921568 530.25,6577.681660899654 707,6577.681660899654"></path><path class="link" id="link-LKY-

LKY" d="M353.5,6588.259803921568C412.4166666666667,6588.259803921568 412.4166666666667,6620.955882352941 

471.33333333333337,6620.955882352941"></path><path class="link" id="link-JBG-JBG" 

d="M471.33333333333337,6620.955882352941C589.1666666666667,6620.955882352941 589.1666666666667,6600.76124567474 707,6600.76124567474"></path><path 

class="link" id="link-DOGE-DOGE" d="M471.33333333333337,6620.955882352941C530.25,6620.955882352941 530.25,6641.150519031142 

589.1666666666667,6641.150519031142"></path><path class="link" id="link-APE-APE" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 

648.0833333333334,6623.840830449827 707,6623.840830449827"></path><path class="link" id="link-NYAN-NYAN" 

d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 648.0833333333334,6635.3806228373705 707,6635.3806228373705"></path><path 

class="link" id="link-CAT-CAT" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 648.0833333333334,6646.920415224913 

707,6646.920415224913"></path><path class="link" id="link-PND-PND" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 

648.0833333333334,6658.4602076124565 707,6658.4602076124565"></path><path class="link" id="link-SBC-SBC" 

d="M589.1666666666667,6393.0449826989625C648.0833333333334,6393.0449826989625 648.0833333333334,6393.0449826989625 707,6393.0449826989625"></path><path 

class="link" id="link-ADT-ADT" d="M471.33333333333337,6485.363321799308C530.25,6485.363321799308 530.25,6485.363321799308 

589.1666666666667,6485.363321799308"></path><path class="link" id="link-COL-COL" 

d="M589.1666666666667,6485.363321799308C648.0833333333334,6485.363321799308 648.0833333333334,6485.363321799308 707,6485.363321799308"></path><path 

class="link" id="link-DNC-DNC" d="M353.5,6523.829296424453C530.25,6523.829296424453 530.25,6508.442906574394 707,6508.442906574394"></path><path class="link" 

id="link-GEO-GEO" d="M353.5,6523.829296424453C530.25,6523.829296424453 530.25,6519.982698961938 707,6519.982698961938"></path><path class="link" id="link-SPT-

SPT" d="M353.5,6523.829296424453C412.4166666666667,6523.829296424453 412.4166666666667,6543.062283737025 

471.33333333333337,6543.062283737025"></path><path class="link" id="link-CPR-CPR" d="M471.33333333333337,6543.062283737025C530.25,6543.062283737025 

530.25,6543.062283737025 589.1666666666667,6543.062283737025"></path><path class="link" id="link-PINGAS-PINGAS" 

d="M589.1666666666667,6543.062283737025C648.0833333333334,6543.062283737025 648.0833333333334,6543.062283737025 707,6543.062283737025"></path><path 

class="link" id="link-BEER-BEER" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6219.948096885813 

707,6219.948096885813"></path><path class="link" id="link-FISH-FISH" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6231.487889273356 707,6231.487889273356"></path><path class="link" id="link-COLA-COLA" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6243.027681660899 707,6243.027681660899"></path><path 

class="link" id="link-TEL-TEL" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6254.567474048443 

707,6254.567474048443"></path><path class="link" id="link-VDC-VDC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6266.107266435986 707,6266.107266435986"></path><path class="link" id="link-WWW-WWW" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6277.64705882353 707,6277.64705882353"></path><path 

class="link" id="link-SHOP-SHOP" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6289.186851211073 

707,6289.186851211073"></path><path class="link" id="link-HAC-HAC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6300.726643598616 707,6300.726643598616"></path><path class="link" id="link-HDC-HDC" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6312.266435986159 707,6312.266435986159"></path><path 

class="link" id="link-LADY-LADY" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6323.806228373703 

707,6323.806228373703"></path><path class="link" id="link-MUSC-MUSC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6335.346020761246 707,6335.346020761246"></path><path class="link" id="link-PAS-PAS" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6346.88581314879 707,6346.88581314879"></path><path 

class="link" id="link-CIC-CIC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6358.425605536332 

707,6358.425605536332"></path><path class="link" id="link-OIL-OIL" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6369.965397923876 707,6369.965397923876"></path><path class="link" id="link-STY-STY" 

d="M589.1666666666667,1096.2802768166089C648.0833333333334,1096.2802768166089 648.0833333333334,1096.2802768166089 707,1096.2802768166089"></path><path 

class="link" id="link-ZTC-ZTC" d="M589.1666666666667,1188.5986159169552C648.0833333333334,1188.5986159169552 648.0833333333334,1188.5986159169552 

707,1188.5986159169552"></path><path class="link" id="link-QBT-QBT" d="M235.66666666666669,1360.6353828215895C471.33333333333337,1360.6353828215895 

471.33333333333337,1292.4567474048442 707,1292.4567474048442"></path><path class="link" id="link-FLT-FLT" 

d="M235.66666666666669,1360.6353828215895C471.33333333333337,1360.6353828215895 471.33333333333337,1303.9965397923875 

707,1303.9965397923875"></path><path class="link" id="link-NVC-NVC" d="M235.66666666666669,1360.6353828215895C294.58333333333337,1360.6353828215895 

294.58333333333337,1485.4528612675367 353.5,1485.4528612675367"></path><path class="link" id="link-ZEIT-ZEIT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1327.076124567474 707,1327.076124567474"></path><path class="link" id="link-XMAS-XMAS" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1338.6159169550172 707,1338.6159169550172"></path><path class="link" id="link-CDC-CDC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1350.1557093425606 707,1350.1557093425606"></path><path class="link" id="link-GLX-GLX" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1361.6955017301038 707,1361.6955017301038"></path><path class="link" id="link-NEC-NEC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1373.235294117647 707,1373.235294117647"></path><path class="link" id="link-HBN-HBN" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1384.7750865051903 707,1384.7750865051903"></path><path class="link" id="link-BTG-BTG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1396.3148788927335 707,1396.3148788927335"></path><path class="link" id="link-SAV-SAV" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1407.8546712802768 707,1407.8546712802768"></path><path class="link" id="link-PPL-PPL" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1419.3944636678202 707,1419.3944636678202"></path><path class="link" id="link-SHT-SHT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1430.9342560553634 707,1430.9342560553634"></path><path class="link" id="link-CIN-CIN" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1442.4740484429067 707,1442.4740484429067"></path><path class="link" id="link-MINT-MINT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1454.01384083045 707,1454.01384083045"></path><path class="link" id="link-BOC-BOC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1465.5536332179931 707,1465.5536332179931"></path><path class="link" id="link-BC-BC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1477.0934256055364 707,1477.0934256055364"></path><path class="link" id="link-TEK-TEK" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1488.6332179930796 707,1488.6332179930796"></path><path class="link" id="link-CGB-CGB" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1500.1730103806228 707,1500.1730103806228"></path><path class="link" id="link-NIG-NIG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1511.712802768166 707,1511.712802768166"></path><path class="link" id="link-PHS-PHS" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1523.2525951557093 707,1523.2525951557093"></path><path class="link" id="link-GRA-GRA" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1534.7923875432525 707,1534.7923875432525"></path><path class="link" id="link-BITB-BITB" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1546.3321799307957 707,1546.3321799307957"></path><path class="link" id="link-UFC-UFC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1557.871972318339 707,1557.871972318339"></path><path class="link" id="link-TAG-TAG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1569.4117647058824 707,1569.4117647058824"></path><path class="link" id="link-LK7-LK7" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1580.9515570934257 707,1580.9515570934257"></path><path class="link" id="link-CMC-CMC" 

d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 471.33333333333337,1604.0311418685121 

589.1666666666667,1604.0311418685121"></path><path class="link" id="link-CAP-CAP" d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 

471.33333333333337,1627.1107266435986 589.1666666666667,1627.1107266435986"></path><path class="link" id="link-DMD-DMD" 

d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 471.33333333333337,1655.9602076124568 

589.1666666666667,1655.9602076124568"></path><path class="link" id="link-YAC-YAC" d="M353.5,1485.4528612675367C412.4166666666667,1485.4528612675367 

412.4166666666667,1777.8068389985751 471.33333333333337,1777.8068389985751"></path><path class="link" id="link-ONC-ONC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1684.8096885813147 

707,1684.8096885813147"></path><path class="link" id="link-APC-APC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1696.3494809688582 707,1696.3494809688582"></path><path class="link" id="link-ECO-ECO" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1707.8892733564012 

707,1707.8892733564012"></path><path class="link" id="link-KING-KING" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1719.4290657439446 707,1719.4290657439446"></path><path class="link" id="link-PGC-PGC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1730.9688581314877 

707,1730.9688581314877"></path><path class="link" id="link-CENT-CENT" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1742.508650519031 707,1742.508650519031"></path><path class="link" id="link-CACH-CACH" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1754.0484429065743 

707,1754.0484429065743"></path><path class="link" id="link-HRC-HRC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1765.5882352941176 707,1765.5882352941176"></path><path class="link" id="link-QQC-QQC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1777.1280276816608 

707,1777.1280276816608"></path><path class="link" id="link-JPU-JPU" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1788.6678200692043 707,1788.6678200692043"></path><path class="link" id="link-null-null" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1800.2076124567475 

707,1800.2076124567475"></path><path class="link" id="link-FRE-FRE" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1811.7474048442907 707,1811.7474048442907"></path><path class="link" id="link-FATE-FATE" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1823.2871972318342 

707,1823.2871972318342"></path><path class="link" id="link-ZCC-ZCC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1834.8269896193772 707,1834.8269896193772"></path><path class="link" id="link-MCC-MCC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1846.3667820069206 

707,1846.3667820069206"></path><path class="link" id="link-MRC-MRC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1857.9065743944636 707,1857.9065743944636"></path><path class="link" id="link-VTC-VTC" 

d="M471.33333333333337,1777.8068389985751C530.25,1777.8068389985751 530.25,1880.98615916955 589.1666666666667,1880.98615916955"></path><path class="link" 

id="link-ALT-ALT" d="M589.1666666666667,1880.98615916955C648.0833333333334,1880.98615916955 648.0833333333334,1880.98615916955 

707,1880.98615916955"></path><path class="link" id="link-GRW-GRW" d="M589.1666666666667,1655.9602076124568C648.0833333333334,1655.9602076124568 

648.0833333333334,1650.190311418685 707,1650.190311418685"></path><path class="link" id="link-BAC-BAC" 

d="M589.1666666666667,1655.9602076124568C648.0833333333334,1655.9602076124568 648.0833333333334,1661.7301038062283 707,1661.7301038062283"></path><path 

class="link" id="link-LBW-LBW" d="M589.1666666666667,1627.1107266435986C648.0833333333334,1627.1107266435986 648.0833333333334,1627.1107266435986 

707,1627.1107266435986"></path><path class="link" id="link-PYC-PYC" d="M589.1666666666667,1604.0311418685121C648.0833333333334,1604.0311418685121 

648.0833333333334,1604.0311418685121 707,1604.0311418685121"></path><path class="link" id="link-DTC-DTC" 

d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 648.0833333333334,1142.439446366782 707,1142.439446366782"></path><path 

class="link" id="link-CDN-CDN" d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 648.0833333333334,1153.9792387543253 

707,1153.9792387543253"></path><path class="link" id="link-FTW-FTW" d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 

648.0833333333334,1165.5190311418687 707,1165.5190311418687"></path><path class="link" id="link-TEA-TEA" 

d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1234.757785467128 707,1234.757785467128"></path><path 

class="link" id="link-MYR-MYR" d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1246.2975778546713 

707,1246.2975778546713"></path><path class="link" id="link-CHC-CHC" d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 

648.0833333333334,1257.8373702422145 707,1257.8373702422145"></path><path class="link" id="link-MZC-MZC" 

d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1269.3771626297578 707,1269.3771626297578"></path><path 

class="link" id="link-QRK-QRK" d="M235.66666666666669,2056.176121072315C294.58333333333337,2056.176121072315 294.58333333333337,2056.176121072315 

353.5,2056.176121072315"></path><path class="link" id="link-OBC-OBC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1904.0657439446366 

707,1904.0657439446366"></path><path class="link" id="link-ZUR-ZUR" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1915.60553633218 

707,1915.60553633218"></path><path class="link" id="link-VLD-VLD" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1927.145328719723 

707,1927.145328719723"></path><path class="link" id="link-ANI-ANI" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1938.6851211072665 

707,1938.6851211072665"></path><path class="link" id="link-WIKI-WIKI" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1950.2249134948095 

707,1950.2249134948095"></path><path class="link" id="link-DIME-DIME" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1961.764705882353 

707,1961.764705882353"></path><path class="link" id="link-MTS-MTS" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1973.3044982698962 

707,1973.3044982698962"></path><path class="link" id="link-OFF-OFF" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1984.8442906574394 

707,1984.8442906574394"></path><path class="link" id="link-TBC-TBC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1996.3840830449826 

707,1996.3840830449826"></path><path class="link" id="link-PRT-PRT" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2007.923875432526 

707,2007.923875432526"></path><path class="link" id="link-DOUG-DOUG" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2019.463667820069 

707,2019.463667820069"></path><path class="link" id="link-SEC-SEC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2031.0034602076125 

707,2031.0034602076125"></path><path class="link" id="link-MET-MET" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2042.5432525951555 

707,2042.5432525951555"></path><path class="link" id="link-MOL-MOL" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2054.083044982699 

707,2054.083044982699"></path><path class="link" id="link-SOMA-SOMA" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2065.6228373702425 

707,2065.6228373702425"></path><path class="link" id="link-ATO-ATO" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2077.1626297577855 

707,2077.1626297577855"></path><path class="link" id="link-QB-QB" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2088.702422145329 

707,2088.702422145329"></path><path class="link" id="link-FZ-FZ" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2100.242214532872 

707,2100.242214532872"></path><path class="link" id="link-SRC-SRC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2111.7820069204154 

707,2111.7820069204154"></path><path class="link" id="link-RVD-RVD" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2123.3217993079584 

707,2123.3217993079584"></path><path class="link" id="link-MUE-MUE" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2134.861591695502 

707,2134.861591695502"></path><path class="link" id="link-UNC-UNC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2146.401384083045 

707,2146.401384083045"></path><path class="link" id="link-DRK-DRK" d="M353.5,2056.176121072315C412.4166666666667,2056.176121072315 

412.4166666666667,2736.912376358743 471.33333333333337,2736.912376358743"></path><path class="link" id="link-CC-CC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2169.4809688581313 707,2169.4809688581313"></path><path 

class="link" id="link-FVZ-FVZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2181.0207612456747 

707,2181.0207612456747"></path><path class="link" id="link-ELTC-ELTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2192.5605536332178 707,2192.5605536332178"></path><path class="link" id="link-ESC-ESC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2204.100346020761 707,2204.100346020761"></path><path 

class="link" id="link-XAN-XAN" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2215.640138408304 

707,2215.640138408304"></path><path class="link" id="link-Sync-Sync" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2227.1799307958477 707,2227.1799307958477"></path><path class="link" id="link-FUSE-FUSE" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2238.7197231833907 707,2238.7197231833907"></path><path 

class="link" id="link-WITCH-WITCH" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2250.259515570934 

707,2250.259515570934"></path><path class="link" id="link-ZEB-ZEB" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2261.7993079584776 707,2261.7993079584776"></path><path class="link" id="link-CLD-CLD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2273.3391003460206 707,2273.3391003460206"></path><path 

class="link" id="link-RW-RW" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2284.878892733564 

707,2284.878892733564"></path><path class="link" id="link-BTO-BTO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2296.4186851211075 707,2296.4186851211075"></path><path class="link" id="link-SRZ-SRZ" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2307.9584775086505 707,2307.9584775086505"></path><path 

class="link" id="link-BIZ-BIZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2319.498269896194 

707,2319.498269896194"></path><path class="link" id="link-DGORE-DGORE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2331.0380622837374 707,2331.0380622837374"></path><path class="link" id="link-Pal-Pal" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2342.5778546712804 707,2342.5778546712804"></path><path 

class="link" id="link-SND-SND" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2354.117647058824 

707,2354.117647058824"></path><path class="link" id="link-MWC-MWC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2365.657439446367 707,2365.657439446367"></path><path class="link" id="link-LIN-LIN" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2377.1972318339103 707,2377.1972318339103"></path><path 

class="link" id="link-DSV-DSV" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2388.7370242214533 

707,2388.7370242214533"></path><path class="link" id="link-BOOTY-BOOTY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2400.276816608997 707,2400.276816608997"></path><path class="link" id="link-MTS-MTS" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2411.81660899654 707,2411.81660899654"></path><path 

class="link" id="link-PIGGY-PIGGY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2423.3564013840833 

707,2423.3564013840833"></path><path class="link" id="link-MAG-MAG" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2434.8961937716263 707,2434.8961937716263"></path><path class="link" id="link-MIL-MIL" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2446.4359861591697 707,2446.4359861591697"></path><path 

class="link" id="link-VMINE-VMINE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2457.9757785467127 

707,2457.9757785467127"></path><path class="link" id="link-LOL-LOL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2469.515570934256 707,2469.515570934256"></path><path class="link" id="link-DEPO-GBP-DEPO-GBP" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2481.055363321799 707,2481.055363321799"></path><path 

class="link" id="link-MHYC-MHYC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2492.5951557093426 

707,2492.5951557093426"></path><path class="link" id="link-XCR-XCR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2504.1349480968856 707,2504.1349480968856"></path><path class="link" id="link-CSO-CSO" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2515.674740484429 707,2515.674740484429"></path><path 

class="link" id="link-WeTk-WeTk" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2527.214532871972 

707,2527.214532871972"></path><path class="link" id="link-PP-PP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2538.7543252595156 707,2538.7543252595156"></path><path class="link" id="link-CYX-CYX" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2550.2941176470586 707,2550.2941176470586"></path><path 

class="link" id="link-TRUST-TRUST" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2561.833910034602 

707,2561.833910034602"></path><path class="link" id="link-TMC-TMC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2573.3737024221455 707,2573.3737024221455"></path><path class="link" id="link-BULBA-BULBA" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2584.9134948096885 707,2584.9134948096885"></path><path 

class="link" id="link-RACE-RACE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2596.453287197232 

707,2596.453287197232"></path><path class="link" id="link-SPCC-SPCC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2607.993079584775 707,2607.993079584775"></path><path class="link" id="link-AZC-AZC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2619.5328719723184 707,2619.5328719723184"></path><path 

class="link" id="link-HODOR-HODOR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2631.0726643598614 

707,2631.0726643598614"></path><path class="link" id="link-AMBER-AMBER" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2642.612456747405 707,2642.612456747405"></path><path class="link" id="link-GOD-GOD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2654.152249134948 707,2654.152249134948"></path><path 

class="link" id="link-LMR-LMR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2665.6920415224913 

707,2665.6920415224913"></path><path class="link" id="link-NeWO-NeWO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2677.2318339100343 707,2677.2318339100343"></path><path class="link" id="link-CryptoXTC-CryptoXTC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2688.7716262975778 707,2688.7716262975778"></path><path 

class="link" id="link-gue-gue" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2700.311418685121 

707,2700.311418685121"></path><path class="link" id="link-XURO-XURO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2711.8512110726642 707,2711.8512110726642"></path><path class="link" id="link-WVS-WVS" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2723.3910034602077 707,2723.3910034602077"></path><path 

class="link" id="link-GLY-GLY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2734.930795847751 

707,2734.930795847751"></path><path class="link" id="link-FRAC-FRAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2746.470588235294 707,2746.470588235294"></path><path class="link" id="link-MWC-MWC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2758.0103806228376 707,2758.0103806228376"></path><path 

class="link" id="link-LIT-LIT" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2769.5501730103806 

707,2769.5501730103806"></path><path class="link" id="link-Neos-Neos" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2781.089965397924 707,2781.089965397924"></path><path class="link" id="link-KiB-KiB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2792.629757785467 707,2792.629757785467"></path><path 

class="link" id="link-EQX-EQX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2804.1695501730105 

707,2804.1695501730105"></path><path class="link" id="link-TRS-TRS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2815.7093425605535 707,2815.7093425605535"></path><path class="link" id="link-CCB-CCB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2827.249134948097 707,2827.249134948097"></path><path 

class="link" id="link-MIN-MIN" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2838.7889273356404 

707,2838.7889273356404"></path><path class="link" id="link-TNZ-TNZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2850.3287197231834 707,2850.3287197231834"></path><path class="link" id="link-WCC-WCC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2861.868512110727 707,2861.868512110727"></path><path 

class="link" id="link-CRCK-CRCK" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2873.40830449827 

707,2873.40830449827"></path><path class="link" id="link-GRE-GRE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2884.9480968858134 707,2884.9480968858134"></path><path class="link" id="link-CHILD-CHILD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2896.4878892733564 707,2896.4878892733564"></path><path 

class="link" id="link-LIMX-LIMX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2908.0276816609 

707,2908.0276816609"></path><path class="link" id="link-ROS-ROS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2919.567474048443 707,2919.567474048443"></path><path class="link" id="link-Voot-Voot" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2931.1072664359863 707,2931.1072664359863"></path><path 

class="link" id="link-STC-STC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2942.6470588235293 

707,2942.6470588235293"></path><path class="link" id="link-BS-BS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2954.1868512110727 707,2954.1868512110727"></path><path class="link" id="link-Envy-Envy" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2965.7266435986157 707,2965.7266435986157"></path><path 

class="link" id="link-Iaura-Iaura" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2977.266435986159 

707,2977.266435986159"></path><path class="link" id="link-EXCL-EXCL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2988.806228373702 707,2988.806228373702"></path><path class="link" id="link-LTCX-LTCX" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3000.3460207612457 707,3000.3460207612457"></path><path 

class="link" id="link-DP-DP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3011.8858131487887 

707,3011.8858131487887"></path><path class="link" id="link-NL-NL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3023.425605536332 707,3023.425605536332"></path><path class="link" id="link-MTC-MTC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3034.965397923875 707,3034.965397923875"></path><path 

class="link" id="link-suc-suc" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3046.5051903114186 

707,3046.5051903114186"></path><path class="link" id="link-METAL-METAL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3058.0449826989616 707,3058.0449826989616"></path><path class="link" id="link-HPC-HPC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3069.584775086505 707,3069.584775086505"></path><path 

class="link" id="link-GHOST-GHOST" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3081.1245674740485 

707,3081.1245674740485"></path><path class="link" id="link-NAC-NAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3092.6643598615915 707,3092.6643598615915"></path><path class="link" id="link-WSTL-WSTL" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3104.204152249135 707,3104.204152249135"></path><path 

class="link" id="link-PURE-PURE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3115.743944636678 

707,3115.743944636678"></path><path class="link" id="link-SPARK-SPARK" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3127.2837370242214 707,3127.2837370242214"></path><path class="link" id="link-GRN-GRN" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3138.823529411765 707,3138.823529411765"></path><path 

class="link" id="link-OPTI-OPTI" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3150.363321799308 

707,3150.363321799308"></path><path class="link" id="link-KRYP-KRYP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3161.9031141868513 707,3161.9031141868513"></path><path class="link" id="link-MOB-MOB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3173.442906574395 707,3173.442906574395"></path><path 

class="link" id="link-ACC-ACC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3184.982698961938 

707,3184.982698961938"></path><path class="link" id="link-NKT-NKT" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3196.5224913494812 707,3196.5224913494812"></path><path class="link" id="link-MLGB-MLGB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3208.0622837370242 707,3208.0622837370242"></path><path 

class="link" id="link-LFTC-LFTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3219.6020761245677 

707,3219.6020761245677"></path><path class="link" id="link-RTC-RTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3231.1418685121107 707,3231.1418685121107"></path><path class="link" id="link-CBR-CBR" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3242.681660899654 707,3242.681660899654"></path><path 

class="link" id="link-TEX-TEX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3254.221453287197 

707,3254.221453287197"></path><path class="link" id="link-SMAC-SMAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3265.7612456747406 707,3265.7612456747406"></path><path class="link" id="link-MC-MC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3277.3010380622836 707,3277.3010380622836"></path><path 

class="link" id="link-X14-X14" d="M471.33333333333337,2736.912376358743C530.25,2736.912376358743 530.25,3306.150519031142 

589.1666666666667,3306.150519031142"></path><path class="link" id="link-BBL-BBL" d="M471.33333333333337,2736.912376358743C530.25,2736.912376358743 

530.25,3479.247404844291 589.1666666666667,3479.247404844291"></path><path class="link" id="link-FIRE-FIRE" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3335 707,3335"></path><path class="link" id="link-BACK-BACK" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3346.5397923875435 707,3346.5397923875435"></path><path 

class="link" id="link-MInC-MInC" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3358.079584775087 

707,3358.079584775087"></path><path class="link" id="link-LIZE-LIZE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3369.6193771626295 707,3369.6193771626295"></path><path class="link" id="link-NHC-NHC" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3381.159169550173 707,3381.159169550173"></path><path 

class="link" id="link-SPATA-SPATA" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3392.6989619377164 

707,3392.6989619377164"></path><path class="link" id="link-FBIT-FBIT" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3404.23875432526 707,3404.23875432526"></path><path class="link" id="link-LIMI-LIMI" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3415.7785467128024 707,3415.7785467128024"></path><path 

class="link" id="link-CRYSTAL-CRYSTAL" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3427.318339100346 

707,3427.318339100346"></path><path class="link" id="link-BBC-BBC" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3438.8581314878893 707,3438.8581314878893"></path><path class="link" id="link-OT-OT" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3450.3979238754328 707,3450.3979238754328"></path><path 

class="link" id="link-COF-COF" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3461.9377162629753 

707,3461.9377162629753"></path><path class="link" id="link-XDE-XDE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3473.4775086505188 707,3473.4775086505188"></path><path class="link" id="link-ANG-ANG" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3485.017301038062 707,3485.017301038062"></path><path 

class="link" id="link-NMB-NMB" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3496.5570934256057 

707,3496.5570934256057"></path><path class="link" id="link-POS-POS" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3508.0968858131487 707,3508.0968858131487"></path><path class="link" id="link-GRYF-GRYF" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3519.636678200692 707,3519.636678200692"></path><path 

class="link" id="link-Dino-Dino" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3531.176470588235 

707,3531.176470588235"></path><path class="link" id="link-VLT-VLT" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3542.7162629757786 707,3542.7162629757786"></path><path class="link" id="link-ISIS-ISIS" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3554.2560553633216 707,3554.2560553633216"></path><path 

class="link" id="link-HTML5-HTML5" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3565.795847750865 

707,3565.795847750865"></path><path class="link" id="link-ALEA-ALEA" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3577.3356401384085 707,3577.3356401384085"></path><path class="link" id="link-B1bl3-B1bl3" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3588.875432525952 707,3588.875432525952"></path><path 

class="link" id="link-CORE-CORE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3600.415224913495 

707,3600.415224913495"></path><path class="link" id="link-U-U" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3611.955017301038 707,3611.955017301038"></path><path class="link" id="link-City-City" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3623.4948096885814 707,3623.4948096885814"></path><path 

class="link" id="link-SOLE-SOLE" d="M589.1666666666667,3306.150519031142C648.0833333333334,3306.150519031142 648.0833333333334,3300.38062283737 

707,3300.38062283737"></path><path class="link" id="link-BCSH-BCSH" d="M589.1666666666667,3306.150519031142C648.0833333333334,3306.150519031142 

648.0833333333334,3311.9204152249135 707,3311.9204152249135"></path><path class="link" id="link-ECN-ECN" 

d="M589.1666666666667,1067.430795847751C648.0833333333334,1067.430795847751 648.0833333333334,1061.6608996539792 707,1061.6608996539792"></path><path 

class="link" id="link-MAX-MAX" d="M589.1666666666667,1067.430795847751C648.0833333333334,1067.430795847751 648.0833333333334,1073.2006920415224 

707,1073.2006920415224"></path><path class="link" id="link-XDC-XDC" d="M589.1666666666667,1038.5813148788927C648.0833333333334,1038.5813148788927 

648.0833333333334,1038.5813148788927 707,1038.5813148788927"></path><path class="link" id="link-AMK-AMK" 

d="M589.1666666666667,1015.5017301038063C648.0833333333334,1015.5017301038063 648.0833333333334,1015.5017301038063 707,1015.5017301038063"></path><path 

class="link" id="link-PHO-PHO" d="M589.1666666666667,986.6522491349481C648.0833333333334,986.6522491349481 648.0833333333334,980.8823529411765 

707,980.8823529411765"></path><path class="link" id="link-365-365" d="M589.1666666666667,986.6522491349481C648.0833333333334,986.6522491349481 

648.0833333333334,992.4221453287197 707,992.4221453287197"></path><path class="link" id="link-PAC-PAC" 

d="M589.1666666666667,1211.6782006920416C648.0833333333334,1211.6782006920416 648.0833333333334,1211.6782006920416 707,1211.6782006920416"></path><g 

class="node" transform="translate(707,11.539792387543253)"><circle r="4.5" id="circle-NMC-NMC" class="circle-NMC circle-fork-BTC"></circle><text id="text-NMC-NMC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NMC</text></g><g class="node" transform="translate(589.1666666666667,1119.3598615916953)"><circle 

r="4.75" id="circle-IXC-IXC" class="circle-IXC circle-fork-BTC"></circle><text id="text-IXC-IXC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">IXC</text></g><g class="node" transform="translate(707,1119.3598615916953)"><circle r="4.5" id="circle-I0C-I0C" class="circle-I0C circle-fork-IXC"></circle><text id="text-

I0C-I0C" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">I0C</text></g><g class="node" transform="translate(707,911.6435986159171)"><circle 

r="4.5" id="circle-SC-SC" class="circle-SC circle-fork-BTC"></circle><text id="text-SC-SC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SC</text></g><g class="node" transform="translate(707,888.5640138408304)"><circle r="4.5" id="circle-GG-GG" class="circle-GG circle-fork-BTC"></circle><text id="text-

GG-GG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GG</text></g><g class="node" transform="translate

(117.8333333333333,4097.234774831328)"><circle r="5.25" id="circle-TBX-TBX" class="circle-TBX circle-fork-BTC"></circle><text id="text-TBX-TBX" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.75)" style="text-anchor: end;">TBX</text></g><g class="node" transform="translate(707,3646.5743944636683)"><circle r="4.5" id="circle-FBX-

FBX" class="circle-FBX circle-fork-TBX"></circle><text id="text-FBX-FBX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FBX</text></g><g 

class="node" transform="translate(235.66666666666669,4987.015743179104)"><circle r="61" id="circle-LTC-LTC" class="circle-LTC circle-fork-TBX"></circle><text id="text-LTC-

LTC" dx="-8" dy=".31em" class="btc" transform="translate(-67.8)" style="text-anchor: end;">LTC</text></g><g class="node" transform="translate(707,3681.193771626298)"><circle 

r="4.5" id="circle-BQC-BQC" class="circle-BQC circle-fork-LTC"></circle><text id="text-BQC-BQC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BQC</text></g><g class="node" transform="translate(589.1666666666667,6196.868512110726)"><circle r="4.75" id="circle-FTC-FTC" class="circle-FTC circle-fork-

LTC"></circle><text id="text-FTC-FTC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">FTC</text></g><g class="node" transform="translate

(707,6196.868512110726)"><circle r="4.5" id="circle-SRC-SRC" class="circle-SRC circle-fork-FTC"></circle><text id="text-SRC-SRC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SRC</text></g><g class="node" transform="translate(707,6127.629757785467)"><circle r="4.5" id="circle-NET-NET" 

class="circle-NET circle-fork-LTC"></circle><text id="text-NET-NET" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NET</text></g><g 

class="node" transform="translate(707,6104.550173010381)"><circle r="4.5" id="circle-FRK-FRK" class="circle-FRK circle-fork-LTC"></circle><text id="text-FRK-FRK" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRK</text></g><g class="node" transform="translate(707,6081.470588235294)"><circle r="4.5" id="circle-

ANC-ANC" class="circle-ANC circle-fork-LTC"></circle><text id="text-ANC-ANC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANC</text></g><g 

class="node" transform="translate(707,6058.391003460208)"><circle r="4.5" id="circle-IFC-IFC" class="circle-IFC circle-fork-LTC"></circle><text id="text-IFC-IFC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">IFC</text></g><g class="node" transform="translate(707,6035.311418685121)"><circle r="4.5" id="circle-XNC-XNC" 

class="circle-XNC circle-fork-LTC"></circle><text id="text-XNC-XNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XNC</text></g><g 

class="node" transform="translate(707,6012.231833910035)"><circle r="4.5" id="circle-FLO-FLO" class="circle-FLO circle-fork-LTC"></circle><text id="text-FLO-FLO" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLO</text></g><g class="node" transform="translate(589.1666666666667,6462.283737024221)"><circle 

r="4.75" id="circle-MEC-MEC" class="circle-MEC circle-fork-LTC"></circle><text id="text-MEC-MEC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">MEC</text></g><g class="node" transform="translate(707,6462.283737024221)"><circle r="4.5" id="circle-NAN-NAN" class="circle-NAN circle-fork-MEC"></circle><text 

id="text-NAN-NAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NAN</text></g><g class="node" transform="translate

(589.1666666666667,6439.204152249135)"><circle r="4.75" id="circle-MNC-MNC" class="circle-MNC circle-fork-LTC"></circle><text id="text-MNC-MNC" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">MNC</text></g><g class="node" transform="translate(707,6439.204152249135)"><circle r="4.5" id="circle-TCN-

TCN" class="circle-TCN circle-fork-MNC"></circle><text id="text-TCN-TCN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TCN</text></g><g 

class="node" transform="translate(707,5942.993079584775)"><circle r="4.5" id="circle-DGC-DGC" class="circle-DGC circle-fork-LTC"></circle><text id="text-DGC-DGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DGC</text></g><g class="node" transform="translate(589.1666666666667,6416.1245674740485)"><circle 

r="4.75" id="circle-WDC-WDC" class="circle-WDC circle-fork-LTC"></circle><text id="text-WDC-WDC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">WDC</text></g><g class="node" transform="translate(707,6416.1245674740485)"><circle r="4.5" id="circle-PNC-PNC" class="circle-PNC circle-fork-WDC"></circle><text 

id="text-PNC-PNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PNC</text></g><g class="node" transform="translate

(707,5896.833910034602)"><circle r="4.5" id="circle-NBL-NBL" class="circle-NBL circle-fork-LTC"></circle><text id="text-NBL-NBL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NBL</text></g><g class="node" transform="translate(707,5873.754325259515)"><circle r="4.5" id="circle-ALF-ALF" class="circle-

ALF circle-fork-LTC"></circle><text id="text-ALF-ALF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALF</text></g><g class="node" 

transform="translate(707,5850.674740484429)"><circle r="4.5" id="circle-ARG-ARG" class="circle-ARG circle-fork-LTC"></circle><text id="text-ARG-ARG" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ARG</text></g><g class="node" transform="translate(707,5827.595155709342)"><circle r="4.5" id="circle-PWC-PWC" 

class="circle-PWC circle-fork-LTC"></circle><text id="text-PWC-PWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PWC</text></g><g 

class="node" transform="translate(707,5804.515570934256)"><circle r="4.5" id="circle-KGC-KGC" class="circle-KGC circle-fork-LTC"></circle><text id="text-KGC-KGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KGC</text></g><g class="node" transform="translate(707,5781.435986159169)"><circle r="4.5" id="circle-

FST-FST" class="circle-FST circle-fork-LTC"></circle><text id="text-FST-FST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FST</text></g><g 

class="node" transform="translate(707,5758.356401384083)"><circle r="4.5" id="circle-MEM-MEM" class="circle-MEM circle-fork-LTC"></circle><text id="text-MEM-MEM" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEM</text></g><g class="node" transform="translate(707,5735.276816608996)"><circle r="4.5" 

id="circle-GLC-GLC" class="circle-GLC circle-fork-LTC"></circle><text id="text-GLC-GLC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GLC</text></g><g class="node" transform="translate(707,5712.19723183391)"><circle r="4.5" id="circle-6CN-6CN" class="circle-6CN circle-fork-LTC"></circle><text 

id="text-6CN-6CN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">6CN</text></g><g class="node" transform="translate

(707,5689.117647058823)"><circle r="4.5" id="circle-RCH-RCH" class="circle-RCH circle-fork-LTC"></circle><text id="text-RCH-RCH" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RCH</text></g><g class="node" transform="translate(707,5666.038062283737)"><circle r="4.5" id="circle-REC-REC" 

class="circle-REC circle-fork-LTC"></circle><text id="text-REC-REC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">REC</text></g><g 

class="node" transform="translate(707,5642.9584775086505)"><circle r="4.5" id="circle-eDC-eDC" class="circle-eDC circle-fork-LTC"></circle><text id="text-eDC-eDC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">eDC</text></g><g class="node" transform="translate(707,5619.8788927335645)"><circle r="4.5" 

id="circle-EMD-EMD" class="circle-EMD circle-fork-LTC"></circle><text id="text-EMD-EMD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">EMD</text></g><g class="node" transform="translate(707,5596.799307958478)"><circle r="4.5" id="circle-SXC-SXC" class="circle-SXC circle-fork-LTC"></circle><text 

id="text-SXC-SXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SXC</text></g><g class="node" transform="translate

(707,5573.719723183392)"><circle r="4.5" id="circle-NC-NC" class="circle-NC circle-fork-LTC"></circle><text id="text-NC-NC" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">NC</text></g><g class="node" transform="translate(707,5550.640138408305)"><circle r="4.5" id="circle-TDC-TDC" class="circle-TDC circle-fork-

LTC"></circle><text id="text-TDC-TDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TDC</text></g><g class="node" transform="translate

(707,5527.560553633219)"><circle r="4.5" id="circle-VLC-VLC" class="circle-VLC circle-fork-LTC"></circle><text id="text-VLC-VLC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VLC</text></g><g class="node" transform="translate(353.5,6588.259803921568)"><circle r="5.25" id="circle-JKC-JKC" 

class="circle-JKC circle-fork-LTC"></circle><text id="text-JKC-JKC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">JKC</text></g><g 

class="node" transform="translate(471.33333333333337,6620.955882352941)"><circle r="5" id="circle-LKY-LKY" class="circle-LKY circle-fork-JKC"></circle><text id="text-LKY-LKY" 

dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: end;">LKY</text></g><g class="node" transform="translate

(589.1666666666667,6641.150519031142)"><circle r="5.5" id="circle-DOGE-DOGE" class="circle-DOGE circle-fork-LKY"></circle><text id="text-DOGE-DOGE" dx="-8" dy=".31em" 

class="btc" transform="translate(-1)" style="text-anchor: end;">DOGE</text></g><g class="node" transform="translate(707,6623.840830449827)"><circle r="4.5" id="circle-APE-APE" 

class="circle-APE circle-fork-DOGE"></circle><text id="text-APE-APE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">APE</text></g><g 

class="node" transform="translate(707,6635.3806228373705)"><circle r="4.5" id="circle-NYAN-NYAN" class="circle-NYAN circle-fork-DOGE"></circle><text id="text-NYAN-NYAN" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NYAN</text></g><g class="node" transform="translate(707,6646.920415224913)"><circle r="4.5" 

id="circle-CAT-CAT" class="circle-CAT circle-fork-DOGE"></circle><text id="text-CAT-CAT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CAT</text></g><g class="node" transform="translate(707,6658.4602076124565)"><circle r="4.5" id="circle-PND-PND" class="circle-PND circle-fork-DOGE"></circle><text 

id="text-PND-PND" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PND</text></g><g class="node" transform="translate

(707,6600.76124567474)"><circle r="4.5" id="circle-JBG-JBG" class="circle-JBG circle-fork-LKY"></circle><text id="text-JBG-JBG" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">JBG</text></g><g class="node" transform="translate(707,6566.141868512111)"><circle r="4.5" id="circle-SPC-SPC" 

class="circle-SPC circle-fork-JKC"></circle><text id="text-SPC-SPC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPC</text></g><g class="node" 

transform="translate(707,6577.681660899654)"><circle r="4.5" id="circle-GDC-GDC" class="circle-GDC circle-fork-JKC"></circle><text id="text-GDC-GDC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">GDC</text></g><g class="node" transform="translate(707,5481.401384083045)"><circle r="4.5" id="circle-CSC-CSC" 

class="circle-CSC circle-fork-LTC"></circle><text id="text-CSC-CSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CSC</text></g><g 

class="node" transform="translate(707,5458.321799307959)"><circle r="4.5" id="circle-RED-RED" class="circle-RED circle-fork-LTC"></circle><text id="text-RED-RED" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RED</text></g><g class="node" transform="translate(707,5435.242214532872)"><circle r="4.5" id="circle-

EGC-EGC" class="circle-EGC circle-fork-LTC"></circle><text id="text-EGC-EGC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EGC</text></g><g 

class="node" transform="translate(707,5412.162629757785)"><circle r="4.5" id="circle-ELP-ELP" class="circle-ELP circle-fork-LTC"></circle><text id="text-ELP-ELP" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELP</text></g><g class="node" transform="translate(707,5389.083044982699)"><circle r="4.5" id="circle-

QTC-QTC" class="circle-QTC circle-fork-LTC"></circle><text id="text-QTC-QTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">QTC</text></g><g class="node" transform="translate(707,5366.003460207612)"><circle r="4.5" id="circle-USC-USC" class="circle-USC circle-fork-LTC"></circle><text 

id="text-USC-USC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">USC</text></g><g class="node" transform="translate

(707,5342.923875432525)"><circle r="4.5" id="circle-FEC-FEC" class="circle-FEC circle-fork-LTC"></circle><text id="text-FEC-FEC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FEC</text></g><g class="node" transform="translate(707,5319.844290657439)"><circle r="4.5" id="circle-GLD-GLD" 

class="circle-GLD circle-fork-LTC"></circle><text id="text-GLD-GLD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLD</text></g><g 

class="node" transform="translate(707,5296.764705882352)"><circle r="4.5" id="circle-PXC-PXC" class="circle-PXC circle-fork-LTC"></circle><text id="text-PXC-PXC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PXC</text></g><g class="node" transform="translate(589.1666666666667,6393.0449826989625)"><circle 

r="4.75" id="circle-RYC-RYC" class="circle-RYC circle-fork-LTC"></circle><text id="text-RYC-RYC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">RYC</text></g><g class="node" transform="translate(707,6393.0449826989625)"><circle r="4.5" id="circle-SBC-SBC" class="circle-SBC circle-fork-RYC"></circle><text 

id="text-SBC-SBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SBC</text></g><g class="node" transform="translate

(707,5250.605536332179)"><circle r="4.5" id="circle-NRB-NRB" class="circle-NRB circle-fork-LTC"></circle><text id="text-NRB-NRB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NRB</text></g><g class="node" transform="translate(707,5227.525951557093)"><circle r="4.5" id="circle-CTC-CTC" 

class="circle-CTC circle-fork-LTC"></circle><text id="text-CTC-CTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CTC</text></g><g 

class="node" transform="translate(707,5204.446366782006)"><circle r="4.5" id="circle-JPC-JPC" class="circle-JPC circle-fork-LTC"></circle><text id="text-JPC-JPC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JPC</text></g><g class="node" transform="translate(707,5181.36678200692)"><circle r="4.5" id="circle-

CNC-CNC" class="circle-CNC circle-fork-LTC"></circle><text id="text-CNC-CNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CNC</text></g><g 

class="node" transform="translate(707,5158.2871972318335)"><circle r="4.5" id="circle-EZC-EZC" class="circle-EZC circle-fork-LTC"></circle><text id="text-EZC-EZC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EZC</text></g><g class="node" transform="translate(707,5135.2076124567475)"><circle r="4.5" id="circle-

ICE-ICE" class="circle-ICE circle-fork-LTC"></circle><text id="text-ICE-ICE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ICE</text></g><g 

class="node" transform="translate(707,5112.128027681661)"><circle r="4.5" id="circle-HYC-HYC" class="circle-HYC circle-fork-LTC"></circle><text id="text-HYC-HYC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HYC</text></g><g class="node" transform="translate(707,5089.048442906575)"><circle r="4.5" id="circle-

ELC-ELC" class="circle-ELC circle-fork-LTC"></circle><text id="text-ELC-ELC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELC</text></g><g 

class="node" transform="translate(707,5065.968858131488)"><circle r="4.5" id="circle-ZEU-ZEU" class="circle-ZEU circle-fork-LTC"></circle><text id="text-ZEU-ZEU" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZEU</text></g><g class="node" transform="translate(707,5042.889273356402)"><circle r="4.5" id="circle-

BEL-BEL" class="circle-BEL circle-fork-LTC"></circle><text id="text-BEL-BEL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BEL</text></g><g 

class="node" transform="translate(707,5019.809688581315)"><circle r="4.5" id="circle-PLT-PLT" class="circle-PLT circle-fork-LTC"></circle><text id="text-PLT-PLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PLT</text></g><g class="node" transform="translate(707,4996.730103806229)"><circle r="4.5" id="circle-

EXC-EXC" class="circle-EXC circle-fork-LTC"></circle><text id="text-EXC-EXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXC</text></g><g 

class="node" transform="translate(707,4973.650519031142)"><circle r="4.5" id="circle-ITC-ITC" class="circle-ITC circle-fork-LTC"></circle><text id="text-ITC-ITC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ITC</text></g><g class="node" transform="translate(707,4950.570934256056)"><circle r="4.5" id="circle-

GIL-GIL" class="circle-GIL circle-fork-LTC"></circle><text id="text-GIL-GIL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GIL</text></g><g 

class="node" transform="translate(707,4927.491349480969)"><circle r="4.5" id="circle-PCN-PCN" class="circle-PCN circle-fork-LTC"></circle><text id="text-PCN-PCN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PCN</text></g><g class="node" transform="translate(707,4904.411764705883)"><circle r="4.5" id="circle-

WEC-WEC" class="circle-WEC circle-fork-LTC"></circle><text id="text-WEC-WEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">WEC</text></g><g class="node" transform="translate(707,4881.332179930796)"><circle r="4.5" id="circle-TYC-TYC" class="circle-TYC circle-fork-LTC"></circle><text 

id="text-TYC-TYC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TYC</text></g><g class="node" transform="translate

(707,4858.252595155709)"><circle r="4.5" id="circle-ARC-ARC" class="circle-ARC circle-fork-LTC"></circle><text id="text-ARC-ARC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ARC</text></g><g class="node" transform="translate(707,4835.173010380623)"><circle r="4.5" id="circle-CRC-CRC" 

class="circle-CRC circle-fork-LTC"></circle><text id="text-CRC-CRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CRC</text></g><g 

class="node" transform="translate(707,4812.093425605536)"><circle r="4.5" id="circle-DBL-DBL" class="circle-DBL circle-fork-LTC"></circle><text id="text-DBL-DBL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DBL</text></g><g class="node" transform="translate(707,4789.01384083045)"><circle r="4.5" id="circle-

GME-GME" class="circle-GME circle-fork-LTC"></circle><text id="text-GME-GME" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GME</text></g><g class="node" transform="translate(471.33333333333337,6485.363321799308)"><circle r="4.75" id="circle-STR-STR" class="circle-STR circle-fork-

LTC"></circle><text id="text-STR-STR" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">STR</text></g><g class="node" transform="translate

(589.1666666666667,6485.363321799308)"><circle r="4.75" id="circle-ADT-ADT" class="circle-ADT circle-fork-STR"></circle><text id="text-ADT-ADT" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">ADT</text></g><g class="node" transform="translate(707,6485.363321799308)"><circle r="4.5" id="circle-COL-

COL" class="circle-COL circle-fork-ADT"></circle><text id="text-COL-COL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COL</text></g><g 

class="node" transform="translate(707,4742.854671280277)"><circle r="4.5" id="circle-FLS-FLS" class="circle-FLS circle-fork-LTC"></circle><text id="text-FLS-FLS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLS</text></g><g class="node" transform="translate(707,4719.77508650519)"><circle r="4.5" id="circle-

QWC-QWC" class="circle-QWC circle-fork-LTC"></circle><text id="text-QWC-QWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">QWC</text></g><g class="node" transform="translate(707,4696.695501730104)"><circle r="4.5" id="circle-VAG-VAG" class="circle-VAG circle-fork-LTC"></circle><text 

id="text-VAG-VAG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VAG</text></g><g class="node" transform="translate

(707,4673.615916955017)"><circle r="4.5" id="circle-BEST-BEST" class="circle-BEST circle-fork-LTC"></circle><text id="text-BEST-BEST" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BEST</text></g><g class="node" transform="translate(707,4650.536332179931)"><circle r="4.5" id="circle-POK-POK" 

class="circle-POK circle-fork-LTC"></circle><text id="text-POK-POK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">POK</text></g><g 

class="node" transform="translate(707,4627.4567474048445)"><circle r="4.5" id="circle-CYB-CYB" class="circle-CYB circle-fork-LTC"></circle><text id="text-CYB-CYB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CYB</text></g><g class="node" transform="translate(707,4604.377162629758)"><circle r="4.5" id="circle-

AMC-AMC" class="circle-AMC circle-fork-LTC"></circle><text id="text-AMC-AMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AMC</text></g><g 

class="node" transform="translate(707,4581.2975778546715)"><circle r="4.5" id="circle-BOS-BOS" class="circle-BOS circle-fork-LTC"></circle><text id="text-BOS-BOS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOS</text></g><g class="node" transform="translate(707,4558.217993079585)"><circle r="4.5" id="circle-

LOVE-LOVE" class="circle-LOVE circle-fork-LTC"></circle><text id="text-LOVE-LOVE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LOVE</text></g><g class="node" transform="translate(353.5,6523.829296424453)"><circle r="5.25" id="circle-SMC-SMC" class="circle-SMC circle-fork-LTC"></circle><text 

id="text-SMC-SMC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">SMC</text></g><g class="node" transform="translate

(707,6508.442906574394)"><circle r="4.5" id="circle-DNC-DNC" class="circle-DNC circle-fork-SMC"></circle><text id="text-DNC-DNC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DNC</text></g><g class="node" transform="translate(471.33333333333337,6543.062283737025)"><circle r="4.75" id="circle-

SPT-SPT" class="circle-SPT circle-fork-SMC"></circle><text id="text-SPT-SPT" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SPT</text></g><g class="node" transform="translate(589.1666666666667,6543.062283737025)"><circle r="4.75" id="circle-CPR-CPR" class="circle-CPR circle-fork-

SPT"></circle><text id="text-CPR-CPR" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CPR</text></g><g class="node" transform="translate

(707,6543.062283737025)"><circle r="4.5" id="circle-PINGAS-PINGAS" class="circle-PINGAS circle-fork-CPR"></circle><text id="text-PINGAS-PINGAS" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">PINGAS</text></g><g class="node" transform="translate(707,6519.982698961938)"><circle r="4.5" id="circle-GEO-

GEO" class="circle-GEO circle-fork-SMC"></circle><text id="text-GEO-GEO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GEO</text></g><g 

class="node" transform="translate(707,4512.058823529412)"><circle r="4.5" id="circle-LOTTO-LOTTO" class="circle-LOTTO circle-fork-LTC"></circle><text id="text-LOTTO-

LOTTO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOTTO</text></g><g class="node" transform="translate(707,4488.979238754325)"><circle 

r="4.5" id="circle-XIV-XIV" class="circle-XIV circle-fork-LTC"></circle><text id="text-XIV-XIV" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XIV</text></g><g class="node" transform="translate(707,4465.899653979239)"><circle r="4.5" id="circle-LDC-LDC" class="circle-LDC circle-fork-LTC"></circle><text 

id="text-LDC-LDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LDC</text></g><g class="node" transform="translate

(707,4442.820069204152)"><circle r="4.5" id="circle-CHI-CHI" class="circle-CHI circle-fork-LTC"></circle><text id="text-CHI-CHI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHI</text></g><g class="node" transform="translate(707,4419.740484429066)"><circle r="4.5" id="circle-MEOW-MEOW" 

class="circle-MEOW circle-fork-LTC"></circle><text id="text-MEOW-MEOW" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEOW</text></g><g 

class="node" transform="translate(707,4396.660899653979)"><circle r="4.5" id="circle-HTC-HTC" class="circle-HTC circle-fork-LTC"></circle><text id="text-HTC-HTC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HTC</text></g><g class="node" transform="translate(707,4373.581314878893)"><circle r="4.5" id="circle-

NWC-NWC" class="circle-NWC circle-fork-LTC"></circle><text id="text-NWC-NWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">NWC</text></g><g class="node" transform="translate(707,4350.501730103806)"><circle r="4.5" id="circle-HAM-HAM" class="circle-HAM circle-fork-LTC"></circle><text 

id="text-HAM-HAM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HAM</text></g><g class="node" transform="translate

(707,4327.422145328719)"><circle r="4.5" id="circle-VWC-VWC" class="circle-VWC circle-fork-LTC"></circle><text id="text-VWC-VWC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VWC</text></g><g class="node" transform="translate(707,4304.342560553633)"><circle r="4.5" id="circle-MOON-MOON" 

class="circle-MOON circle-fork-LTC"></circle><text id="text-MOON-MOON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOON</text></g><g 

class="node" transform="translate(707,4281.262975778546)"><circle r="4.5" id="circle-TFC-TFC" class="circle-TFC circle-fork-LTC"></circle><text id="text-TFC-TFC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TFC</text></g><g class="node" transform="translate(707,4258.18339100346)"><circle r="4.5" id="circle-

TIPS-TIPS" class="circle-TIPS circle-fork-LTC"></circle><text id="text-TIPS-TIPS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TIPS</text></g><g class="node" transform="translate(707,4235.103806228373)"><circle r="4.5" id="circle-42-42" class="circle-42 circle-fork-LTC"></circle><text id="text-42-

42" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">42</text></g><g class="node" transform="translate(707,4212.024221453287)"><circle r="4.5" 

id="circle-CAGE-CAGE" class="circle-CAGE circle-fork-LTC"></circle><text id="text-CAGE-CAGE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CAGE</text></g><g class="node" transform="translate(707,4188.9446366782)"><circle r="4.5" id="circle-BOS-BOS" class="circle-BOS circle-fork-LTC"></circle><text 

id="text-BOS-BOS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOS</text></g><g class="node" transform="translate

(707,4165.865051903114)"><circle r="4.5" id="circle-VOLT-VOLT" class="circle-VOLT circle-fork-LTC"></circle><text id="text-VOLT-VOLT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VOLT</text></g><g class="node" transform="translate(707,4142.785467128027)"><circle r="4.5" id="circle-MDC-MDC" 

class="circle-MDC circle-fork-LTC"></circle><text id="text-MDC-MDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MDC</text></g><g 

class="node" transform="translate(707,4119.705882352941)"><circle r="4.5" id="circle-BAT-BAT" class="circle-BAT circle-fork-LTC"></circle><text id="text-BAT-BAT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BAT</text></g><g class="node" transform="translate(707,4096.6262975778545)"><circle r="4.5" 

id="circle-SOL-SOL" class="circle-SOL circle-fork-LTC"></circle><text id="text-SOL-SOL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SOL</text></g><g class="node" transform="translate(707,4073.5467128027685)"><circle r="4.5" id="circle-NOBL-NOBL" class="circle-NOBL circle-fork-LTC"></circle><text 

id="text-NOBL-NOBL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NOBL</text></g><g class="node" transform="translate

(707,4050.4671280276816)"><circle r="4.5" id="circle-MOSC-MOSC" class="circle-MOSC circle-fork-LTC"></circle><text id="text-MOSC-MOSC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MOSC</text></g><g class="node" transform="translate(707,4027.3875432525956)"><circle r="4.5" id="circle-SOC-SOC" 

class="circle-SOC circle-fork-LTC"></circle><text id="text-SOC-SOC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SOC</text></g><g 

class="node" transform="translate(707,4004.3079584775087)"><circle r="4.5" id="circle-JUN-JUN" class="circle-JUN circle-fork-LTC"></circle><text id="text-JUN-JUN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JUN</text></g><g class="node" transform="translate(707,3981.2283737024222)"><circle r="4.5" 

id="circle-BEC-BEC" class="circle-BEC circle-fork-LTC"></circle><text id="text-BEC-BEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BEC</text></g><g class="node" transform="translate(707,3958.1487889273358)"><circle r="4.5" id="circle-ALC-ALC" class="circle-ALC circle-fork-LTC"></circle><text 

id="text-ALC-ALC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALC</text></g><g class="node" transform="translate

(707,3935.0692041522493)"><circle r="4.5" id="circle-KARM-KARM" class="circle-KARM circle-fork-LTC"></circle><text id="text-KARM-KARM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KARM</text></g><g class="node" transform="translate(707,3911.9896193771624)"><circle r="4.5" id="circle-HBC-HBC" 

class="circle-HBC circle-fork-LTC"></circle><text id="text-HBC-HBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HBC</text></g><g 

class="node" transform="translate(707,3888.9100346020764)"><circle r="4.5" id="circle-CORG-CORG" class="circle-CORG circle-fork-LTC"></circle><text id="text-CORG-CORG" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CORG</text></g><g class="node" transform="translate(707,3865.8304498269895)"><circle r="4.5" 

id="circle-OLY-OLY" class="circle-OLY circle-fork-LTC"></circle><text id="text-OLY-OLY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">OLY</text></g><g class="node" transform="translate(707,3842.7508650519026)"><circle r="4.5" id="circle-SNP-SNP" class="circle-SNP circle-fork-LTC"></circle><text 

id="text-SNP-SNP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SNP</text></g><g class="node" transform="translate

(707,3819.6712802768166)"><circle r="4.5" id="circle-FLAP-FLAP" class="circle-FLAP circle-fork-LTC"></circle><text id="text-FLAP-FLAP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FLAP</text></g><g class="node" transform="translate(707,3796.5916955017296)"><circle r="4.5" id="circle-DUCK-DUCK" 

class="circle-DUCK circle-fork-LTC"></circle><text id="text-DUCK-DUCK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DUCK</text></g><g 

class="node" transform="translate(707,3727.3529411764707)"><circle r="4.5" id="circle-CCC-CCC" class="circle-CCC circle-fork-LTC"></circle><text id="text-CCC-CCC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCC</text></g><g class="node" transform="translate(707,3692.7335640138413)"><circle r="4.5" 

id="circle-APP-APP" class="circle-APP circle-fork-LTC"></circle><text id="text-APP-APP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">APP</text></g><g class="node" transform="translate(707,3704.273356401384)"><circle r="4.5" id="circle-GMC-GMC" class="circle-GMC circle-fork-LTC"></circle><text 

id="text-GMC-GMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GMC</text></g><g class="node" transform="translate

(707,3715.8131487889273)"><circle r="4.5" id="circle-ENC-ENC" class="circle-ENC circle-fork-LTC"></circle><text id="text-ENC-ENC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ENC</text></g><g class="node" transform="translate(707,6150.7093425605535)"><circle r="4.5" id="circle-RON-RON" 

class="circle-RON circle-fork-LTC"></circle><text id="text-RON-RON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RON</text></g><g 

class="node" transform="translate(589.1666666666667,6294.9567474048445)"><circle r="8" id="circle-PIC-PIC" class="circle-PIC circle-fork-LTC"></circle><text id="text-PIC-PIC" 

dx="-8" dy=".31em" class="btc" transform="translate(-3.5)" style="text-anchor: end;">PIC</text></g><g class="node" transform="translate(707,6219.948096885813)"><circle r="4.5" 

id="circle-BEER-BEER" class="circle-BEER circle-fork-PIC"></circle><text id="text-BEER-BEER" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BEER</text></g><g class="node" transform="translate(707,6346.88581314879)"><circle r="4.5" id="circle-PAS-PAS" class="circle-PAS circle-fork-PIC"></circle><text 

id="text-PAS-PAS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PAS</text></g><g class="node" transform="translate

(707,6277.64705882353)"><circle r="4.5" id="circle-WWW-WWW" class="circle-WWW circle-fork-PIC"></circle><text id="text-WWW-WWW" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">WWW</text></g><g class="node" transform="translate(707,6231.487889273356)"><circle r="4.5" id="circle-FISH-FISH" 

class="circle-FISH circle-fork-PIC"></circle><text id="text-FISH-FISH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FISH</text></g><g 

class="node" transform="translate(707,6243.027681660899)"><circle r="4.5" id="circle-COLA-COLA" class="circle-COLA circle-fork-PIC"></circle><text id="text-COLA-COLA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COLA</text></g><g class="node" transform="translate(707,6254.567474048443)"><circle r="4.5" 

id="circle-TEL-TEL" class="circle-TEL circle-fork-PIC"></circle><text id="text-TEL-TEL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TEL</text></g><g class="node" transform="translate(707,6266.107266435986)"><circle r="4.5" id="circle-VDC-VDC" class="circle-VDC circle-fork-PIC"></circle><text 

id="text-VDC-VDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VDC</text></g><g class="node" transform="translate

(707,6369.965397923876)"><circle r="4.5" id="circle-OIL-OIL" class="circle-OIL circle-fork-PIC"></circle><text id="text-OIL-OIL" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">OIL</text></g><g class="node" transform="translate(707,6289.186851211073)"><circle r="4.5" id="circle-SHOP-SHOP" class="circle-SHOP circle-

fork-PIC"></circle><text id="text-SHOP-SHOP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHOP</text></g><g class="node" 

transform="translate(707,6300.726643598616)"><circle r="4.5" id="circle-HAC-HAC" class="circle-HAC circle-fork-PIC"></circle><text id="text-HAC-HAC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HAC</text></g><g class="node" transform="translate(707,6312.266435986159)"><circle r="4.5" id="circle-HDC-HDC" 

class="circle-HDC circle-fork-PIC"></circle><text id="text-HDC-HDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HDC</text></g><g 

class="node" transform="translate(707,6323.806228373703)"><circle r="4.5" id="circle-LADY-LADY" class="circle-LADY circle-fork-PIC"></circle><text id="text-LADY-LADY" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LADY</text></g><g class="node" transform="translate(707,6335.346020761246)"><circle r="4.5" 

id="circle-MUSC-MUSC" class="circle-MUSC circle-fork-PIC"></circle><text id="text-MUSC-MUSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MUSC</text></g><g class="node" transform="translate(707,6358.425605536332)"><circle r="4.5" id="circle-CIC-CIC" class="circle-CIC circle-fork-PIC"></circle><text 

id="text-CIC-CIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CIC</text></g><g class="node" transform="translate

(707,3750.4325259515567)"><circle r="4.5" id="circle-CHAM-CHAM" class="circle-CHAM circle-fork-LTC"></circle><text id="text-CHAM-CHAM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHAM</text></g><g class="node" transform="translate(707,3761.9723183391)"><circle r="4.5" id="circle-NOTE-NOTE" 

class="circle-NOTE circle-fork-LTC"></circle><text id="text-NOTE-NOTE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NOTE</text></g><g 

class="node" transform="translate(707,3773.5121107266436)"><circle r="4.5" id="circle-FUNK-FUNK" class="circle-FUNK circle-fork-LTC"></circle><text id="text-FUNK-FUNK" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FUNK</text></g><g class="node" transform="translate(707,6173.7889273356395)"><circle r="4.5" 

id="circle-VMP-VMP" class="circle-VMP circle-fork-LTC"></circle><text id="text-VMP-VMP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">VMP</text></g><g class="node" transform="translate(707,3808.131487889273)"><circle r="4.5" id="circle-LYC-LYC" class="circle-LYC circle-fork-LTC"></circle><text 

id="text-LYC-LYC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LYC</text></g><g class="node" transform="translate

(707,3831.21107266436)"><circle r="4.5" id="circle-ZMB-ZMB" class="circle-ZMB circle-fork-LTC"></circle><text id="text-ZMB-ZMB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ZMB</text></g><g class="node" transform="translate(707,3854.290657439446)"><circle r="4.5" id="circle-MVC-MVC" 

class="circle-MVC circle-fork-LTC"></circle><text id="text-MVC-MVC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MVC</text></g><g 

class="node" transform="translate(707,3877.370242214533)"><circle r="4.5" id="circle-RBC-RBC" class="circle-RBC circle-fork-LTC"></circle><text id="text-RBC-RBC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RBC</text></g><g class="node" transform="translate(707,3900.449826989619)"><circle r="4.5" id="circle-

PHI-PHI" class="circle-PHI circle-fork-LTC"></circle><text id="text-PHI-PHI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHI</text></g><g 

class="node" transform="translate(707,3923.529411764706)"><circle r="4.5" id="circle-BLA-BLA" class="circle-BLA circle-fork-LTC"></circle><text id="text-BLA-BLA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BLA</text></g><g class="node" transform="translate(707,3946.6089965397923)"><circle r="4.5" id="circle-

FRY-FRY" class="circle-FRY circle-fork-LTC"></circle><text id="text-FRY-FRY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRY</text></g><g 

class="node" transform="translate(707,3969.688581314879)"><circle r="4.5" id="circle-RPD-RPD" class="circle-RPD circle-fork-LTC"></circle><text id="text-RPD-RPD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RPD</text></g><g class="node" transform="translate(707,3992.7681660899652)"><circle r="4.5" 

id="circle-LMC-LMC" class="circle-LMC circle-fork-LTC"></circle><text id="text-LMC-LMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LMC</text></g><g class="node" transform="translate(707,4015.847750865052)"><circle r="4.5" id="circle-ANT-ANT" class="circle-ANT circle-fork-LTC"></circle><text 

id="text-ANT-ANT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANT</text></g><g class="node" transform="translate

(707,4038.927335640138)"><circle r="4.5" id="circle-BEE-BEE" class="circle-BEE circle-fork-LTC"></circle><text id="text-BEE-BEE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BEE</text></g><g class="node" transform="translate(707,4062.006920415225)"><circle r="4.5" id="circle-CARBON-CARBON" 

class="circle-CARBON circle-fork-LTC"></circle><text id="text-CARBON-CARBON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CARBON</text></g><g class="node" transform="translate(707,4085.086505190311)"><circle r="4.5" id="circle-SHC-SHC" class="circle-SHC circle-fork-LTC"></circle><text 

id="text-SHC-SHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHC</text></g><g class="node" transform="translate

(707,4108.166089965398)"><circle r="4.5" id="circle-VGC-VGC" class="circle-VGC circle-fork-LTC"></circle><text id="text-VGC-VGC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VGC</text></g><g class="node" transform="translate(707,4131.245674740485)"><circle r="4.5" id="circle-FSC-FSC" 

class="circle-FSC circle-fork-LTC"></circle><text id="text-FSC-FSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FSC</text></g><g class="node" 

transform="translate(707,4154.325259515571)"><circle r="4.5" id="circle-EQB-EQB" class="circle-EQB circle-fork-LTC"></circle><text id="text-EQB-EQB" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">EQB</text></g><g class="node" transform="translate(707,4177.404844290658)"><circle r="4.5" id="circle-PENG-

PENG" class="circle-PENG circle-fork-LTC"></circle><text id="text-PENG-PENG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PENG</text></g><g class="node" transform="translate(707,4200.484429065744)"><circle r="4.5" id="circle-ONI-ONI" class="circle-ONI circle-fork-LTC"></circle><text 

id="text-ONI-ONI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONI</text></g><g class="node" transform="translate

(707,4223.564013840831)"><circle r="4.5" id="circle-PCC-PCC" class="circle-PCC circle-fork-LTC"></circle><text id="text-PCC-PCC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PCC</text></g><g class="node" transform="translate(707,4246.643598615917)"><circle r="4.5" id="circle-VNC-VNC" 

class="circle-VNC circle-fork-LTC"></circle><text id="text-VNC-VNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VNC</text></g><g class="node" 

transform="translate(707,4269.723183391004)"><circle r="4.5" id="circle-TAXI-TAXI" class="circle-TAXI circle-fork-LTC"></circle><text id="text-TAXI-TAXI" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TAXI</text></g><g class="node" transform="translate(707,4292.80276816609)"><circle r="4.5" id="circle-BLL-BLL" 

class="circle-BLL circle-fork-LTC"></circle><text id="text-BLL-BLL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BLL</text></g><g class="node" 

transform="translate(707,4315.882352941177)"><circle r="4.5" id="circle-MCR-MCR" class="circle-MCR circle-fork-LTC"></circle><text id="text-MCR-MCR" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">MCR</text></g><g class="node" transform="translate(707,4338.961937716263)"><circle r="4.5" id="circle-MRS-MRS" 

class="circle-MRS circle-fork-LTC"></circle><text id="text-MRS-MRS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MRS</text></g><g 

class="node" transform="translate(707,4362.0415224913495)"><circle r="4.5" id="circle-LTB-LTB" class="circle-LTB circle-fork-LTC"></circle><text id="text-LTB-LTB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTB</text></g><g class="node" transform="translate(707,4385.1211072664355)"><circle r="4.5" 

id="circle-XXL-XXL" class="circle-XXL circle-fork-LTC"></circle><text id="text-XXL-XXL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XXL</text></g><g class="node" transform="translate(707,4408.200692041522)"><circle r="4.5" id="circle-SDM-SDM" class="circle-SDM circle-fork-LTC"></circle><text 

id="text-SDM-SDM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SDM</text></g><g class="node" transform="translate

(707,4431.280276816608)"><circle r="4.5" id="circle-PAND-PAND" class="circle-PAND circle-fork-LTC"></circle><text id="text-PAND-PAND" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PAND</text></g><g class="node" transform="translate(707,4454.359861591695)"><circle r="4.5" id="circle-RDD-RDD" 

class="circle-RDD circle-fork-LTC"></circle><text id="text-RDD-RDD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RDD</text></g><g 

class="node" transform="translate(707,4477.439446366781)"><circle r="4.5" id="circle-YACC-YACC" class="circle-YACC circle-fork-LTC"></circle><text id="text-YACC-YACC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">YACC</text></g><g class="node" transform="translate(707,4500.519031141868)"><circle r="4.5" 

id="circle-PRC-PRC" class="circle-PRC circle-fork-LTC"></circle><text id="text-PRC-PRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PRC</text></g><g class="node" transform="translate(707,4523.598615916955)"><circle r="4.5" id="circle-SUN-SUN" class="circle-SUN circle-fork-LTC"></circle><text 

id="text-SUN-SUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SUN</text></g><g class="node" transform="translate

(707,4546.678200692041)"><circle r="4.5" id="circle-SOCHI-SOCHI" class="circle-SOCHI circle-fork-LTC"></circle><text id="text-SOCHI-SOCHI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SOCHI</text></g><g class="node" transform="translate(707,4569.757785467128)"><circle r="4.5" id="circle-ZED-ZED" 

class="circle-ZED circle-fork-LTC"></circle><text id="text-ZED-ZED" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZED</text></g><g class="node" 

transform="translate(707,4592.837370242215)"><circle r="4.5" id="circle-TOP-TOP" class="circle-TOP circle-fork-LTC"></circle><text id="text-TOP-TOP" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TOP</text></g><g class="node" transform="translate(707,4615.916955017301)"><circle r="4.5" id="circle-AUR-AUR" 

class="circle-AUR circle-fork-LTC"></circle><text id="text-AUR-AUR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AUR</text></g><g class="node" 

transform="translate(707,4638.996539792388)"><circle r="4.5" id="circle-BELI-BELI" class="circle-BELI circle-fork-LTC"></circle><text id="text-BELI-BELI" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BELI</text></g><g class="node" transform="translate(707,4662.076124567475)"><circle r="4.5" id="circle-BELA-BELA" 

class="circle-BELA circle-fork-LTC"></circle><text id="text-BELA-BELA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BELA</text></g><g 

class="node" transform="translate(707,4685.155709342561)"><circle r="4.5" id="circle-COIN-COIN" class="circle-COIN circle-fork-LTC"></circle><text id="text-COIN-COIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COIN</text></g><g class="node" transform="translate(707,4708.235294117648)"><circle r="4.5" 

id="circle-PIG-PIG" class="circle-PIG circle-fork-LTC"></circle><text id="text-PIG-PIG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PIG</text></g><g class="node" transform="translate(707,4731.314878892734)"><circle r="4.5" id="circle-CCN-CCN" class="circle-CCN circle-fork-LTC"></circle><text 

id="text-CCN-CCN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCN</text></g><g class="node" transform="translate

(707,4754.394463667821)"><circle r="4.5" id="circle-SVC-SVC" class="circle-SVC circle-fork-LTC"></circle><text id="text-SVC-SVC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SVC</text></g><g class="node" transform="translate(707,4777.474048442907)"><circle r="4.5" id="circle-EXE-EXE" class="circle-

EXE circle-fork-LTC"></circle><text id="text-EXE-EXE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXE</text></g><g class="node" 

transform="translate(707,4800.553633217994)"><circle r="4.5" id="circle-JNY-JNY" class="circle-JNY circle-fork-LTC"></circle><text id="text-JNY-JNY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">JNY</text></g><g class="node" transform="translate(707,4823.63321799308)"><circle r="4.5" id="circle-GAM-GAM" class="circle-

GAM circle-fork-LTC"></circle><text id="text-GAM-GAM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GAM</text></g><g class="node" 

transform="translate(707,4846.7128027681665)"><circle r="4.5" id="circle-ISR-ISR" class="circle-ISR circle-fork-LTC"></circle><text id="text-ISR-ISR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ISR</text></g><g class="node" transform="translate(707,4869.7923875432525)"><circle r="4.5" id="circle-YOLO-YOLO" 

class="circle-YOLO circle-fork-LTC"></circle><text id="text-YOLO-YOLO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">YOLO</text></g><g 

class="node" transform="translate(707,4892.871972318339)"><circle r="4.5" id="circle-FREEB-FREEB" class="circle-FREEB circle-fork-LTC"></circle><text id="text-FREEB-

FREEB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FREEB</text></g><g class="node" transform="translate(707,4915.951557093425)"><circle 

r="4.5" id="circle-MXT-MXT" class="circle-MXT circle-fork-LTC"></circle><text id="text-MXT-MXT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MXT</text></g><g class="node" transform="translate(707,4939.031141868512)"><circle r="4.5" id="circle-IDC-IDC" class="circle-IDC circle-fork-LTC"></circle><text id="text-

IDC-IDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">IDC</text></g><g class="node" transform="translate(707,4962.110726643598)"><circle 

r="4.5" id="circle-FUN-FUN" class="circle-FUN circle-fork-LTC"></circle><text id="text-FUN-FUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FUN</text></g><g class="node" transform="translate(707,4985.190311418685)"><circle r="4.5" id="circle-AIM-AIM" class="circle-AIM circle-fork-LTC"></circle><text id="text-

AIM-AIM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AIM</text></g><g class="node" transform="translate(707,5008.269896193771)"><circle 

r="4.5" id="circle-WFC-WFC" class="circle-WFC circle-fork-LTC"></circle><text id="text-WFC-WFC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">WFC</text></g><g class="node" transform="translate(707,5031.349480968858)"><circle r="4.5" id="circle-CFN-CFN" class="circle-CFN circle-fork-LTC"></circle><text 

id="text-CFN-CFN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CFN</text></g><g class="node" transform="translate

(707,5054.429065743944)"><circle r="4.5" id="circle-G8-G8" class="circle-G8 circle-fork-LTC"></circle><text id="text-G8-G8" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">G8</text></g><g class="node" transform="translate(707,5077.508650519031)"><circle r="4.5" id="circle-XXX-XXX" class="circle-XXX circle-fork-

LTC"></circle><text id="text-XXX-XXX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XXX</text></g><g class="node" transform="translate

(707,5100.588235294117)"><circle r="4.5" id="circle-QTL-QTL" class="circle-QTL circle-fork-LTC"></circle><text id="text-QTL-QTL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">QTL</text></g><g class="node" transform="translate(707,5123.667820069204)"><circle r="4.5" id="circle-FJC-FJC" class="circle-

FJC circle-fork-LTC"></circle><text id="text-FJC-FJC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FJC</text></g><g class="node" 

transform="translate(707,5146.747404844291)"><circle r="4.5" id="circle-AID-AID" class="circle-AID circle-fork-LTC"></circle><text id="text-AID-AID" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">AID</text></g><g class="node" transform="translate(707,5169.826989619377)"><circle r="4.5" id="circle-M.J-M.J" class="circle-M.J 

circle-fork-LTC"></circle><text id="text-M.J-M.J" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">M.J</text></g><g class="node" transform="translate

(707,5192.906574394464)"><circle r="4.5" id="circle-numc-numc" class="circle-numc circle-fork-LTC"></circle><text id="text-numc-numc" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">numc</text></g><g class="node" transform="translate(707,5215.98615916955)"><circle r="4.5" id="circle-RC-RC" class="circle-RC 

circle-fork-LTC"></circle><text id="text-RC-RC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RC</text></g><g class="node" transform="translate

(707,5239.065743944637)"><circle r="4.5" id="circle-CZC-CZC" class="circle-CZC circle-fork-LTC"></circle><text id="text-CZC-CZC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CZC</text></g><g class="node" transform="translate(707,5262.145328719723)"><circle r="4.5" id="circle-Kool-Kool" 

class="circle-Kool circle-fork-LTC"></circle><text id="text-Kool-Kool" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Kool</text></g><g class="node" 

transform="translate(707,5285.22491349481)"><circle r="4.5" id="circle-RSC-RSC" class="circle-RSC circle-fork-LTC"></circle><text id="text-RSC-RSC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">RSC</text></g><g class="node" transform="translate(707,5308.304498269896)"><circle r="4.5" id="circle-LTCD-LTCD" 

class="circle-LTCD circle-fork-LTC"></circle><text id="text-LTCD-LTCD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTCD</text></g><g 

class="node" transform="translate(707,5331.384083044983)"><circle r="4.5" id="circle-CPTL-CPTL" class="circle-CPTL circle-fork-LTC"></circle><text id="text-CPTL-CPTL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CPTL</text></g><g class="node" transform="translate(707,5354.463667820069)"><circle r="4.5" 

id="circle-BMY-BMY" class="circle-BMY circle-fork-LTC"></circle><text id="text-BMY-BMY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BMY</text></g><g class="node" transform="translate(707,5377.5432525951555)"><circle r="4.5" id="circle-LNKC-LNKC" class="circle-LNKC circle-fork-LTC"></circle><text 

id="text-LNKC-LNKC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LNKC</text></g><g class="node" transform="translate

(707,5400.622837370242)"><circle r="4.5" id="circle-BLP-BLP" class="circle-BLP circle-fork-LTC"></circle><text id="text-BLP-BLP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BLP</text></g><g class="node" transform="translate(707,5423.7024221453285)"><circle r="4.5" id="circle-EVC-EVC" 

class="circle-EVC circle-fork-LTC"></circle><text id="text-EVC-EVC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EVC</text></g><g class="node" 

transform="translate(707,5446.782006920415)"><circle r="4.5" id="circle-GB-GB" class="circle-GB circle-fork-LTC"></circle><text id="text-GB-GB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">GB</text></g><g class="node" transform="translate(707,5469.861591695502)"><circle r="4.5" id="circle-SYS-SYS" class="circle-

SYS circle-fork-LTC"></circle><text id="text-SYS-SYS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SYS</text></g><g class="node" 

transform="translate(707,5492.941176470588)"><circle r="4.5" id="circle-BUY-BUY" class="circle-BUY circle-fork-LTC"></circle><text id="text-BUY-BUY" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BUY</text></g><g class="node" transform="translate(707,5516.020761245675)"><circle r="4.5" id="circle-ROOT-

ROOT" class="circle-ROOT circle-fork-LTC"></circle><text id="text-ROOT-ROOT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ROOT</text></g><g class="node" transform="translate(707,5539.100346020761)"><circle r="4.5" id="circle-TRDR-TRDR" class="circle-TRDR circle-fork-

LTC"></circle><text id="text-TRDR-TRDR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRDR</text></g><g class="node" transform="translate

(707,5562.179930795848)"><circle r="4.5" id="circle-MANA-MANA" class="circle-MANA circle-fork-LTC"></circle><text id="text-MANA-MANA" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MANA</text></g><g class="node" transform="translate(707,5585.259515570934)"><circle r="4.5" id="circle-SHADE-SHADE" 

class="circle-SHADE circle-fork-LTC"></circle><text id="text-SHADE-SHADE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHADE</text></g><g 

class="node" transform="translate(707,5608.339100346021)"><circle r="4.5" id="circle-XBOT-XBOT" class="circle-XBOT circle-fork-LTC"></circle><text id="text-XBOT-XBOT" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XBOT</text></g><g class="node" transform="translate(707,5631.418685121107)"><circle r="4.5" 

id="circle-CGA-CGA" class="circle-CGA circle-fork-LTC"></circle><text id="text-CGA-CGA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CGA</text></g><g class="node" transform="translate(707,5654.498269896194)"><circle r="4.5" id="circle-BTLS-BTLS" class="circle-BTLS circle-fork-LTC"></circle><text 

id="text-BTLS-BTLS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTLS</text></g><g class="node" transform="translate

(707,5677.577854671281)"><circle r="4.5" id="circle-VAC-VAC" class="circle-VAC circle-fork-LTC"></circle><text id="text-VAC-VAC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VAC</text></g><g class="node" transform="translate(707,5700.657439446367)"><circle r="4.5" id="circle-SLK-SLK" class="circle-

SLK circle-fork-LTC"></circle><text id="text-SLK-SLK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SLK</text></g><g class="node" 

transform="translate(707,5723.737024221454)"><circle r="4.5" id="circle-DOLLAR-DOLLAR" class="circle-DOLLAR circle-fork-LTC"></circle><text id="text-DOLLAR-DOLLAR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DOLLAR</text></g><g class="node" transform="translate(707,5746.81660899654)"><circle r="4.5" 

id="circle-SNG-SNG" class="circle-SNG circle-fork-LTC"></circle><text id="text-SNG-SNG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SNG</text></g><g class="node" transform="translate(707,5769.896193771627)"><circle r="4.5" id="circle-DPC-DPC" class="circle-DPC circle-fork-LTC"></circle><text 

id="text-DPC-DPC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DPC</text></g><g class="node" transform="translate

(707,5792.975778546713)"><circle r="4.5" id="circle-MTLMC-MTLMC" class="circle-MTLMC circle-fork-LTC"></circle><text id="text-MTLMC-MTLMC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">MTLMC</text></g><g class="node" transform="translate(707,5816.0553633218)"><circle r="4.5" id="circle-SEED-

SEED" class="circle-SEED circle-fork-LTC"></circle><text id="text-SEED-SEED" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SEED</text></g><g 

class="node" transform="translate(707,5839.134948096886)"><circle r="4.5" id="circle-SMBR-SMBR" class="circle-SMBR circle-fork-LTC"></circle><text id="text-SMBR-SMBR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SMBR</text></g><g class="node" transform="translate(707,5862.214532871973)"><circle r="4.5" 

id="circle-C2-C2" class="circle-C2 circle-fork-LTC"></circle><text id="text-C2-C2" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">C2</text></g><g 

class="node" transform="translate(707,5885.294117647059)"><circle r="4.5" id="circle-ONE-ONE" class="circle-ONE circle-fork-LTC"></circle><text id="text-ONE-ONE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONE</text></g><g class="node" transform="translate(707,5908.3737024221455)"><circle r="4.5" 

id="circle-DBU-DBU" class="circle-DBU circle-fork-LTC"></circle><text id="text-DBU-DBU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">DBU</text></g><g class="node" transform="translate(707,5931.4532871972315)"><circle r="4.5" id="circle-VTR-VTR" class="circle-VTR circle-fork-LTC"></circle><text 

id="text-VTR-VTR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VTR</text></g><g class="node" transform="translate

(707,5954.532871972318)"><circle r="4.5" id="circle-INS-INS" class="circle-INS circle-fork-LTC"></circle><text id="text-INS-INS" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">INS</text></g><g class="node" transform="translate(707,5977.612456747404)"><circle r="4.5" id="circle-DIBS-DIBS" class="circle-DIBS circle-fork-

LTC"></circle><text id="text-DIBS-DIBS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIBS</text></g><g class="node" transform="translate

(707,6000.692041522491)"><circle r="4.5" id="circle-DGMS-DGMS" class="circle-DGMS circle-fork-LTC"></circle><text id="text-DGMS-DGMS" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DGMS</text></g><g class="node" transform="translate(707,6023.771626297577)"><circle r="4.5" id="circle-FSC2-FSC2" 

class="circle-FSC2 circle-fork-LTC"></circle><text id="text-FSC2-FSC2" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FSC2</text></g><g 

class="node" transform="translate(707,6046.851211072664)"><circle r="4.5" id="circle-DIGI-DIGI" class="circle-DIGI circle-fork-LTC"></circle><text id="text-DIGI-DIGI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIGI</text></g><g class="node" transform="translate(707,6069.93079584775)"><circle r="4.5" id="circle-

CARSI-CARSI" class="circle-CARSI circle-fork-LTC"></circle><text id="text-CARSI-CARSI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CARSI</text></g><g class="node" transform="translate(707,6093.010380622837)"><circle r="4.5" id="circle-XTR-XTR" class="circle-XTR circle-fork-LTC"></circle><text 

id="text-XTR-XTR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XTR</text></g><g class="node" transform="translate

(707,6116.089965397923)"><circle r="4.5" id="circle-EMC2-EMC2" class="circle-EMC2 circle-fork-LTC"></circle><text id="text-EMC2-EMC2" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">EMC2</text></g><g class="node" transform="translate(707,6139.16955017301)"><circle r="4.5" id="circle-DDC-DDC" 

class="circle-DDC circle-fork-LTC"></circle><text id="text-DDC-DDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DDC</text></g><g 

class="node" transform="translate(707,3785.051903114187)"><circle r="4.5" id="circle-BRD-BRD" class="circle-BRD circle-fork-LTC"></circle><text id="text-BRD-BRD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BRD</text></g><g class="node" transform="translate(707,3738.892733564014)"><circle r="4.5" id="circle-

EMO-EMO" class="circle-EMO circle-fork-LTC"></circle><text id="text-EMO-EMO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">EMO</text></g><g class="node" transform="translate(707,4535.138408304498)"><circle r="4.5" id="circle-EUC-EUC" class="circle-EUC circle-fork-LTC"></circle><text 

id="text-EUC-EUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EUC</text></g><g class="node" transform="translate

(707,4765.934256055363)"><circle r="4.5" id="circle-KIMO-KIMO" class="circle-KIMO circle-fork-LTC"></circle><text id="text-KIMO-KIMO" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KIMO</text></g><g class="node" transform="translate(707,5273.685121107266)"><circle r="4.5" id="circle-RUP-RUP" 

class="circle-RUP circle-fork-LTC"></circle><text id="text-RUP-RUP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RUP</text></g><g 

class="node" transform="translate(707,5504.480968858132)"><circle r="4.5" id="circle-LEL-LEL" class="circle-LEL circle-fork-LTC"></circle><text id="text-LEL-LEL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LEL</text></g><g class="node" transform="translate(707,5919.913494809689)"><circle r="4.5" id="circle-

GIAR-GIAR" class="circle-GIAR circle-fork-LTC"></circle><text id="text-GIAR-GIAR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GIAR</text></g><g class="node" transform="translate(707,5966.072664359862)"><circle r="4.5" id="circle-FOF-FOF" class="circle-FOF circle-fork-LTC"></circle><text 

id="text-FOF-FOF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FOF</text></g><g class="node" transform="translate

(707,5989.152249134948)"><circle r="4.5" id="circle-NLG-NLG" class="circle-NLG circle-fork-LTC"></circle><text id="text-NLG-NLG" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NLG</text></g><g class="node" transform="translate(707,6162.249134948097)"><circle r="4.5" id="circle-BUN-BUN" 

class="circle-BUN circle-fork-LTC"></circle><text id="text-BUN-BUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BUN</text></g><g 

class="node" transform="translate(707,3658.114186851211)"><circle r="4.5" id="circle-LQC-LQC" class="circle-LQC circle-fork-TBX"></circle><text id="text-LQC-LQC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LQC</text></g><g class="node" transform="translate(589.1666666666667,1096.2802768166089)"><circle 

r="4.75" id="circle-DVC-DVC" class="circle-DVC circle-fork-BTC"></circle><text id="text-DVC-DVC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">DVC</text></g><g class="node" transform="translate(707,1096.2802768166089)"><circle r="4.5" id="circle-STY-STY" class="circle-STY circle-fork-DVC"></circle><text 

id="text-STY-STY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">STY</text></g><g class="node" transform="translate

(589.1666666666667,1188.5986159169552)"><circle r="4.75" id="circle-FRC-FRC" class="circle-FRC circle-fork-BTC"></circle><text id="text-FRC-FRC" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">FRC</text></g><g class="node" transform="translate(707,1188.5986159169552)"><circle r="4.5" id="circle-ZTC-

ZTC" class="circle-ZTC circle-fork-FRC"></circle><text id="text-ZTC-ZTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZTC</text></g><g 

class="node" transform="translate(235.66666666666669,1360.6353828215895)"><circle r="5.25" id="circle-PPC-PPC" class="circle-PPC circle-fork-BTC"></circle><text id="text-

PPC-PPC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">PPC</text></g><g class="node" transform="translate

(353.5,1485.4528612675367)"><circle r="11.25" id="circle-NVC-NVC" class="circle-NVC circle-fork-PPC"></circle><text id="text-NVC-NVC" dx="-8" dy=".31em" class="btc" 

transform="translate(-6.75)" style="text-anchor: end;">NVC</text></g><g class="node" transform="translate(471.33333333333337,1777.8068389985751)"><circle r="8.75" id="circle-

YAC-YAC" class="circle-YAC circle-fork-NVC"></circle><text id="text-YAC-YAC" dx="-8" dy=".31em" class="btc" transform="translate(-4.25)" style="text-anchor: end;">YAC</text></g><g 

class="node" transform="translate(707,1684.8096885813147)"><circle r="4.5" id="circle-ONC-ONC" class="circle-ONC circle-fork-YAC"></circle><text id="text-ONC-ONC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONC</text></g><g class="node" transform="translate(707,1834.8269896193772)"><circle r="4.5" 

id="circle-ZCC-ZCC" class="circle-ZCC circle-fork-YAC"></circle><text id="text-ZCC-ZCC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ZCC</text></g><g class="node" transform="translate(707,1811.7474048442907)"><circle r="4.5" id="circle-FRE-FRE" class="circle-FRE circle-fork-YAC"></circle><text 

id="text-FRE-FRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRE</text></g><g class="node" transform="translate

(707,1742.508650519031)"><circle r="4.5" id="circle-CENT-CENT" class="circle-CENT circle-fork-YAC"></circle><text id="text-CENT-CENT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CENT</text></g><g class="node" transform="translate(707,1696.3494809688582)"><circle r="4.5" id="circle-APC-APC" 

class="circle-APC circle-fork-YAC"></circle><text id="text-APC-APC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">APC</text></g><g class="node" 

transform="translate(707,1707.8892733564012)"><circle r="4.5" id="circle-ECO-ECO" class="circle-ECO circle-fork-YAC"></circle><text id="text-ECO-ECO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ECO</text></g><g class="node" transform="translate(707,1719.4290657439446)"><circle r="4.5" id="circle-KING-KING" 

class="circle-KING circle-fork-YAC"></circle><text id="text-KING-KING" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KING</text></g><g 

class="node" transform="translate(707,1730.9688581314877)"><circle r="4.5" id="circle-PGC-PGC" class="circle-PGC circle-fork-YAC"></circle><text id="text-PGC-PGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PGC</text></g><g class="node" transform="translate(707,1857.9065743944636)"><circle r="4.5" 

id="circle-MRC-MRC" class="circle-MRC circle-fork-YAC"></circle><text id="text-MRC-MRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MRC</text></g><g class="node" transform="translate(707,1754.0484429065743)"><circle r="4.5" id="circle-CACH-CACH" class="circle-CACH circle-fork-YAC"></circle><text 

id="text-CACH-CACH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CACH</text></g><g class="node" transform="translate

(589.1666666666667,1880.98615916955)"><circle r="4.75" id="circle-VTC-VTC" class="circle-VTC circle-fork-YAC"></circle><text id="text-VTC-VTC" dx="-8" dy=".31em" class="btc" 

transform="translate(-0.25)" style="text-anchor: end;">VTC</text></g><g class="node" transform="translate(707,1880.98615916955)"><circle r="4.5" id="circle-ALT-ALT" 

class="circle-ALT circle-fork-VTC"></circle><text id="text-ALT-ALT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALT</text></g><g class="node" 

transform="translate(707,1777.1280276816608)"><circle r="4.5" id="circle-QQC-QQC" class="circle-QQC circle-fork-YAC"></circle><text id="text-QQC-QQC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">QQC</text></g><g class="node" transform="translate(707,1788.6678200692043)"><circle r="4.5" id="circle-JPU-JPU" 

class="circle-JPU circle-fork-YAC"></circle><text id="text-JPU-JPU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JPU</text></g><g class="node" 

transform="translate(707,1800.2076124567475)"><circle r="4.5" id="circle-null-null" class="circle-null circle-fork-YAC"></circle><text id="text-null-null" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;"></text></g><g class="node" transform="translate(707,1823.2871972318342)"><circle r="4.5" id="circle-FATE-FATE" class="circle-

FATE circle-fork-YAC"></circle><text id="text-FATE-FATE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FATE</text></g><g class="node" 

transform="translate(707,1765.5882352941176)"><circle r="4.5" id="circle-HRC-HRC" class="circle-HRC circle-fork-YAC"></circle><text id="text-HRC-HRC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HRC</text></g><g class="node" transform="translate(707,1846.3667820069206)"><circle r="4.5" id="circle-MCC-MCC" 

class="circle-MCC circle-fork-YAC"></circle><text id="text-MCC-MCC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MCC</text></g><g 

class="node" transform="translate(707,1396.3148788927335)"><circle r="4.5" id="circle-BTG-BTG" class="circle-BTG circle-fork-NVC"></circle><text id="text-BTG-BTG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTG</text></g><g class="node" transform="translate(707,1546.3321799307957)"><circle r="4.5" 

id="circle-BITB-BITB" class="circle-BITB circle-fork-NVC"></circle><text id="text-BITB-BITB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BITB</text></g><g class="node" transform="translate(707,1523.2525951557093)"><circle r="4.5" id="circle-PHS-PHS" class="circle-PHS circle-fork-NVC"></circle><text 

id="text-PHS-PHS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHS</text></g><g class="node" transform="translate

(707,1500.1730103806228)"><circle r="4.5" id="circle-CGB-CGB" class="circle-CGB circle-fork-NVC"></circle><text id="text-CGB-CGB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CGB</text></g><g class="node" transform="translate(589.1666666666667,1655.9602076124568)"><circle r="5" id="circle-DMD-

DMD" class="circle-DMD circle-fork-NVC"></circle><text id="text-DMD-DMD" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: end;">DMD</text></g><g 

class="node" transform="translate(707,1650.190311418685)"><circle r="4.5" id="circle-GRW-GRW" class="circle-GRW circle-fork-DMD"></circle><text id="text-GRW-GRW" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRW</text></g><g class="node" transform="translate(707,1661.7301038062283)"><circle r="4.5" 

id="circle-BAC-BAC" class="circle-BAC circle-fork-DMD"></circle><text id="text-BAC-BAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BAC</text></g><g class="node" transform="translate(589.1666666666667,1627.1107266435986)"><circle r="4.75" id="circle-CAP-CAP" class="circle-CAP circle-fork-

NVC"></circle><text id="text-CAP-CAP" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CAP</text></g><g class="node" transform="translate

(707,1627.1107266435986)"><circle r="4.5" id="circle-LBW-LBW" class="circle-LBW circle-fork-CAP"></circle><text id="text-LBW-LBW" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LBW</text></g><g class="node" transform="translate(707,1384.7750865051903)"><circle r="4.5" id="circle-HBN-HBN" 

class="circle-HBN circle-fork-NVC"></circle><text id="text-HBN-HBN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HBN</text></g><g 

class="node" transform="translate(589.1666666666667,1604.0311418685121)"><circle r="4.75" id="circle-CMC-CMC" class="circle-CMC circle-fork-NVC"></circle><text id="text-

CMC-CMC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CMC</text></g><g class="node" transform="translate

(707,1604.0311418685121)"><circle r="4.5" id="circle-PYC-PYC" class="circle-PYC circle-fork-CMC"></circle><text id="text-PYC-PYC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PYC</text></g><g class="node" transform="translate(707,1350.1557093425606)"><circle r="4.5" id="circle-CDC-CDC" 

class="circle-CDC circle-fork-NVC"></circle><text id="text-CDC-CDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CDC</text></g><g 

class="node" transform="translate(707,1361.6955017301038)"><circle r="4.5" id="circle-GLX-GLX" class="circle-GLX circle-fork-NVC"></circle><text id="text-GLX-GLX" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLX</text></g><g class="node" transform="translate(707,1373.235294117647)"><circle r="4.5" id="circle-

NEC-NEC" class="circle-NEC circle-fork-NVC"></circle><text id="text-NEC-NEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NEC</text></g><g 

class="node" transform="translate(707,1569.4117647058824)"><circle r="4.5" id="circle-TAG-TAG" class="circle-TAG circle-fork-NVC"></circle><text id="text-TAG-TAG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TAG</text></g><g class="node" transform="translate(707,1580.9515570934257)"><circle r="4.5" 

id="circle-LK7-LK7" class="circle-LK7 circle-fork-NVC"></circle><text id="text-LK7-LK7" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LK7</text></g><g class="node" transform="translate(707,1407.8546712802768)"><circle r="4.5" id="circle-SAV-SAV" class="circle-SAV circle-fork-NVC"></circle><text 

id="text-SAV-SAV" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SAV</text></g><g class="node" transform="translate

(707,1419.3944636678202)"><circle r="4.5" id="circle-PPL-PPL" class="circle-PPL circle-fork-NVC"></circle><text id="text-PPL-PPL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PPL</text></g><g class="node" transform="translate(707,1430.9342560553634)"><circle r="4.5" id="circle-SHT-SHT" 

class="circle-SHT circle-fork-NVC"></circle><text id="text-SHT-SHT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHT</text></g><g 

class="node" transform="translate(707,1442.4740484429067)"><circle r="4.5" id="circle-CIN-CIN" class="circle-CIN circle-fork-NVC"></circle><text id="text-CIN-CIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CIN</text></g><g class="node" transform="translate(707,1465.5536332179931)"><circle r="4.5" id="circle-

BOC-BOC" class="circle-BOC circle-fork-NVC"></circle><text id="text-BOC-BOC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOC</text></g><g 

class="node" transform="translate(707,1488.6332179930796)"><circle r="4.5" id="circle-TEK-TEK" class="circle-TEK circle-fork-NVC"></circle><text id="text-TEK-TEK" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEK</text></g><g class="node" transform="translate(707,1511.712802768166)"><circle r="4.5" id="circle-

NIG-NIG" class="circle-NIG circle-fork-NVC"></circle><text id="text-NIG-NIG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NIG</text></g><g 

class="node" transform="translate(707,1534.7923875432525)"><circle r="4.5" id="circle-GRA-GRA" class="circle-GRA circle-fork-NVC"></circle><text id="text-GRA-GRA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRA</text></g><g class="node" transform="translate(707,1557.871972318339)"><circle r="4.5" id="circle-

UFC-UFC" class="circle-UFC circle-fork-NVC"></circle><text id="text-UFC-UFC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">UFC</text></g><g 

class="node" transform="translate(707,1338.6159169550172)"><circle r="4.5" id="circle-XMAS-XMAS" class="circle-XMAS circle-fork-NVC"></circle><text id="text-XMAS-XMAS" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XMAS</text></g><g class="node" transform="translate(707,1454.01384083045)"><circle r="4.5" 

id="circle-MINT-MINT" class="circle-MINT circle-fork-NVC"></circle><text id="text-MINT-MINT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MINT</text></g><g class="node" transform="translate(707,1477.0934256055364)"><circle r="4.5" id="circle-BC-BC" class="circle-BC circle-fork-NVC"></circle><text 

id="text-BC-BC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BC</text></g><g class="node" transform="translate

(707,1327.076124567474)"><circle r="4.5" id="circle-ZEIT-ZEIT" class="circle-ZEIT circle-fork-NVC"></circle><text id="text-ZEIT-ZEIT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ZEIT</text></g><g class="node" transform="translate(707,1292.4567474048442)"><circle r="4.5" id="circle-QBT-QBT" 

class="circle-QBT circle-fork-PPC"></circle><text id="text-QBT-QBT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">QBT</text></g><g 

class="node" transform="translate(707,1303.9965397923875)"><circle r="4.5" id="circle-FLT-FLT" class="circle-FLT circle-fork-PPC"></circle><text id="text-FLT-FLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLT</text></g><g class="node" transform="translate(707,773.1660899653979)"><circle r="4.5" id="circle-

TRC-TRC" class="circle-TRC circle-fork-BTC"></circle><text id="text-TRC-TRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRC</text></g><g 

class="node" transform="translate(707,750.0865051903114)"><circle r="4.5" id="circle-BTE-BTE" class="circle-BTE circle-fork-BTC"></circle><text id="text-BTE-BTE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTE</text></g><g class="node" transform="translate(589.1666666666667,1153.9792387543253)"><circle 

r="5.25" id="circle-XPM-XPM" class="circle-XPM circle-fork-BTC"></circle><text id="text-XPM-XPM" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: 

end;">XPM</text></g><g class="node" transform="translate(707,1142.439446366782)"><circle r="4.5" id="circle-DTC-DTC" class="circle-DTC circle-fork-XPM"></circle><text 

id="text-DTC-DTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DTC</text></g><g class="node" transform="translate

(707,1153.9792387543253)"><circle r="4.5" id="circle-CDN-CDN" class="circle-CDN circle-fork-XPM"></circle><text id="text-CDN-CDN" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CDN</text></g><g class="node" transform="translate(707,1165.5190311418687)"><circle r="4.5" id="circle-FTW-FTW" 

class="circle-FTW circle-fork-XPM"></circle><text id="text-FTW-FTW" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FTW</text></g><g 

class="node" transform="translate(707,703.9273356401384)"><circle r="4.5" id="circle-MEG-MEG" class="circle-MEG circle-fork-BTC"></circle><text id="text-MEG-MEG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEG</text></g><g class="node" transform="translate(589.1666666666667,1252.0674740484428)"><circle 

r="5.5" id="circle-ZET-ZET" class="circle-ZET circle-fork-BTC"></circle><text id="text-ZET-ZET" dx="-8" dy=".31em" class="btc" transform="translate(-1)" style="text-anchor: 

end;">ZET</text></g><g class="node" transform="translate(707,1234.757785467128)"><circle r="4.5" id="circle-TEA-TEA" class="circle-TEA circle-fork-ZET"></circle><text 

id="text-TEA-TEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEA</text></g><g class="node" transform="translate

(707,1246.2975778546713)"><circle r="4.5" id="circle-MYR-MYR" class="circle-MYR circle-fork-ZET"></circle><text id="text-MYR-MYR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MYR</text></g><g class="node" transform="translate(707,1257.8373702422145)"><circle r="4.5" id="circle-CHC-CHC" 

class="circle-CHC circle-fork-ZET"></circle><text id="text-CHC-CHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CHC</text></g><g 

class="node" transform="translate(707,1269.3771626297578)"><circle r="4.5" id="circle-MZC-MZC" class="circle-MZC circle-fork-ZET"></circle><text id="text-MZC-MZC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MZC</text></g><g class="node" transform="translate(235.66666666666669,2056.176121072315)"><circle 

r="4.75" id="circle-SIC-SIC" class="circle-SIC circle-fork-BTC"></circle><text id="text-SIC-SIC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SIC</text></g><g class="node" transform="translate(353.5,2056.176121072315)"><circle r="10.25" id="circle-QRK-QRK" class="circle-QRK circle-fork-SIC"></circle><text 

id="text-QRK-QRK" dx="-8" dy=".31em" class="btc" transform="translate(-5.75)" style="text-anchor: end;">QRK</text></g><g class="node" transform="translate

(707,1904.0657439446366)"><circle r="4.5" id="circle-OBC-OBC" class="circle-OBC circle-fork-QRK"></circle><text id="text-OBC-OBC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">OBC</text></g><g class="node" transform="translate(707,2123.3217993079584)"><circle r="4.5" id="circle-RVD-RVD" 

class="circle-RVD circle-fork-QRK"></circle><text id="text-RVD-RVD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RVD</text></g><g class="node" 

transform="translate(707,2100.242214532872)"><circle r="4.5" id="circle-FZ-FZ" class="circle-FZ circle-fork-QRK"></circle><text id="text-FZ-FZ" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FZ</text></g><g class="node" transform="translate(707,2077.1626297577855)"><circle r="4.5" id="circle-ATO-ATO" 

class="circle-ATO circle-fork-QRK"></circle><text id="text-ATO-ATO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ATO</text></g><g 

class="node" transform="translate(707,2054.083044982699)"><circle r="4.5" id="circle-MOL-MOL" class="circle-MOL circle-fork-QRK"></circle><text id="text-MOL-MOL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOL</text></g><g class="node" transform="translate(707,2031.0034602076125)"><circle r="4.5" 

id="circle-SEC-SEC" class="circle-SEC circle-fork-QRK"></circle><text id="text-SEC-SEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SEC</text></g><g class="node" transform="translate(471.33333333333337,2736.912376358743)"><circle r="29.25" id="circle-DRK-DRK" class="circle-DRK circle-fork-

QRK"></circle><text id="text-DRK-DRK" dx="-8" dy=".31em" class="btc" transform="translate(-24.75)" style="text-anchor: end;">DRK</text></g><g class="node" transform="translate

(707,2169.4809688581313)"><circle r="4.5" id="circle-CC-CC" class="circle-CC circle-fork-DRK"></circle><text id="text-CC-CC" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">CC</text></g><g class="node" transform="translate(707,2227.1799307958477)"><circle r="4.5" id="circle-Sync-Sync" class="circle-Sync circle-fork-

DRK"></circle><text id="text-Sync-Sync" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Sync</text></g><g class="node" transform="translate

(707,3231.1418685121107)"><circle r="4.5" id="circle-RTC-RTC" class="circle-RTC circle-fork-DRK"></circle><text id="text-RTC-RTC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RTC</text></g><g class="node" transform="translate(707,3208.0622837370242)"><circle r="4.5" id="circle-MLGB-MLGB" 

class="circle-MLGB circle-fork-DRK"></circle><text id="text-MLGB-MLGB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MLGB</text></g><g 

class="node" transform="translate(707,3184.982698961938)"><circle r="4.5" id="circle-ACC-ACC" class="circle-ACC circle-fork-DRK"></circle><text id="text-ACC-ACC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ACC</text></g><g class="node" transform="translate(707,3161.9031141868513)"><circle r="4.5" 

id="circle-KRYP-KRYP" class="circle-KRYP circle-fork-DRK"></circle><text id="text-KRYP-KRYP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">KRYP</text></g><g class="node" transform="translate(707,3138.823529411765)"><circle r="4.5" id="circle-GRN-GRN" class="circle-GRN circle-fork-DRK"></circle><text 

id="text-GRN-GRN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRN</text></g><g class="node" transform="translate

(707,3115.743944636678)"><circle r="4.5" id="circle-PURE-PURE" class="circle-PURE circle-fork-DRK"></circle><text id="text-PURE-PURE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PURE</text></g><g class="node" transform="translate(707,3092.6643598615915)"><circle r="4.5" id="circle-NAC-NAC" 

class="circle-NAC circle-fork-DRK"></circle><text id="text-NAC-NAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NAC</text></g><g class="node" 

transform="translate(707,3069.584775086505)"><circle r="4.5" id="circle-HPC-HPC" class="circle-HPC circle-fork-DRK"></circle><text id="text-HPC-HPC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HPC</text></g><g class="node" transform="translate(707,3046.5051903114186)"><circle r="4.5" id="circle-suc-suc" 

class="circle-suc circle-fork-DRK"></circle><text id="text-suc-suc" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">suc</text></g><g class="node" 

transform="translate(707,3023.425605536332)"><circle r="4.5" id="circle-NL-NL" class="circle-NL circle-fork-DRK"></circle><text id="text-NL-NL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NL</text></g><g class="node" transform="translate(707,3000.3460207612457)"><circle r="4.5" id="circle-LTCX-LTCX" 

class="circle-LTCX circle-fork-DRK"></circle><text id="text-LTCX-LTCX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTCX</text></g><g 

class="node" transform="translate(707,2977.266435986159)"><circle r="4.5" id="circle-Iaura-Iaura" class="circle-Iaura circle-fork-DRK"></circle><text id="text-Iaura-Iaura" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Iaura</text></g><g class="node" transform="translate(707,2954.1868512110727)"><circle r="4.5" 

id="circle-BS-BS" class="circle-BS circle-fork-DRK"></circle><text id="text-BS-BS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BS</text></g><g 

class="node" transform="translate(707,2931.1072664359863)"><circle r="4.5" id="circle-Voot-Voot" class="circle-Voot circle-fork-DRK"></circle><text id="text-Voot-Voot" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Voot</text></g><g class="node" transform="translate(707,2908.0276816609)"><circle r="4.5" id="circle-

LIMX-LIMX" class="circle-LIMX circle-fork-DRK"></circle><text id="text-LIMX-LIMX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LIMX</text></g><g class="node" transform="translate(707,2884.9480968858134)"><circle r="4.5" id="circle-GRE-GRE" class="circle-GRE circle-fork-DRK"></circle><text 

id="text-GRE-GRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRE</text></g><g class="node" transform="translate

(707,2861.868512110727)"><circle r="4.5" id="circle-WCC-WCC" class="circle-WCC circle-fork-DRK"></circle><text id="text-WCC-WCC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">WCC</text></g><g class="node" transform="translate(707,2838.7889273356404)"><circle r="4.5" id="circle-MIN-MIN" 

class="circle-MIN circle-fork-DRK"></circle><text id="text-MIN-MIN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MIN</text></g><g class="node" 

transform="translate(707,2815.7093425605535)"><circle r="4.5" id="circle-TRS-TRS" class="circle-TRS circle-fork-DRK"></circle><text id="text-TRS-TRS" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TRS</text></g><g class="node" transform="translate(707,2792.629757785467)"><circle r="4.5" id="circle-KiB-KiB" 

class="circle-KiB circle-fork-DRK"></circle><text id="text-KiB-KiB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KiB</text></g><g class="node" 

transform="translate(707,2769.5501730103806)"><circle r="4.5" id="circle-LIT-LIT" class="circle-LIT circle-fork-DRK"></circle><text id="text-LIT-LIT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LIT</text></g><g class="node" transform="translate(707,2746.470588235294)"><circle r="4.5" id="circle-FRAC-FRAC" 

class="circle-FRAC circle-fork-DRK"></circle><text id="text-FRAC-FRAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRAC</text></g><g 

class="node" transform="translate(707,2723.3910034602077)"><circle r="4.5" id="circle-WVS-WVS" class="circle-WVS circle-fork-DRK"></circle><text id="text-WVS-WVS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WVS</text></g><g class="node" transform="translate(707,2700.311418685121)"><circle r="4.5" id="circle-

gue-gue" class="circle-gue circle-fork-DRK"></circle><text id="text-gue-gue" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">gue</text></g><g 

class="node" transform="translate(707,2677.2318339100343)"><circle r="4.5" id="circle-NeWO-NeWO" class="circle-NeWO circle-fork-DRK"></circle><text id="text-NeWO-NeWO" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NeWO</text></g><g class="node" transform="translate(707,2654.152249134948)"><circle r="4.5" 

id="circle-GOD-GOD" class="circle-GOD circle-fork-DRK"></circle><text id="text-GOD-GOD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GOD</text></g><g class="node" transform="translate(707,2631.0726643598614)"><circle r="4.5" id="circle-HODOR-HODOR" class="circle-HODOR circle-fork-

DRK"></circle><text id="text-HODOR-HODOR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HODOR</text></g><g class="node" 

transform="translate(707,2607.993079584775)"><circle r="4.5" id="circle-SPCC-SPCC" class="circle-SPCC circle-fork-DRK"></circle><text id="text-SPCC-SPCC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">SPCC</text></g><g class="node" transform="translate(707,2584.9134948096885)"><circle r="4.5" id="circle-BULBA-

BULBA" class="circle-BULBA circle-fork-DRK"></circle><text id="text-BULBA-BULBA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BULBA</text></g><g class="node" transform="translate(707,2561.833910034602)"><circle r="4.5" id="circle-TRUST-TRUST" class="circle-TRUST circle-fork-

DRK"></circle><text id="text-TRUST-TRUST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRUST</text></g><g class="node" 

transform="translate(707,2538.7543252595156)"><circle r="4.5" id="circle-PP-PP" class="circle-PP circle-fork-DRK"></circle><text id="text-PP-PP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PP</text></g><g class="node" transform="translate(707,2515.674740484429)"><circle r="4.5" id="circle-CSO-CSO" class="circle-

CSO circle-fork-DRK"></circle><text id="text-CSO-CSO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CSO</text></g><g class="node" 

transform="translate(707,2492.5951557093426)"><circle r="4.5" id="circle-MHYC-MHYC" class="circle-MHYC circle-fork-DRK"></circle><text id="text-MHYC-MHYC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MHYC</text></g><g class="node" transform="translate(707,2469.515570934256)"><circle r="4.5" 

id="circle-LOL-LOL" class="circle-LOL circle-fork-DRK"></circle><text id="text-LOL-LOL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LOL</text></g><g class="node" transform="translate(707,2446.4359861591697)"><circle r="4.5" id="circle-MIL-MIL" class="circle-MIL circle-fork-DRK"></circle><text 

id="text-MIL-MIL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MIL</text></g><g class="node" transform="translate

(707,2423.3564013840833)"><circle r="4.5" id="circle-PIGGY-PIGGY" class="circle-PIGGY circle-fork-DRK"></circle><text id="text-PIGGY-PIGGY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PIGGY</text></g><g class="node" transform="translate(707,2400.276816608997)"><circle r="4.5" id="circle-BOOTY-BOOTY" 

class="circle-BOOTY circle-fork-DRK"></circle><text id="text-BOOTY-BOOTY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOOTY</text></g><g 

class="node" transform="translate(707,2377.1972318339103)"><circle r="4.5" id="circle-LIN-LIN" class="circle-LIN circle-fork-DRK"></circle><text id="text-LIN-LIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LIN</text></g><g class="node" transform="translate(707,2354.117647058824)"><circle r="4.5" id="circle-

SND-SND" class="circle-SND circle-fork-DRK"></circle><text id="text-SND-SND" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SND</text></g><g 

class="node" transform="translate(589.1666666666667,3479.247404844291)"><circle r="11" id="circle-BBL-BBL" class="circle-BBL circle-fork-DRK"></circle><text id="text-BBL-

BBL" dx="-8" dy=".31em" class="btc" transform="translate(-6.5)" style="text-anchor: end;">BBL</text></g><g class="node" transform="translate(707,3335)"><circle r="4.5" id="circle-

FIRE-FIRE" class="circle-FIRE circle-fork-BBL"></circle><text id="text-FIRE-FIRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FIRE</text></g><g 

class="node" transform="translate(707,3600.415224913495)"><circle r="4.5" id="circle-CORE-CORE" class="circle-CORE circle-fork-BBL"></circle><text id="text-CORE-CORE" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CORE</text></g><g class="node" transform="translate(707,3577.3356401384085)"><circle r="4.5" 

id="circle-ALEA-ALEA" class="circle-ALEA circle-fork-BBL"></circle><text id="text-ALEA-ALEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ALEA</text></g><g class="node" transform="translate(707,3554.2560553633216)"><circle r="4.5" id="circle-ISIS-ISIS" class="circle-ISIS circle-fork-BBL"></circle><text 

id="text-ISIS-ISIS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ISIS</text></g><g class="node" transform="translate

(707,3531.176470588235)"><circle r="4.5" id="circle-Dino-Dino" class="circle-Dino circle-fork-BBL"></circle><text id="text-Dino-Dino" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Dino</text></g><g class="node" transform="translate(707,3508.0968858131487)"><circle r="4.5" id="circle-POS-POS" 

class="circle-POS circle-fork-BBL"></circle><text id="text-POS-POS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">POS</text></g><g class="node" 

transform="translate(707,3485.017301038062)"><circle r="4.5" id="circle-ANG-ANG" class="circle-ANG circle-fork-BBL"></circle><text id="text-ANG-ANG" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ANG</text></g><g class="node" transform="translate(707,3461.9377162629753)"><circle r="4.5" id="circle-COF-COF" 

class="circle-COF circle-fork-BBL"></circle><text id="text-COF-COF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COF</text></g><g 

class="node" transform="translate(707,3392.6989619377164)"><circle r="4.5" id="circle-SPATA-SPATA" class="circle-SPATA circle-fork-BBL"></circle><text id="text-SPATA-SPATA" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPATA</text></g><g class="node" transform="translate(707,3346.5397923875435)"><circle r="4.5" 

id="circle-BACK-BACK" class="circle-BACK circle-fork-BBL"></circle><text id="text-BACK-BACK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BACK</text></g><g class="node" transform="translate(707,3358.079584775087)"><circle r="4.5" id="circle-MInC-MInC" class="circle-MInC circle-fork-BBL"></circle><text 

id="text-MInC-MInC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MInC</text></g><g class="node" transform="translate

(707,3369.6193771626295)"><circle r="4.5" id="circle-LIZE-LIZE" class="circle-LIZE circle-fork-BBL"></circle><text id="text-LIZE-LIZE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LIZE</text></g><g class="node" transform="translate(707,3381.159169550173)"><circle r="4.5" id="circle-NHC-NHC" 

class="circle-NHC circle-fork-BBL"></circle><text id="text-NHC-NHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NHC</text></g><g 

class="node" transform="translate(707,3623.4948096885814)"><circle r="4.5" id="circle-City-City" class="circle-City circle-fork-BBL"></circle><text id="text-City-City" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">City</text></g><g class="node" transform="translate(707,3404.23875432526)"><circle r="4.5" id="circle-

FBIT-FBIT" class="circle-FBIT circle-fork-BBL"></circle><text id="text-FBIT-FBIT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FBIT</text></g><g 

class="node" transform="translate(707,3415.7785467128024)"><circle r="4.5" id="circle-LIMI-LIMI" class="circle-LIMI circle-fork-BBL"></circle><text id="text-LIMI-LIMI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LIMI</text></g><g class="node" transform="translate(707,3427.318339100346)"><circle r="4.5" id="circle-

CRYSTAL-CRYSTAL" class="circle-CRYSTAL circle-fork-BBL"></circle><text id="text-CRYSTAL-CRYSTAL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CRYSTAL</text></g><g class="node" transform="translate(707,3438.8581314878893)"><circle r="4.5" id="circle-BBC-BBC" class="circle-BBC circle-fork-BBL"></circle><text 

id="text-BBC-BBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BBC</text></g><g class="node" transform="translate

(707,3450.3979238754328)"><circle r="4.5" id="circle-OT-OT" class="circle-OT circle-fork-BBL"></circle><text id="text-OT-OT" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">OT</text></g><g class="node" transform="translate(707,3473.4775086505188)"><circle r="4.5" id="circle-XDE-XDE" class="circle-XDE circle-fork-

BBL"></circle><text id="text-XDE-XDE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XDE</text></g><g class="node" transform="translate

(707,3496.5570934256057)"><circle r="4.5" id="circle-NMB-NMB" class="circle-NMB circle-fork-BBL"></circle><text id="text-NMB-NMB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NMB</text></g><g class="node" transform="translate(707,3519.636678200692)"><circle r="4.5" id="circle-GRYF-GRYF" 

class="circle-GRYF circle-fork-BBL"></circle><text id="text-GRYF-GRYF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRYF</text></g><g 

class="node" transform="translate(707,3542.7162629757786)"><circle r="4.5" id="circle-VLT-VLT" class="circle-VLT circle-fork-BBL"></circle><text id="text-VLT-VLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VLT</text></g><g class="node" transform="translate(707,3565.795847750865)"><circle r="4.5" id="circle-

HTML5-HTML5" class="circle-HTML5 circle-fork-BBL"></circle><text id="text-HTML5-HTML5" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">HTML5</text></g><g class="node" transform="translate(707,3588.875432525952)"><circle r="4.5" id="circle-B1bl3-B1bl3" class="circle-B1bl3 circle-fork-BBL"></circle><text 

id="text-B1bl3-B1bl3" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">B1bl3</text></g><g class="node" transform="translate

(707,3611.955017301038)"><circle r="4.5" id="circle-U-U" class="circle-U circle-fork-BBL"></circle><text id="text-U-U" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">U</text></g><g class="node" transform="translate(707,2307.9584775086505)"><circle r="4.5" id="circle-SRZ-SRZ" class="circle-SRZ circle-fork-

DRK"></circle><text id="text-SRZ-SRZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SRZ</text></g><g class="node" transform="translate

(707,2284.878892733564)"><circle r="4.5" id="circle-RW-RW" class="circle-RW circle-fork-DRK"></circle><text id="text-RW-RW" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">RW</text></g><g class="node" transform="translate(707,2215.640138408304)"><circle r="4.5" id="circle-XAN-XAN" class="circle-XAN circle-fork-

DRK"></circle><text id="text-XAN-XAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XAN</text></g><g class="node" transform="translate

(707,2181.0207612456747)"><circle r="4.5" id="circle-FVZ-FVZ" class="circle-FVZ circle-fork-DRK"></circle><text id="text-FVZ-FVZ" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FVZ</text></g><g class="node" transform="translate(707,2192.5605536332178)"><circle r="4.5" id="circle-ELTC-ELTC" 

class="circle-ELTC circle-fork-DRK"></circle><text id="text-ELTC-ELTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELTC</text></g><g 

class="node" transform="translate(707,2204.100346020761)"><circle r="4.5" id="circle-ESC-ESC" class="circle-ESC circle-fork-DRK"></circle><text id="text-ESC-ESC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ESC</text></g><g class="node" transform="translate(707,3254.221453287197)"><circle r="4.5" id="circle-

TEX-TEX" class="circle-TEX circle-fork-DRK"></circle><text id="text-TEX-TEX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEX</text></g><g 

class="node" transform="translate(707,3277.3010380622836)"><circle r="4.5" id="circle-MC-MC" class="circle-MC circle-fork-DRK"></circle><text id="text-MC-MC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MC</text></g><g class="node" transform="translate(707,2238.7197231833907)"><circle r="4.5" id="circle-

FUSE-FUSE" class="circle-FUSE circle-fork-DRK"></circle><text id="text-FUSE-FUSE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FUSE</text></g><g class="node" transform="translate(707,2250.259515570934)"><circle r="4.5" id="circle-WITCH-WITCH" class="circle-WITCH circle-fork-

DRK"></circle><text id="text-WITCH-WITCH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WITCH</text></g><g class="node" 

transform="translate(707,2261.7993079584776)"><circle r="4.5" id="circle-ZEB-ZEB" class="circle-ZEB circle-fork-DRK"></circle><text id="text-ZEB-ZEB" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ZEB</text></g><g class="node" transform="translate(707,2273.3391003460206)"><circle r="4.5" id="circle-CLD-CLD" 

class="circle-CLD circle-fork-DRK"></circle><text id="text-CLD-CLD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CLD</text></g><g class="node" 

transform="translate(707,2296.4186851211075)"><circle r="4.5" id="circle-BTO-BTO" class="circle-BTO circle-fork-DRK"></circle><text id="text-BTO-BTO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BTO</text></g><g class="node" transform="translate(707,2319.498269896194)"><circle r="4.5" id="circle-BIZ-BIZ" 

class="circle-BIZ circle-fork-DRK"></circle><text id="text-BIZ-BIZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BIZ</text></g><g class="node" 

transform="translate(707,2342.5778546712804)"><circle r="4.5" id="circle-Pal-Pal" class="circle-Pal circle-fork-DRK"></circle><text id="text-Pal-Pal" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Pal</text></g><g class="node" transform="translate(707,2365.657439446367)"><circle r="4.5" id="circle-MWC-MWC" 

class="circle-MWC circle-fork-DRK"></circle><text id="text-MWC-MWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MWC</text></g><g 

class="node" transform="translate(707,2388.7370242214533)"><circle r="4.5" id="circle-DSV-DSV" class="circle-DSV circle-fork-DRK"></circle><text id="text-DSV-DSV" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DSV</text></g><g class="node" transform="translate(707,2411.81660899654)"><circle r="4.5" id="circle-

MTS-MTS" class="circle-MTS circle-fork-DRK"></circle><text id="text-MTS-MTS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MTS</text></g><g class="node" transform="translate(707,2434.8961937716263)"><circle r="4.5" id="circle-MAG-MAG" class="circle-MAG circle-fork-DRK"></circle><text 

id="text-MAG-MAG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MAG</text></g><g class="node" transform="translate

(707,2457.9757785467127)"><circle r="4.5" id="circle-VMINE-VMINE" class="circle-VMINE circle-fork-DRK"></circle><text id="text-VMINE-VMINE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VMINE</text></g><g class="node" transform="translate(707,2481.055363321799)"><circle r="4.5" id="circle-DEPO-GBP-DEPO-

GBP" class="circle-DEPO-GBP circle-fork-DRK"></circle><text id="text-DEPO-GBP-DEPO-GBP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">DEPO-GBP</text></g><g class="node" transform="translate(707,2504.1349480968856)"><circle r="4.5" id="circle-XCR-XCR" class="circle-XCR circle-fork-

DRK"></circle><text id="text-XCR-XCR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XCR</text></g><g class="node" transform="translate

(589.1666666666667,3306.150519031142)"><circle r="5" id="circle-X14-X14" class="circle-X14 circle-fork-DRK"></circle><text id="text-X14-X14" dx="-8" dy=".31em" class="btc" 

transform="translate(-0.5)" style="text-anchor: end;">X14</text></g><g class="node" transform="translate(707,3300.38062283737)"><circle r="4.5" id="circle-SOLE-SOLE" 

class="circle-SOLE circle-fork-X14"></circle><text id="text-SOLE-SOLE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SOLE</text></g><g 

class="node" transform="translate(707,3311.9204152249135)"><circle r="4.5" id="circle-BCSH-BCSH" class="circle-BCSH circle-fork-X14"></circle><text id="text-BCSH-BCSH" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BCSH</text></g><g class="node" transform="translate(707,2550.2941176470586)"><circle r="4.5" 

id="circle-CYX-CYX" class="circle-CYX circle-fork-DRK"></circle><text id="text-CYX-CYX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CYX</text></g><g class="node" transform="translate(707,2573.3737024221455)"><circle r="4.5" id="circle-TMC-TMC" class="circle-TMC circle-fork-DRK"></circle><text 

id="text-TMC-TMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TMC</text></g><g class="node" transform="translate

(707,2596.453287197232)"><circle r="4.5" id="circle-RACE-RACE" class="circle-RACE circle-fork-DRK"></circle><text id="text-RACE-RACE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RACE</text></g><g class="node" transform="translate(707,2619.5328719723184)"><circle r="4.5" id="circle-AZC-AZC" 

class="circle-AZC circle-fork-DRK"></circle><text id="text-AZC-AZC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AZC</text></g><g class="node" 

transform="translate(707,2642.612456747405)"><circle r="4.5" id="circle-AMBER-AMBER" class="circle-AMBER circle-fork-DRK"></circle><text id="text-AMBER-AMBER" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AMBER</text></g><g class="node" transform="translate(707,2665.6920415224913)"><circle r="4.5" 

id="circle-LMR-LMR" class="circle-LMR circle-fork-DRK"></circle><text id="text-LMR-LMR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LMR</text></g><g class="node" transform="translate(707,2688.7716262975778)"><circle r="4.5" id="circle-CryptoXTC-CryptoXTC" class="circle-CryptoXTC circle-fork-

DRK"></circle><text id="text-CryptoXTC-CryptoXTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CryptoXTC</text></g><g class="node" 

transform="translate(707,2711.8512110726642)"><circle r="4.5" id="circle-XURO-XURO" class="circle-XURO circle-fork-DRK"></circle><text id="text-XURO-XURO" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XURO</text></g><g class="node" transform="translate(707,2734.930795847751)"><circle r="4.5" 

id="circle-GLY-GLY" class="circle-GLY circle-fork-DRK"></circle><text id="text-GLY-GLY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GLY</text></g><g class="node" transform="translate(707,2758.0103806228376)"><circle r="4.5" id="circle-MWC-MWC" class="circle-MWC circle-fork-DRK"></circle><text 

id="text-MWC-MWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MWC</text></g><g class="node" transform="translate

(707,2781.089965397924)"><circle r="4.5" id="circle-Neos-Neos" class="circle-Neos circle-fork-DRK"></circle><text id="text-Neos-Neos" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Neos</text></g><g class="node" transform="translate(707,2804.1695501730105)"><circle r="4.5" id="circle-EQX-EQX" 

class="circle-EQX circle-fork-DRK"></circle><text id="text-EQX-EQX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EQX</text></g><g 

class="node" transform="translate(707,2827.249134948097)"><circle r="4.5" id="circle-CCB-CCB" class="circle-CCB circle-fork-DRK"></circle><text id="text-CCB-CCB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCB</text></g><g class="node" transform="translate(707,2850.3287197231834)"><circle r="4.5" 

id="circle-TNZ-TNZ" class="circle-TNZ circle-fork-DRK"></circle><text id="text-TNZ-TNZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TNZ</text></g><g class="node" transform="translate(707,2873.40830449827)"><circle r="4.5" id="circle-CRCK-CRCK" class="circle-CRCK circle-fork-DRK"></circle><text 

id="text-CRCK-CRCK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CRCK</text></g><g class="node" transform="translate

(707,2896.4878892733564)"><circle r="4.5" id="circle-CHILD-CHILD" class="circle-CHILD circle-fork-DRK"></circle><text id="text-CHILD-CHILD" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHILD</text></g><g class="node" transform="translate(707,2919.567474048443)"><circle r="4.5" id="circle-ROS-ROS" 

class="circle-ROS circle-fork-DRK"></circle><text id="text-ROS-ROS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ROS</text></g><g 

class="node" transform="translate(707,2942.6470588235293)"><circle r="4.5" id="circle-STC-STC" class="circle-STC circle-fork-DRK"></circle><text id="text-STC-STC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">STC</text></g><g class="node" transform="translate(707,2965.7266435986157)"><circle r="4.5" 

id="circle-Envy-Envy" class="circle-Envy circle-fork-DRK"></circle><text id="text-Envy-Envy" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">Envy</text></g><g class="node" transform="translate(707,2988.806228373702)"><circle r="4.5" id="circle-EXCL-EXCL" class="circle-EXCL circle-fork-DRK"></circle><text 

id="text-EXCL-EXCL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXCL</text></g><g class="node" transform="translate

(707,3011.8858131487887)"><circle r="4.5" id="circle-DP-DP" class="circle-DP circle-fork-DRK"></circle><text id="text-DP-DP" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">DP</text></g><g class="node" transform="translate(707,3034.965397923875)"><circle r="4.5" id="circle-MTC-MTC" class="circle-MTC circle-fork-

DRK"></circle><text id="text-MTC-MTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTC</text></g><g class="node" transform="translate

(707,3058.0449826989616)"><circle r="4.5" id="circle-METAL-METAL" class="circle-METAL circle-fork-DRK"></circle><text id="text-METAL-METAL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">METAL</text></g><g class="node" transform="translate(707,3081.1245674740485)"><circle r="4.5" id="circle-GHOST-GHOST" 

class="circle-GHOST circle-fork-DRK"></circle><text id="text-GHOST-GHOST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GHOST</text></g><g class="node" transform="translate(707,3104.204152249135)"><circle r="4.5" id="circle-WSTL-WSTL" class="circle-WSTL circle-fork-

DRK"></circle><text id="text-WSTL-WSTL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WSTL</text></g><g class="node" transform="translate

(707,3127.2837370242214)"><circle r="4.5" id="circle-SPARK-SPARK" class="circle-SPARK circle-fork-DRK"></circle><text id="text-SPARK-SPARK" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SPARK</text></g><g class="node" transform="translate(707,3150.363321799308)"><circle r="4.5" id="circle-OPTI-OPTI" 

class="circle-OPTI circle-fork-DRK"></circle><text id="text-OPTI-OPTI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">OPTI</text></g><g 

class="node" transform="translate(707,3173.442906574395)"><circle r="4.5" id="circle-MOB-MOB" class="circle-MOB circle-fork-DRK"></circle><text id="text-MOB-MOB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOB</text></g><g class="node" transform="translate(707,3196.5224913494812)"><circle r="4.5" 

id="circle-NKT-NKT" class="circle-NKT circle-fork-DRK"></circle><text id="text-NKT-NKT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">NKT</text></g><g class="node" transform="translate(707,3219.6020761245677)"><circle r="4.5" id="circle-LFTC-LFTC" class="circle-LFTC circle-fork-DRK"></circle><text 

id="text-LFTC-LFTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LFTC</text></g><g class="node" transform="translate

(707,3242.681660899654)"><circle r="4.5" id="circle-CBR-CBR" class="circle-CBR circle-fork-DRK"></circle><text id="text-CBR-CBR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CBR</text></g><g class="node" transform="translate(707,2527.214532871972)"><circle r="4.5" id="circle-WeTk-WeTk" 

class="circle-WeTk circle-fork-DRK"></circle><text id="text-WeTk-WeTk" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WeTk</text></g><g 

class="node" transform="translate(707,2331.0380622837374)"><circle r="4.5" id="circle-DGORE-DGORE" class="circle-DGORE circle-fork-DRK"></circle><text id="text-DGORE-

DGORE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DGORE</text></g><g class="node" transform="translate

(707,3265.7612456747406)"><circle r="4.5" id="circle-SMAC-SMAC" class="circle-SMAC circle-fork-DRK"></circle><text id="text-SMAC-SMAC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SMAC</text></g><g class="node" transform="translate(707,1915.60553633218)"><circle r="4.5" id="circle-ZUR-ZUR" 

class="circle-ZUR circle-fork-QRK"></circle><text id="text-ZUR-ZUR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZUR</text></g><g 

class="node" transform="translate(707,1927.145328719723)"><circle r="4.5" id="circle-VLD-VLD" class="circle-VLD circle-fork-QRK"></circle><text id="text-VLD-VLD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VLD</text></g><g class="node" transform="translate(707,1938.6851211072665)"><circle r="4.5" id="circle-

ANI-ANI" class="circle-ANI circle-fork-QRK"></circle><text id="text-ANI-ANI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANI</text></g><g 

class="node" transform="translate(707,1950.2249134948095)"><circle r="4.5" id="circle-WIKI-WIKI" class="circle-WIKI circle-fork-QRK"></circle><text id="text-WIKI-WIKI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WIKI</text></g><g class="node" transform="translate(707,2146.401384083045)"><circle r="4.5" id="circle-

UNC-UNC" class="circle-UNC circle-fork-QRK"></circle><text id="text-UNC-UNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">UNC</text></g><g 

class="node" transform="translate(707,1973.3044982698962)"><circle r="4.5" id="circle-MTS-MTS" class="circle-MTS circle-fork-QRK"></circle><text id="text-MTS-MTS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTS</text></g><g class="node" transform="translate(707,1984.8442906574394)"><circle r="4.5" 

id="circle-OFF-OFF" class="circle-OFF circle-fork-QRK"></circle><text id="text-OFF-OFF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">OFF</text></g><g class="node" transform="translate(707,1996.3840830449826)"><circle r="4.5" id="circle-TBC-TBC" class="circle-TBC circle-fork-QRK"></circle><text 

id="text-TBC-TBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TBC</text></g><g class="node" transform="translate

(707,2007.923875432526)"><circle r="4.5" id="circle-PRT-PRT" class="circle-PRT circle-fork-QRK"></circle><text id="text-PRT-PRT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PRT</text></g><g class="node" transform="translate(707,2019.463667820069)"><circle r="4.5" id="circle-DOUG-DOUG" 

class="circle-DOUG circle-fork-QRK"></circle><text id="text-DOUG-DOUG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DOUG</text></g><g 

class="node" transform="translate(707,2042.5432525951555)"><circle r="4.5" id="circle-MET-MET" class="circle-MET circle-fork-QRK"></circle><text id="text-MET-MET" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MET</text></g><g class="node" transform="translate(707,2065.6228373702425)"><circle r="4.5" 

id="circle-SOMA-SOMA" class="circle-SOMA circle-fork-QRK"></circle><text id="text-SOMA-SOMA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SOMA</text></g><g class="node" transform="translate(707,2088.702422145329)"><circle r="4.5" id="circle-QB-QB" class="circle-QB circle-fork-QRK"></circle><text 

id="text-QB-QB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">QB</text></g><g class="node" transform="translate

(707,2111.7820069204154)"><circle r="4.5" id="circle-SRC-SRC" class="circle-SRC circle-fork-QRK"></circle><text id="text-SRC-SRC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SRC</text></g><g class="node" transform="translate(707,1961.764705882353)"><circle r="4.5" id="circle-DIME-DIME" 

class="circle-DIME circle-fork-QRK"></circle><text id="text-DIME-DIME" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIME</text></g><g 

class="node" transform="translate(707,2134.861591695502)"><circle r="4.5" id="circle-MUE-MUE" class="circle-MUE circle-fork-QRK"></circle><text id="text-MUE-MUE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MUE</text></g><g class="node" transform="translate(589.1666666666667,1067.430795847751)"><circle 

r="5" id="circle-CL-CL" class="circle-CL circle-fork-BTC"></circle><text id="text-CL-CL" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: 

end;">CL</text></g><g class="node" transform="translate(707,1061.6608996539792)"><circle r="4.5" id="circle-ECN-ECN" class="circle-ECN circle-fork-CL"></circle><text 

id="text-ECN-ECN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ECN</text></g><g class="node" transform="translate

(707,1073.2006920415224)"><circle r="4.5" id="circle-MAX-MAX" class="circle-MAX circle-fork-CL"></circle><text id="text-MAX-MAX" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MAX</text></g><g class="node" transform="translate(707,611.6089965397924)"><circle r="4.5" id="circle-GRD-GRD" 

class="circle-GRD circle-fork-BTC"></circle><text id="text-GRD-GRD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRD</text></g><g 

class="node" transform="translate(707,588.529411764706)"><circle r="4.5" id="circle-TGC-TGC" class="circle-TGC circle-fork-BTC"></circle><text id="text-TGC-TGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TGC</text></g><g class="node" transform="translate(589.1666666666667,1038.5813148788927)"><circle 

r="4.75" id="circle-SKC-SKC" class="circle-SKC circle-fork-BTC"></circle><text id="text-SKC-SKC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SKC</text></g><g class="node" transform="translate(707,1038.5813148788927)"><circle r="4.5" id="circle-XDC-XDC" class="circle-XDC circle-fork-SKC"></circle><text 

id="text-XDC-XDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XDC</text></g><g class="node" transform="translate

(707,542.3702422145328)"><circle r="4.5" id="circle-ASC-ASC" class="circle-ASC circle-fork-BTC"></circle><text id="text-ASC-ASC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ASC</text></g><g class="node" transform="translate(707,519.2906574394464)"><circle r="4.5" id="circle-BET-BET" 

class="circle-BET circle-fork-BTC"></circle><text id="text-BET-BET" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BET</text></g><g class="node" 

transform="translate(589.1666666666667,1015.5017301038063)"><circle r="4.75" id="circle-UNO-UNO" class="circle-UNO circle-fork-BTC"></circle><text id="text-UNO-UNO" 

dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">UNO</text></g><g class="node" transform="translate(707,1015.5017301038063)"><circle r="4.5" 

id="circle-AMK-AMK" class="circle-AMK circle-fork-UNO"></circle><text id="text-AMK-AMK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">AMK</text></g><g class="node" transform="translate(707,473.1314878892734)"><circle r="4.5" id="circle-RKC-RKC" class="circle-RKC circle-fork-BTC"></circle><text 

id="text-RKC-RKC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RKC</text></g><g class="node" transform="translate

(707,450.05190311418687)"><circle r="4.5" id="circle-NYM-NYM" class="circle-NYM circle-fork-BTC"></circle><text id="text-NYM-NYM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NYM</text></g><g class="node" transform="translate(707,426.9723183391003)"><circle r="4.5" id="circle-Curecoin-Curecoin" 

class="circle-Curecoin circle-fork-BTC"></circle><text id="text-Curecoin-Curecoin" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">Curecoin</text></g><g class="node" transform="translate(707,403.89273356401384)"><circle r="4.5" id="circle-HUC-HUC" class="circle-HUC circle-fork-BTC"></circle><text 

id="text-HUC-HUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HUC</text></g><g class="node" transform="translate

(707,380.8131487889273)"><circle r="4.5" id="circle-KMC-KMC" class="circle-KMC circle-fork-BTC"></circle><text id="text-KMC-KMC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KMC</text></g><g class="node" transform="translate(707,357.73356401384086)"><circle r="4.5" id="circle-GLB-GLB" 

class="circle-GLB circle-fork-BTC"></circle><text id="text-GLB-GLB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLB</text></g><g class="node" 

transform="translate(707,334.6539792387543)"><circle r="4.5" id="circle-SNC-SNC" class="circle-SNC circle-fork-BTC"></circle><text id="text-SNC-SNC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">SNC</text></g><g class="node" transform="translate(707,311.57439446366783)"><circle r="4.5" id="circle-SSC-SSC" 

class="circle-SSC circle-fork-BTC"></circle><text id="text-SSC-SSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SSC</text></g><g class="node" 

transform="translate(707,288.4948096885813)"><circle r="4.5" id="circle-AAC-AAC" class="circle-AAC circle-fork-BTC"></circle><text id="text-AAC-AAC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">AAC</text></g><g class="node" transform="translate(589.1666666666667,986.6522491349481)"><circle r="5" 

id="circle-BLC-BLC" class="circle-BLC circle-fork-BTC"></circle><text id="text-BLC-BLC" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: 

end;">BLC</text></g><g class="node" transform="translate(707,980.8823529411765)"><circle r="4.5" id="circle-PHO-PHO" class="circle-PHO circle-fork-BLC"></circle><text 

id="text-PHO-PHO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHO</text></g><g class="node" transform="translate

(707,992.4221453287197)"><circle r="4.5" id="circle-365-365" class="circle-365 circle-fork-BLC"></circle><text id="text-365-365" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">365</text></g><g class="node" transform="translate(707,242.3356401384083)"><circle r="4.5" id="circle-SPICE-SPICE" class="circle-SPICE circle-

fork-BTC"></circle><text id="text-SPICE-SPICE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPICE</text></g><g class="node" 

transform="translate(707,219.2560553633218)"><circle r="4.5" id="circle-INK-INK" class="circle-INK circle-fork-BTC"></circle><text id="text-INK-INK" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">INK</text></g><g class="node" transform="translate(707,196.1764705882353)"><circle r="4.5" id="circle-LGBT-LGBT" 

class="circle-LGBT circle-fork-BTC"></circle><text id="text-LGBT-LGBT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LGBT</text></g><g 

class="node" transform="translate(707,173.0968858131488)"><circle r="4.5" id="circle-LOOT-LOOT" class="circle-LOOT circle-fork-BTC"></circle><text id="text-LOOT-LOOT" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOOT</text></g><g class="node" transform="translate(707,150.0173010380623)"><circle r="4.5" 

id="circle-TAK-TAK" class="circle-TAK circle-fork-BTC"></circle><text id="text-TAK-TAK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TAK</text></g><g class="node" transform="translate(707,126.93771626297578)"><circle r="4.5" id="circle-RIC-RIC" class="circle-RIC circle-fork-BTC"></circle><text 

id="text-RIC-RIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RIC</text></g><g class="node" transform="translate

(707,57.69896193771627)"><circle r="4.5" id="circle-PWNY-PWNY" class="circle-PWNY circle-fork-BTC"></circle><text id="text-PWNY-PWNY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PWNY</text></g><g class="node" transform="translate(707,23.079584775086506)"><circle r="4.5" id="circle-LUC-LUC" 

class="circle-LUC circle-fork-BTC"></circle><text id="text-LUC-LUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LUC</text></g><g class="node" 

transform="translate(707,34.61937716262975)"><circle r="4.5" id="circle-POD-POD" class="circle-POD circle-fork-BTC"></circle><text id="text-POD-POD" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">POD</text></g><g class="node" transform="translate(707,934.7231833910035)"><circle r="4.5" id="circle-CKE-CKE" 

class="circle-CKE circle-fork-BTC"></circle><text id="text-CKE-CKE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CKE</text></g><g class="node" 

transform="translate(707,69.2387543252595)"><circle r="4.5" id="circle-ORO-ORO" class="circle-ORO circle-fork-BTC"></circle><text id="text-ORO-ORO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ORO</text></g><g class="node" transform="translate(707,80.77854671280276)"><circle r="4.5" id="circle-ATC-ATC" 

class="circle-ATC circle-fork-BTC"></circle><text id="text-ATC-ATC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ATC</text></g><g class="node" 

transform="translate(707,92.31833910034602)"><circle r="4.5" id="circle-BEN-BEN" class="circle-BEN circle-fork-BTC"></circle><text id="text-BEN-BEN" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BEN</text></g><g class="node" transform="translate(707,103.85813148788927)"><circle r="4.5" id="circle-HXC-HXC" 

class="circle-HXC circle-fork-BTC"></circle><text id="text-HXC-HXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HXC</text></g><g 

class="node" transform="translate(707,115.39792387543254)"><circle r="4.5" id="circle-CTD-CTD" class="circle-CTD circle-fork-BTC"></circle><text id="text-CTD-CTD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CTD</text></g><g class="node" transform="translate(707,138.477508650519)"><circle r="4.5" id="circle-

ARS-ARS" class="circle-ARS circle-fork-BTC"></circle><text id="text-ARS-ARS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ARS</text></g><g 

class="node" transform="translate(707,957.80276816609)"><circle r="4.5" id="circle-BTN-BTN" class="circle-BTN circle-fork-BTC"></circle><text id="text-BTN-BTN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTN</text></g><g class="node" transform="translate(707,184.63667820069205)"><circle r="4.5" 

id="circle-CX-CX" class="circle-CX circle-fork-BTC"></circle><text id="text-CX-CX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CX</text></g><g 

class="node" transform="translate(707,207.71626297577853)"><circle r="4.5" id="circle-ABC-ABC" class="circle-ABC circle-fork-BTC"></circle><text id="text-ABC-ABC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ABC</text></g><g class="node" transform="translate(707,230.79584775086508)"><circle r="4.5" 

id="circle-PRO-PRO" class="circle-PRO circle-fork-BTC"></circle><text id="text-PRO-PRO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PRO</text></g><g class="node" transform="translate(707,253.87543252595157)"><circle r="4.5" id="circle-EIC-EIC" class="circle-EIC circle-fork-BTC"></circle><text 

id="text-EIC-EIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EIC</text></g><g class="node" transform="translate

(707,276.955017301038)"><circle r="4.5" id="circle-ChC-ChC" class="circle-ChC circle-fork-BTC"></circle><text id="text-ChC-ChC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ChC</text></g><g class="node" transform="translate(707,300.0346020761246)"><circle r="4.5" id="circle-BULL-BULL" 

class="circle-BULL circle-fork-BTC"></circle><text id="text-BULL-BULL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BULL</text></g><g 

class="node" transform="translate(707,323.11418685121106)"><circle r="4.5" id="circle-GSY-GSY" class="circle-GSY circle-fork-BTC"></circle><text id="text-GSY-GSY" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GSY</text></g><g class="node" transform="translate(707,346.1937716262976)"><circle r="4.5" id="circle-

ODNT-ODNT" class="circle-ODNT circle-fork-BTC"></circle><text id="text-ODNT-ODNT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ODNT</text></g><g class="node" transform="translate(707,369.2733564013841)"><circle r="4.5" id="circle-PHR-PHR" class="circle-PHR circle-fork-BTC"></circle><text 

id="text-PHR-PHR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHR</text></g><g class="node" transform="translate

(707,392.3529411764706)"><circle r="4.5" id="circle-STEPS-STEPS" class="circle-STEPS circle-fork-BTC"></circle><text id="text-STEPS-STEPS" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">STEPS</text></g><g class="node" transform="translate(707,415.43252595155707)"><circle r="4.5" id="circle-LOG-LOG" 

class="circle-LOG circle-fork-BTC"></circle><text id="text-LOG-LOG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOG</text></g><g 

class="node" transform="translate(707,438.5121107266436)"><circle r="4.5" id="circle-GUINEA-GUINEA" class="circle-GUINEA circle-fork-BTC"></circle><text id="text-GUINEA-

GUINEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GUINEA</text></g><g class="node" transform="translate

(707,461.59169550173016)"><circle r="4.5" id="circle-SOV-SOV" class="circle-SOV circle-fork-BTC"></circle><text id="text-SOV-SOV" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SOV</text></g><g class="node" transform="translate(707,484.6712802768166)"><circle r="4.5" id="circle-eTaler-eTaler" 

class="circle-eTaler circle-fork-BTC"></circle><text id="text-eTaler-eTaler" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">eTaler</text></g><g 

class="node" transform="translate(707,507.75086505190313)"><circle r="4.5" id="circle-BTCD-BTCD" class="circle-BTCD circle-fork-BTC"></circle><text id="text-BTCD-BTCD" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTCD</text></g><g class="node" transform="translate(707,530.8304498269896)"><circle r="4.5" 

id="circle-ACOIN-ACOIN" class="circle-ACOIN circle-fork-BTC"></circle><text id="text-ACOIN-ACOIN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ACOIN</text></g><g class="node" transform="translate(707,553.910034602076)"><circle r="4.5" id="circle-TTY-TTY" class="circle-TTY circle-fork-BTC"></circle><text 

id="text-TTY-TTY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TTY</text></g><g class="node" transform="translate

(707,576.9896193771626)"><circle r="4.5" id="circle-UBTC-UBTC" class="circle-UBTC circle-fork-BTC"></circle><text id="text-UBTC-UBTC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">UBTC</text></g><g class="node" transform="translate(707,600.0692041522492)"><circle r="4.5" id="circle-BTI-BTI" 

class="circle-BTI circle-fork-BTC"></circle><text id="text-BTI-BTI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTI</text></g><g class="node" 

transform="translate(589.1666666666667,1211.6782006920416)"><circle r="4.75" id="circle-YLC-YLC" class="circle-YLC circle-fork-BTC"></circle><text id="text-YLC-YLC" dx="-8" 

dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">YLC</text></g><g class="node" transform="translate(707,1211.6782006920416)"><circle r="4.5" 

id="circle-PAC-PAC" class="circle-PAC circle-fork-YLC"></circle><text id="text-PAC-PAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PAC</text></g><g class="node" transform="translate(707,646.2283737024221)"><circle r="4.5" id="circle-SSD-SSD" class="circle-SSD circle-fork-BTC"></circle><text 

id="text-SSD-SSD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SSD</text></g><g class="node" transform="translate

(707,669.3079584775086)"><circle r="4.5" id="circle-DRX-DRX" class="circle-DRX circle-fork-BTC"></circle><text id="text-DRX-DRX" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DRX</text></g><g class="node" transform="translate(707,692.3875432525952)"><circle r="4.5" id="circle-NEOS-NEOS" 

class="circle-NEOS circle-fork-BTC"></circle><text id="text-NEOS-NEOS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NEOS</text></g><g 

class="node" transform="translate(707,715.4671280276817)"><circle r="4.5" id="circle-ASD-ASD" class="circle-ASD circle-fork-BTC"></circle><text id="text-ASD-ASD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ASD</text></g><g class="node" transform="translate(707,738.5467128027682)"><circle r="4.5" id="circle-

REB-REB" class="circle-REB circle-fork-BTC"></circle><text id="text-REB-REB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">REB</text></g><g 

class="node" transform="translate(707,761.6262975778546)"><circle r="4.5" id="circle-BIG-BIG" class="circle-BIG circle-fork-BTC"></circle><text id="text-BIG-BIG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BIG</text></g><g class="node" transform="translate(707,784.7058823529412)"><circle r="4.5" id="circle-

XMG-XMG" class="circle-XMG circle-fork-BTC"></circle><text id="text-XMG-XMG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XMG</text></g><g class="node" transform="translate(707,807.7854671280277)"><circle r="4.5" id="circle-AXR-AXR" class="circle-AXR circle-fork-BTC"></circle><text 

id="text-AXR-AXR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AXR</text></g><g class="node" transform="translate

(707,830.8650519031141)"><circle r="4.5" id="circle-MOBI-MOBI" class="circle-MOBI circle-fork-BTC"></circle><text id="text-MOBI-MOBI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MOBI</text></g><g class="node" transform="translate(707,853.9446366782006)"><circle r="4.5" id="circle-NODE-NODE" 

class="circle-NODE circle-fork-BTC"></circle><text id="text-NODE-NODE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NODE</text></g><g 

class="node" transform="translate(707,877.0242214532872)"><circle r="4.5" id="circle-WWC-WWC" class="circle-WWC circle-fork-BTC"></circle><text id="text-WWC-WWC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WWC</text></g><g class="node" transform="translate(707,900.1038062283737)"><circle r="4.5" id="circle-

AU-AU" class="circle-AU circle-fork-BTC"></circle><text id="text-AU-AU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AU</text></g><g 

class="node" transform="translate(707,923.1833910034603)"><circle r="4.5" id="circle-PPCD-PPCD" class="circle-PPCD circle-fork-BTC"></circle><text id="text-PPCD-PPCD" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PPCD</text></g><g class="node" transform="translate(707,623.1487889273357)"><circle r="4.5" 

id="circle-DOGEBC-DOGEBC" class="circle-DOGEBC circle-fork-BTC"></circle><text id="text-DOGEBC-DOGEBC" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">DOGEBC</text></g><g class="node" transform="translate(707,161.55709342560553)"><circle r="4.5" id="circle-PPCD-PPCD" class="circle-PPCD circle-

fork-BTC"></circle><text id="text-PPCD-PPCD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PPCD</text></g><g class="node" 

transform="translate(707,265.4152249134948)"><circle r="4.5" id="circle-FUD-FUD" class="circle-FUD circle-fork-BTC"></circle><text id="text-FUD-FUD" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">FUD</text></g><g class="node" transform="translate(707,496.21107266435985)"><circle r="4.5" id="circle-FLIRT-

FLIRT" class="circle-FLIRT circle-fork-BTC"></circle><text id="text-FLIRT-FLIRT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FLIRT</text></g><g class="node" transform="translate(707,565.4498269896194)"><circle r="4.5" id="circle-URAN-URAN" class="circle-URAN circle-fork-BTC"></circle><text 

id="text-URAN-URAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">URAN</text></g><g class="node" transform="translate

(707,634.6885813148789)"><circle r="4.5" id="circle-PIMP-PIMP" class="circle-PIMP circle-fork-BTC"></circle><text id="text-PIMP-PIMP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PIMP</text></g><g class="node" transform="translate(707,657.7681660899653)"><circle r="4.5" id="circle-FLIRT-FLIRT" 

class="circle-FLIRT circle-fork-BTC"></circle><text id="text-FLIRT-FLIRT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLIRT</text></g><g 

class="node" transform="translate(707,680.8477508650519)"><circle r="4.5" id="circle-DECR-DECR" class="circle-DECR circle-fork-BTC"></circle><text id="text-DECR-DECR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DECR</text></g><g class="node" transform="translate(707,727.006920415225)"><circle r="4.5" 

id="circle-PAYER-PAYER" class="circle-PAYER circle-fork-BTC"></circle><text id="text-PAYER-PAYER" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PAYER</text></g><g class="node" transform="translate(707,796.2456747404844)"><circle r="4.5" id="circle-IQD-IQD" class="circle-IQD circle-fork-BTC"></circle><text 

id="text-IQD-IQD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">IQD</text></g><g class="node" transform="translate

(707,819.3252595155709)"><circle r="4.5" id="circle-IMP-IMP" class="circle-IMP circle-fork-BTC"></circle><text id="text-IMP-IMP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">IMP</text></g><g class="node" transform="translate(707,842.4048442906574)"><circle r="4.5" id="circle-OAC-OAC" 

class="circle-OAC circle-fork-BTC"></circle><text id="text-OAC-OAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">OAC</text></g><g 

class="node" transform="translate(707,865.4844290657438)"><circle r="4.5" id="circle-MTX-MTX" class="circle-MTX circle-fork-BTC"></circle><text id="text-MTX-MTX" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTX</text></g><g class="node" transform="translate(707,946.2629757785468)"><circle r="4.5" id="circle-

SUP-SUP" class="circle-SUP circle-fork-BTC"></circle><text id="text-SUP-SUP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SUP</text></g><path class="link" id="link-GAY-GAY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,46.15916955017301 707,46.15916955017301" 

style="opacity: 0.5; stroke: rgb(136, 136, 136); stroke-width: 2px;"></path><g class="node" transform="translate(707,46.15916955017301)"><circle r="4.5" id="circle-GAY-GAY" 

class="circle-GAY circle-fork-BTC" style="fill: rgb(255, 255, 255);"></circle><text id="text-GAY-GAY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start; 

font-size: 10px;">GAY</text></g><g class="node" transform="translate(0,613.2488781196508)"><circle r="49.875" id="circle-BTC-BTC" class="circle-BTC circle-fork-"></circle><text 

id="text-BTC-BTC" dx="-8" dy=".31em" class="btc" transform="translate(-49.92)" style="text-anchor: end;">BTC</text></g></g></svg>

Sent: Thursday, September 13, 2018 at 6:41 PM
From: "Mass Mason" <1st@musician.org>
To: 1st@musician.org
Subject: Cryptonote @musicore
@cryptonotefoundation
cryptonotefoundation Merge remote-tracking branch 'bytecoin/master'
 1
Latest commit 8edd998 on Jan 18, 2016
 	external	Issue #57. Add missing 'override' keyword	3 years ago
 	include	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	src	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	tests	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	.gitattributes	moved all stuff to github	5 years ago
 	.gitignore	IWallet implementation improvements	3 years ago
 	CMakeLists.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	CTestCustom.cmake	Bytecoin v.1.0.7 release	3 years ago
 	Makefile	moved all stuff to github	5 years ago
 	README.md	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	ReleaseNotes.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 README.md
This is the reference code for CryptoNote cryptocurrency protocol.

Launch your own CryptoNote currency: CryptoNote Starter
CryptoNote reference implementation: CryptoNoteCoin
Discussion board and support: CryptoNote Forum
CryptoNote forking how-to
Preparation
Create an account on GitHub.com
Fork CryptoNote repository
Buy one or two Ubuntu-based dedicated servers (at least 2Gb of RAM) for seed nodes.
First step. Give a name to your coin
Good name must be unique. Check uniqueness with google and Map of Coins or any other similar service.

Name must be specified twice:

1. in file src/CryptoNoteConfig.h - CRYPTONOTE_NAME constant

Example:

const char CRYPTONOTE_NAME[] = "furiouscoin";
2. in src/CMakeList.txt file - set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")

Example:

set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change a repository name.

Second step. Emission logic
1. Total money supply (src/CryptoNoteConfig.h)

Total amount of coins to be emitted. Most of CryptoNote based coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example 

UINT64_C(858986905600000000)).

Example:

const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
2. Emission curve (src/CryptoNoteConfig.h)

Be default CryptoNote provides emission formula with slight decrease of block reward with each block. This is different from Bitcoin where block reward halves every 4 years.

EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.

Example:

const unsigned EMISSION_SPEED_FACTOR = 18;
3. Difficulty target (src/CryptoNoteConfig.h)

Difficulty target is an ideal time period between blocks. In case an average time between blocks becomes less than difficulty target, the difficulty increases. Difficulty target is measured 

in seconds.

Difficulty target directly influences several aspects of coin's behavior:

transaction confirmation speed: the longer the time between the blocks is, the slower transaction confirmation is
emission speed: the longer the time between the blocks is the slower the emission process is
orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.

Example:

const uint64_t DIFFICULTY_TARGET = 120;
4. Block reward formula

In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in src/CryptoNoteCore/Currency.cpp:

bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, int64_t& emissionChange) const
This function has two parts:

basic block reward calculation: uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> m_emissionSpeedFactor;
big block penalty calculation: this is the way CryptoNote protects the block chain from transaction flooding attacks and preserves opportunities for organic network growth at the same 

time.
Only the first part of this function is directly related to the emission logic. You can change it the way you want. See MonetaVerde and DuckNote as the examples where this function is 

modified.

Third step. Networking
1. Default ports for P2P and RPC networking (src/CryptoNoteConfig.h)

P2P port is used by daemons to talk to each other through P2P protocol. RPC port is used by wallet and other programs to talk to daemon.

It's better to choose ports that aren't used by other software or coins. See known TCP ports lists:

http://www.speedguide.net/ports.php
http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
http://keir.net/portlist.html
Example:

const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;
2. Network identifier (src/P2p/P2pNetworks.h)

This identifier is used in network packages in order not to mix two different cryptocoin networks. Change all the bytes to random values for your network:

const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
3. Seed nodes (src/CryptoNoteConfig.h)

Add IP addresses of your seed nodes.

Example:

const std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Fourth step. Transaction fee and related parameters
1. Minimum transaction fee (src/CryptoNoteConfig.h)

Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is 

usually enough.

Example:

const uint64_t MINIMUM_FEE = 100000;
2. Penalty free block size (src/CryptoNoteConfig.h)

CryptoNote protects chain from tx flooding by reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.

Example:

const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Fifth step. Address prefix
You may choose a letter (in some cases several letters) all the coin's public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. 

Since the rules for address prefixes are nontrivial you may use the prefix generator tool.

Example:

const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Sixth step. Genesis block
1. Build the binaries with blank genesis tx hex (src/CryptoNoteConfig.h)

You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.

Example:

const char GENESIS_COINBASE_TX_HEX[] = "";
2. Start the daemon to print out the genesis block

Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.

Example:

furiouscoind --print-genesis-tx
3. Copy the printed transaction hash (src/CryptoNoteConfig.h)

Copy the tx hash that has been printed by the daemon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h

Example:

const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
4. Recompile the binaries

Recompile everything again. Your coin code is ready now. Make an announcement for the potential users and enjoy!

Building CryptoNote
On *nix
Dependencies: GCC 4.7.3 or later, CMake 2.8.6 or later, and Boost 1.55.

You may download them from:

http://gcc.gnu.org/
http://www.cmake.org/
http://www.boost.org/
Alternatively, it may be possible to install them using a package manager.
To build, change to a directory where this file is located, and run make. The resulting executables can be found in build/release/src.

Advanced options:

Parallel build: run make -j<number of threads> instead of make.
Debug build: run make build-debug.
Test suite: run make test-release to run tests in addition to building. Running make test-debug will do the same to the debug version.
Building with Clang: it may be possible to use Clang instead of GCC, but this may not work everywhere. To build, run export CC=clang CXX=clang++ before running make.
On Windows
Dependencies: MSVC 2013 or later, CMake 2.8.6 or later, and Boost 1.55. You may download them from:

http://www.microsoft.com/
http://www.cmake.org/
http://www.boost.org/
To build, change to a directory where this file is located, and run theas commands:

mkdir build
cd build
cmake -G "Visual Studio 12 Win64" ..
And then do Build. Good luck!

<!---Starting . . .

@cryptonotefoundation
Initial commit
e399973
@cryptonotefoundation
Minor fixies in comments
2f44547
@cryptonotefoundation
Update README, add forking guide
9a0a44a
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
7853c21
@cryptonotefoundation
Added testnet flag in daemon
f4769d8
@cryptonotefoundation
Add print-genesis-tx option.
7f23949
@cryptonotefoundation
Update README
eefb411
@cryptonotefoundation
CryptoC-3: fix for Merkle tree root issue
6be8153
@cryptonotefoundation
Update README
b00a96c
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
fbd7265
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
cde1b8e
<Musicore:
<?xml version="1.0"?>
 	<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" 

s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:GetSpecificPortMappingEntry xmlns:u="urn:schemas-upnp-

org:service:WANIPConnection:1"><NewRemoteHost></NewRemoteHost><NewExternalPort>12345</NewExternalPort><NewProtocol>UDP</NewProtocol></u:GetSpecificPortMapp

ingEntry></s:Body></s:Envelope>
 	
Good name must be unique. Check uniqueness with Google and Map of Coins.


Name must be specified twice:
— in file src/CryptoNoteConfig.h — CRYPTONOTE_NAME constant
Example: 
const char CRYPTONOTE_NAME[] = "furiouscoin";
— in src/CMakeList.txt file — set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")
Example: 
set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change the repository name.

Emission logic
Total money supply — src/CryptoNoteConfig.h
Total amount of coins to be emitted. Most of CryptoNote-based coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example 

UINT64_C(858986905600000000)).
Example: 
const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
Emission curve — src/CryptoNoteConfig.h
By default CryptoNote provides emission formula with a slight decrease of block reward each block. This is different from Bitcoin where block reward halves every 4 years.
EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.
Example: 
const unsigned EMISSION_SPEED_FACTOR = 18;
Difficulty target — src/CryptoNoteConfig.h
Difficulty target is an ideal time period between blocks. In case an average time between blocks becomes less than difficulty target, difficulty increases. Difficulty target is measured in 

seconds.
Difficulty target directly influences several aspects of coin's behavior:
— transaction confirmation speed: the longer time between the blocks is, the slower transaction confirmation is
— emission speed: the longer the time between blocks is the slower the emission is
— orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.
Example: 
const uint64_t DIFFICULTY_TARGET = 120;

Block reward formula
In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in src/CryptoNoteCore/Currency.cpp:
bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, int64_t& emissionChange) const
This function has two parts:
—basic block reward calculation
uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> m_emissionSpeedFactor;
—big block penalty calculation
This is the way CryptoNote protects chain from transaction flooding attacks and preserves opportunities for organic network growth at the same time.

Only the first part of this function is directly related to emission logic. You can change it the way you want. See MonetaVerde and DarkNote as the examples where this function is 

modified.
Emission calculator
You may play around with DIFFICULTY_TARGET and EMISSION_SPEED_FACTOR parameters and check how your coin's emission will look like compared to Bitcoin. The graph 

below projects emission percentage for the first 30 years.

YearEmission %Your coinBitcoin0510152025300100255075
 
EMISSION_SPEED_FACTORDIFFICULTY_TARGETMONEY_SUPPLY
Networking
Default ports for P2P and RPC networking — src/CryptoNoteConfig.h
P2P port is used by daemons to communicate with each other through P2P protocol.
RPC port is used by wallet and other software to communicate with the daemon.
It's better to choose ports that aren't used by some other software. See known TCP ports lists:
— http://www.speedguide.net/ports.php
— http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
— http://keir.net/portlist.html

Example:
const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;

Network identifier — src/P2p/P2pNetworks.h
This identifier is used for network packages in order not to mix two different cryptocoin networks. Change all bytes to random values for your network:
const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
Seed nodes — src/CryptoNoteConfig.h
Add IP addresses of your seed nodes. 
Example: 
const std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Transaction fee and related parameters
Minimum transaction fee — src/CryptoNoteConfig.h
Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is 

usually enough.
Example:
const uint64_t MINIMUM_FEE = 100000;
Penalty free block size — src/CryptoNoteConfig.h
CryptoNote protects chain from tx flooding by reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.
Example:
const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Address prefix
You may choose a letter (in some cases several letters) all the coin's public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. 

Since the rules for address prefixes are nontrivial you may use the prefix generator tool below.

Example:
const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Desired address prefix CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX
 
Genesis block
Build the binaries with a blank genesis tx hex — src/CryptoNoteConfig.h
You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.
Example:
const char GENESIS_COINBASE_TX_HEX[] = "";
Start the daemon to print out the genesis block
Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.
Example:
furiouscoind --print-genesis-tx
Insert the printed transaction hash — src/CryptoNoteConfig.h
Copy the tx hash that has been printed out by the deamon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h 
Example:
const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
Recompile the binaries
Recompile everything again. Your coin code is ready now. Make an announcement on CryptoNote Forum and enjoy!
Submit your coin for the review
In order to be officially announced as a CryptoNote currency you should submit your coin : Cryptomusic (Musicore) (Bitcoin Music) ($MC)

 format:
 
Coin name = Musicore
Ticker = Bitcoin
Logo = (available) - 1st Music
Website link = Musicore.com
Public discussion links = blokchain.info
Sources link = github.com
Specifications = cryptonote
Any additional details = musicore.exe (tunecoin, harmoney, bitcoinmusic, etc.)
---------------------------------------------------
Musicore.exe #hastag ?xml version="1.0" encoding="utf-8" ?>
<ContentCollection>
	<MetaInfo> 
		
		<Customer>_Kunde</Customer> 
	
		<CustomerNumber>_Kundenauftragsnummer</CustomerNumber>
			
		<PlantNumber>_Werkauftragsnummer</PlantNumber>
			
		<OrderNumber>_Bestellung</OrderNumber>

		<Description>_Beschreibung</Description>
		
	</MetaInfo>
	
	
	<UsingDocument FileName="793-501.wstx" />
	
	
	<MarkingCarriers>
			<MarkingCarrier>
			
			<Contents>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent=

'input'
($)MC=

laanwj
build: bump version to 0.17.0 …
Verified

cd2f4f3

fanquake
doc: regenerate manpages
Verified

f0f745d

laanwj
Merge #13956: [0.17] doc: regenerate 

manpages …
Verified

ff41e47
Commits on Aug 14, 2018

achow101 and fanquake
Fix PSBT deserialization of 0-input transactions …
Verified
8c4cd2b

achow101 and fanquake
Serialize 

non-witness utxo as a non-witness tx but always deserialize… …
Verified
517010e

sipa and fanquake
Additional sanity checks in SignPSBTInput …
Verified
ad6d845

sipa and fanquake
Only wipe wrong UTXO type data if overwritten by wallet …
Verified
dbaadc9

achow101 and fanquake
Test that a non-witness script as witness utxo is not signed …
Verified
8935869

achow101 and fanquake
More tests of signer checks …
Verified

0333914
Commits on Aug 15, 2018

laanwj
Merge #13976: [0.17] Backport #13960 & #13917 …
Verified

4a2960f
Commits 

on Aug 16, 2018

laanwj
qt: Pre-rc1 translations update …
Verified

3d827be
Commits on Aug 19, 2018

theuni and MarcoFalke
depends: fix qt determinism …
48c8459
Commits on Aug 21, 

2018

laanwj
Merge #14005: [0.17] depends: fix qt determinism …
Verified

1ffd67f

instagibbs and laanwj
Allow ConstructTransaction to not throw error with 0-input txn …
Verified
c6d9057

instagibbs and laanwj
walletcreatefundedpsbt: remove duplicate replaceable arg …
Verified
65e7a8b

instagibbs and laanwj
QA: add basic walletcreatefunded optional arg test …
Verified
82e2b9c

instagibbs and laanwj
RPCTypeCheck bip32derivs arg in walletcreatefunded …
Verified

9833545
Commits on Aug 22, 2018

luke-jr and laanwj
Bugfix: NSIS: Exclude 

Makefile* from docs …
Verified

3e4829a
Commits on Aug 27, 2018

Empact and MarcoFalke
Docs: Fix help message typo optiona -> optional …
b5ec6d4

MarcoFalke
qa: Stop txindex 

thread before calling destructor …
fab0fbe

skeees and MarcoFalke
Use assert when running from multithreaded code as BOOST_CHECK_* are … …

cf3d7f9
Commits on Aug 28, 2018

laanwj
Merge #14084: [0.17] qa: Backports …
Verified

5f71eac

instagibbs and laanwj
fix walletcreatefundedpsbt deriv paths, add test …
Verified
2307a6e
Commits on Sep 05, 2018

laanwj and MarcoFalke
doc: Change documentation for =0 for non-boolean options …

2936dbc

MarcoFalke
doc: Update v0.17.0.0 manpages

6bfee8a
Commits on Sep 06, 2018

laanwj
Merge #14152: [0.17] doc: Change documentation for =0 for non-boolean… …
Verified

6ba1f15

laanwj
util: Report parse errors in configuration file …
Verified
83aafd5

MarcoFalke and laanwj
test: Add test for config file parsing errors …
Verified

eb202ea

sipa and laanwj
Add descriptor reference documentation …
Verified
0f681ce

sipa and laanwj
Adjust 

TODO link …
Verified
eece974

sipa and laanwj
Replace duplcate reference with reference to reference doc …
Verified
Musicore.exe
Sent: Thursday, September 13, 2018 at 7:10 PM
From: "Mass Mason" <1st@musician.org>
To: "Mass Mason" <1st@musician.org>
Subject: Re: Cryptonote @musicore
#Tag($) - 1st@musician.org
----
git clone 

https://git.code.sf.net/p/cryptonotecoin/code cryptonotecoin-code
'musicore'
true=tunecoin "MC$"
cryptocurrency
xcode=wallet($)

Sent: Thursday, September 13, 2018 at 6:41 PM
From: "Mass Mason" <1st@musician.org>
To: 1st@musician.org
Subject: Cryptonote @musicore

cryptonotefoundation Merge remote-tracking branch 'bytecoin/master'
 1
Latest 

commit 8edd998 on Jan 18, 2016

external	Issue #57. Add missing 'override' keyword	3 years ago

include	Merge remote-tracking branch 'bytecoin/master'	3 years 

ago

src	Merge remote-tracking branch 'bytecoin/master'	3 years ago

tests	Merge remote-tracking branch 'bytecoin/master'	3 years ago

.gitattributes	moved all stuff to 

github	5 years ago

.gitignore	IWallet implementation improvements	3 years ago

CMakeLists.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago

CTestCustom.cmake	Bytecoin v.1.0.7 release	3 years ago

Makefile	moved all stuff to github	5 years ago

README.md	Merge remote-tracking branch 

'bytecoin/master'	3 years ago

ReleaseNotes.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 README.md
This is the reference code 

for CryptoNote cryptocurrency protocol.

Launch your own CryptoNote currency: CryptoNote Starter
CryptoNote reference implementation: CryptoNoteCoin
Discussion board and 

support: CryptoNote Forum
CryptoNote forking how-to
Preparation
Create an account on GitHub.com
Fork CryptoNote repository
Buy one or two Ubuntu-based dedicated servers (at least 

2Gb of RAM) for seed nodes.
First step. Give a name to your coin
Good name must be unique. Check uniqueness with google and Map of Coins or any other similar service.

Name must 

be specified twice:

1. in file src/CryptoNoteConfig.h - CRYPTONOTE_NAME constant

Example:

const char CRYPTONOTE_NAME[] = "furiouscoin";
2. in src/CMakeList.txt file - 

set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")

Example:

set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You 

should also change a repository name.

Second step. Emission logic
1. Total money supply (src/CryptoNoteConfig.h)

Total amount of coins to be emitted. Most of CryptoNote based 

coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example UINT64_C(858986905600000000)).

Example:

const uint64_t 

MONEY_SUPPLY = (uint64_t)(-1);
2. Emission curve (src/CryptoNoteConfig.h)

Be default CryptoNote provides emission formula with slight decrease of block reward with each block. 

This is different from Bitcoin where block reward halves every 4 years.

EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate 

block reward.

Example:

const unsigned EMISSION_SPEED_FACTOR = 18;
3. Difficulty target (src/CryptoNoteConfig.h)

Difficulty target is an ideal time period between blocks. In case 

an average time between blocks becomes less than difficulty target, the difficulty increases. Difficulty target is measured in seconds.

Difficulty target directly influences several aspects 

of coin's behavior:

transaction confirmation speed: the longer the time between the blocks is, the slower transaction confirmation is
emission speed: the longer the time between the 

blocks is the slower the emission process is
orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.

Example:

const 

uint64_t DIFFICULTY_TARGET = 120;
4. Block reward formula

In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The 

implementation is in src/CryptoNoteCore/Currency.cpp:

bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, 

uint64_t& reward, int64_t& emissionChange) const
This function has two parts:

basic block reward calculation: uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> 

m_emissionSpeedFactor;
big block penalty calculation: this is the way CryptoNote protects the block chain from transaction flooding attacks and preserves opportunities for organic 

network growth at the same time.
Only the first part of this function is directly related to the emission logic. You can change it the way you want. See MonetaVerde and DuckNote as the 

examples where this function is modified.

Third step. Networking
1. Default ports for P2P and RPC networking (src/CryptoNoteConfig.h)

P2P port is used by daemons to talk to each 

other through P2P protocol. RPC port is used by wallet and other programs to talk to daemon.

It's better to choose ports that aren't used by other software or coins. See known TCP ports 

lists:

http://www.speedguide.net/ports.php
http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
http://keir.net/portlist.html
Example:

const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;
2. Network identifier (src/P2p/P2pNetworks.h)

This identifier is used in network packages in order not to mix two different cryptocoin 

networks. Change all the bytes to random values for your network:

const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 

0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
3. Seed nodes (src/CryptoNoteConfig.h)

Add IP addresses of your seed nodes.

Example:

const std::initializer_list<const char*> 

SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Fourth step. Transaction fee and related parameters
1. Minimum transaction fee (src/CryptoNoteConfig.h)

Zero 

minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is usually 

enough.

Example:

const uint64_t MINIMUM_FEE = 100000;
2. Penalty free block size (src/CryptoNoteConfig.h)

CryptoNote protects chain from tx flooding by reducing block reward for 

blocks larger than the median block size. However, this rule applies for blocks larger than CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.

Example:

const size_t 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Fifth step. Address prefix
You may choose a letter (in some cases several letters) all the coin's public 

addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. Since the rules for address prefixes are nontrivial you may use the prefix 

generator tool.

Example:

const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Sixth step. Genesis block
1. Build the binaries with 

blank genesis tx hex (src/CryptoNoteConfig.h)

You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.

Example:

const char 

GENESIS_COINBASE_TX_HEX[] = "";
2. Start the daemon to print out the genesis block

Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase 

transaction hash.

Example:

furiouscoind --print-genesis-tx
3. Copy the printed transaction hash (src/CryptoNoteConfig.h)

Copy the tx hash that has been printed by the daemon 

to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h

Example:

const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
4. Recompile the 

binaries

Recompile everything again. Your coin code is ready now. Make an announcement for the potential users and enjoy!

Building CryptoNote
On *nix
Dependencies: GCC 4.7.3 or 

later, CMake 2.8.6 or later, and Boost 1.55.

You may download them from:

http://gcc.gnu.org/
http://www.cmake.org/
http://www.boost.org/
Alternatively, it may be possible to install them 

using a package manager.
To build, change to a directory where this file is located, and run make. The resulting executables can be found in build/release/src.

Advanced options:

Parallel build: run make -j<number of threads> instead of make.
Debug build: run make build-debug.
Test suite: run make test-release to run tests in addition to building. Running make 

test-debug will do the same to the debug version.
Building with Clang: it may be possible to use Clang instead of GCC, but this may not work everywhere. To build, run export CC=clang 

CXX=clang++ before running make.
On Windows
Dependencies: MSVC 2013 or later, CMake 2.8.6 or later, and Boost 1.55. You may download them from:

http://www.microsoft.com/
http://www.cmake.org/
http://www.boost.org/
To build, change to a directory where this file is located, and run theas commands:

mkdir build
cd build
cmake -G "Visual Studio 12 Win64" 

..
And then do Build. Good luck!

<!---Starting . . .


Initial commit
e399973

Minor fixies in comments
2f44547

Update README, add forking guide
9a0a44a

Merge remote-tracking branch 

'bytecoin/master'
7853c21

Added testnet flag in daemon
f4769d8

Add print-genesis-tx option.
7f23949

Update README
eefb411

CryptoC-3: fix for Merkle tree root issue
6be8153

Update 

README
b00a96c

Merge remote-tracking branch 'bytecoin/master'
fbd7265

Merge remote-tracking branch 'bytecoin/master'
cde1b8e
<Musicore:
<?xml version="1.0"?>

<s:Envelope 

xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:GetSpecificPortMappingEntry 

xmlns:u="urn:schemas-upnp-

org:service:WANIPConnection:1"><NewRemoteHost></NewRemoteHost><NewExternalPort>12345</NewExternalPort><NewProtocol>UDP</NewProtocol></u:GetSpecificPortMapp

ingEntry></s:Body></s:Envelope>

Good name must be unique. Check uniqueness with Google and Map of Coins.


Name must be specified twice:
— in file src/CryptoNoteConfig.h — 

CRYPTONOTE_NAME constant
Example: 
const char CRYPTONOTE_NAME[] = "furiouscoin";
— in src/CMakeList.txt file — set_property(TARGET daemon PROPERTY 

OUTPUT_NAME "YOURCOINNAMEd")
Example: 
set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change the repository name.

Emission logic
Total money supply — src/CryptoNoteConfig.h
Total amount of coins to be emitted. Most of CryptoNote-based coins use (uint64_t)(-1) (equals to 

18446744073709551616). You can define number explicitly (for example UINT64_C(858986905600000000)).
Example: 
const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
Emission 

curve — src/CryptoNoteConfig.h
By default CryptoNote provides emission formula with a slight decrease of block reward each block. This is different from Bitcoin where block reward 

halves every 4 years.
EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.
Example: 
const unsigned 

EMISSION_SPEED_FACTOR = 18;
Difficulty target — src/CryptoNoteConfig.h
Difficulty target is an ideal time period between blocks. In case an average time between blocks 

becomes less than difficulty target, difficulty increases. Difficulty target is measured in seconds.
Difficulty target directly influences several aspects of coin's behavior:
— transaction 

confirmation speed: the longer time between the blocks is, the slower transaction confirmation is
— emission speed: the longer the time between blocks is the slower the emission is
— 

orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.
Example: 
const uint64_t DIFFICULTY_TARGET = 120;

Block 

reward formula
In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in 

src/CryptoNoteCore/Currency.cpp:
bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, 

int64_t& emissionChange) const
This function has two parts:
—basic block reward calculation
uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> 

m_emissionSpeedFactor;
—big block penalty calculation
This is the way CryptoNote protects chain from transaction flooding attacks and preserves opportunities for organic network 

growth at the same time.

Only the first part of this function is directly related to emission logic. You can change it the way you want. See MonetaVerde and DarkNote as the examples 

where this function is modified.
Emission calculator
You may play around with DIFFICULTY_TARGET and EMISSION_SPEED_FACTOR parameters and check how your coin's 

emission will look like compared to Bitcoin. The graph below projects emission percentage for the first 30 years.

YearEmission %Your coinBitcoin0510152025300100255075

EMISSION_SPEED_FACTORDIFFICULTY_TARGETMONEY_SUPPLY
Networking
Default ports for P2P and RPC networking — src/CryptoNoteConfig.h
P2P port is used by daemons 

to communicate with each other through P2P protocol.
RPC port is used by wallet and other software to communicate with the daemon.
It's better to choose ports that aren't used by 

some other software. See known TCP ports lists:
— http://www.speedguide.net/ports.php
— http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
— http://keir.net/portlist.html

Example:
const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;

Network identifier — src/P2p/P2pNetworks.h
This identifier is used for network packages 

in order not to mix two different cryptocoin networks. Change all bytes to random values for your network:
const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 

0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
Seed nodes — src/CryptoNoteConfig.h
Add IP addresses of your seed nodes. 
Example: 
const 

std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Transaction fee and related parameters
Minimum transaction fee — 

src/CryptoNoteConfig.h
Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value 

for MINIMUM_FEE is usually enough.
Example:
const uint64_t MINIMUM_FEE = 100000;
Penalty free block size — src/CryptoNoteConfig.h
CryptoNote protects chain from tx flooding by 

reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE 

bytes.
Example:
const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Address prefix
You may choose a letter (in some cases several letters) all the coin's 

public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. Since the rules for address prefixes are nontrivial you may use the 

prefix generator tool below.

Example:
const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Desired address 

prefix CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX

Genesis block
Build the binaries with a blank genesis tx hex — src/CryptoNoteConfig.h
You should leave const char 

GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.
Example:
const char GENESIS_COINBASE_TX_HEX[] = "";
Start the daemon to print out the genesis block
Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.
Example:
furiouscoind --print-genesis-tx
Insert the printed transaction 

hash — src/CryptoNoteConfig.h
Copy the tx hash that has been printed out by the deamon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h 
Example:
const char 

GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
Recompile the binaries
Recompile everything again. Your coin code is ready now. Make an 

announcement on CryptoNote Forum and enjoy!
Submit your coin for the review
In order to be officially announced as a CryptoNote currency you should submit your coin : Cryptomusic 

(Musicore) (Bitcoin Music) ($MC)

 format:

Coin name = Musicore
Ticker = Bitcoin
Logo = (available) - 1st Music
Website link = Musicore.com
Public discussion links = blokchain.info
Sources link = github.com
Specifications = cryptonote
Any additional details = musicore.exe (tunecoin, harmoney, bitcoinmusic, etc.)

									</Content>
							</Contents>
		</MarkingCarrier>
			</MarkingCarriers>
<Hash_targ(MC$) : 3,493
 Star 34,679  Fork 20,995 bitcoin/bitcoin
 Code  Issues 548  Pull requests 278  Projects 7  Insights
Pulse
Contributors
Community
Commits
Code frequency
Dependency graph
Network
Forks
Woah, this network is huge! We’re showing only some of this network’s repositories.
@bitcoin bitcoin / bitcoin
  @171099 171099 / bitcoin
  @1761461582 1761461582 / bitcoin
  @a-nai a-nai / bitcoin
  @a5an0 a5an0 / bitcoin
  @aakselrod aakselrod / bitcoin
  @aantthony aantthony / bitcoin
  @aaronschmitz aaronschmitz / chronocrypt
  @abjkk abjkk / bitcoin
  @AbraaoAlves AbraaoAlves / bitcoin
  @abroxos abroxos / bitcoin
  @achoch achoch / bitcoin
  @aesculf aesculf / bitcoin
  @africoiner africoiner / africoin
  @ak2consulting ak2consulting / bitcoin
  @aka2006 aka2006 / bitcoin
  @AkademieOlympia AkademieOlympia / bitcoin
  @akash0x53 akash0x53 / bitcoin
  @akosiaris akosiaris / bitcoin
  @akshay-bhardwaj akshay-bhardwaj / bitcoin
  @AlexanderAA AlexanderAA / bitcoin
  @alexanderanon alexanderanon / bitcoin
  @alexanderkjeldaas alexanderkjeldaas / bitcoin
  @AlexanderKlyuchev AlexanderKlyuchev / bitcoin
  @AlexeyYurchuk AlexeyYurchuk / bitcoin
  @alexzhang2015 alexzhang2015 / bitcoin
  @AlfiyaZi AlfiyaZi / bitcoin
  @alishiguang alishiguang / bitcoin
  @allyouneedinfoappstoclick allyouneedinfoappstoclick / bitcoin
  @amente amente / bitcoin
  @amiller amiller / bitcoin
  @amiryal amiryal / bitcoin
  @andrewbenimaru andrewbenimaru / bitcoin
  @anonymousacc anonymousacc / bitcoin
  @AnonymousPrime AnonymousPrime / bitcoin
  @anu5 anu5 / bitcoin
  @aosmith aosmith / bitcoin
  @apoelstra apoelstra / bitcoin
  @applsdev applsdev / libcoin
  @arielluaces arielluaces / bitcoin
  @arpith20 arpith20 / bitcoin
  @arUMar arUMar / bitcoin
  @ashleyholman ashleyholman / bitcoin
  @Aurorer Aurorer / bitcoin
  @austinlin austinlin / bitcoin
  @aviad aviad / bitcoin
  @avivz avivz / bitcoin
  @avl42 avl42 / bitcoin
  @azazeal azazeal / bitcoin
  @bachsio bachsio / bitcoin
  @badmofo badmofo / bitcoin
  @barmstrong barmstrong / bitcoin
  @bbqchickenrobot bbqchickenrobot / bitcoin
  @bcholenski bcholenski / bitcoin
  @Belkaar Belkaar / bitcoin
  @BenDavis503 BenDavis503 / i0coin
  @bhutley bhutley / bitcoin
  @bigpot bigpot / bitcoin
  @binchensjtu binchensjtu / bitcoin
  @biruh biruh / bitcoin
  @bitcoinmeetups bitcoinmeetups / bitshares
  @bitcoinreactor bitcoinreactor / bitcoin
  @bittrader bittrader / bitcoin
  @biv1230 biv1230 / bitcoin
  @BizMikey BizMikey / bitcoin
  @bkz1986 bkz1986 / bitcoin
  @blackymetal blackymetal / bitcoin
  @blaklite blaklite / bitcoin
  @blubkatze blubkatze / bitcoin
  @Bobalot Bobalot / bitcoin
  @bombizombi bombizombi / bitcoin
  @bookie988 bookie988 / bitcoin
  @botp botp / bitcoin
  @bradb1982 bradb1982 / bitcoin-1
  @bradjau bradjau / bitcoin
  @brandondahler brandondahler / bitcoin
  @breeezzz breeezzz / bitcoin
  @briandeloach briandeloach / bitcoin
  @BruceWilliams BruceWilliams / bitcoin
  @bruiselee bruiselee / bitcoin
  @bryan-mills bryan-mills / bytecoin
    @ahmedbodi ahmedbodi / bytecoin
    @Aldur1 Aldur1 / bytecoin
    @boinggg boinggg / bytecoin
    @Digigami Digigami / bytecoin
    @Mwako Mwako / bytecoin
    @rsnel rsnel / bytecoin
    @saigosan saigosan / bytecoin
  @BryanStarbuck BryanStarbuck / bitcoin
  @btcmonkey btcmonkey / bitcoin
  @burger2 burger2 / bitcoin
  @bwarner bwarner / bitcoin
  @bytemaster bytemaster / bitshare_bitcoin_branch
  @ca1ek ca1ek / bitcoin
  @CAFxX CAFxX / bitcoin
  @caojiguang caojiguang / bitcoin
  @carlosnasillo carlosnasillo / bitcoin
  @casascius casascius / bitcoin
  @cashdollar cashdollar / bitcoin
  @cdecker cdecker / bitcoin
  @cdhowie cdhowie / bitcoin
  @cdspace cdspace / bitcoin
  @celeduc celeduc / bitcoin
  @celr celr / bitcoin
  @chackley chackley / bitcoin
  @charlesxyan charlesxyan / bitcoin
  @cheery cheery / bitcoin
  @cheme cheme / bitcoin
  @christo christo / bitcoin
  @christophebiocca christophebiocca / bitcoin
  @cidermole cidermole / bitcoin
  @clopez clopez / bitcoin
  @cloudcoin cloudcoin / cloudcoin
    @realcoin realcoin / cloudcoin
  @cmaclell cmaclell / bitcoin
  @cnasty cnasty / bitcoin
  @cnhacks cnhacks / bitcoin
  @cnusrso cnusrso / bitcoin
  @CodeNameTheOnlyOne CodeNameTheOnlyOne / bitcoin
  @CodeShark CodeShark / bitcoin
  @codler codler / bitcoin
  @coinhelper coinhelper / bitcoin
  @colindean colindean / bitcoin
  @comcomist comcomist / bitcoin
  @constantined constantined / bitcoin
  @cozz cozz / bitcoin
  @cponeill cponeill / bitcoin
  @craftcoin craftcoin / bitcoin
  @crazikPL crazikPL / bitcoin
  @crazykernel crazykernel / bitcoin
  @crazyrabbitLTC crazyrabbitLTC / bitcoin
  @CriticalNix CriticalNix / bitcoin
  @csolar csolar / bitcoin
  @CSRedRat CSRedRat / bitcoin
  @csrfdez csrfdez / bitcoin
  @cuboney cuboney / bitcoin
  @cweaver543 cweaver543 / bitcoin
  @cyanitol cyanitol / bitcoin
  @cyphlex cyphlex / bitcoin
  @czaanja czaanja / bitcoin
  @da2ce7 da2ce7 / bitcoin
  @dacoinminster dacoinminster / symbitcoin
  @daedalus daedalus / bitcoin
  @Dafvid Dafvid / bitcoin-relay
  @dan-da dan-da / bitcoin
  @danidomi danidomi / bitcoin
  @daqing15 daqing15 / bitcoin
  @DarrellDuane DarrellDuane / bitcoin
  @Davei234 Davei234 / bitcoin
  @davex25 davex25 / bitcoin
  @DavidGriffith DavidGriffith / bitcoin
  @dburnette dburnette / bitcoin
  @dds dds / bitcoin
  @denis2342 denis2342 / bitcoin
  @DerOrangeBaron DerOrangeBaron / bitcoin
  @Desuneko Desuneko / poorcoin
  @devrandom devrandom / bitcoin
  @dianna-project dianna-project / libcoin
  @Diapolo Diapolo / bitcoin
  @DieterKoblenz DieterKoblenz / bitcoin
  @DikangGu DikangGu / bitcoin
  @dimastopel dimastopel / bitcoin
  @dimension64 dimension64 / bitcoin
  @diosys diosys / diosys
  @dizzyd dizzyd / bitcoin
  @djpnewton djpnewton / bitcoin
  @dlitz dlitz / bitcoin
  @dmitrytrager dmitrytrager / bitcoin
  @donato donato / bitcoin
  @dondeng dondeng / bitcoin
  @dooglus dooglus / bitcoin
  @dpollak415 dpollak415 / bitcoin
  @drake01 drake01 / bitcoin
  @drgr33n drgr33n / bitcoin
  @drontus drontus / bitcoin
  @dropcoin dropcoin / bitcoin
  @dscotese dscotese / bitcoin
  @dserrano5 dserrano5 / bitcoin
  @dsias dsias / bitcoin
  @eamoc eamoc / bitcoin
  @eccstartup eccstartup / bitcoin
  @edmundedgar edmundedgar / bitcoin
  @eeertekin eeertekin / bitcoin
  @effyroth effyroth / bitcoin
  @elasticdarwin elasticdarwin / bitcoin
  @elchupa elchupa / bitcoin
  @elis elis / libcoin
  @emerson-zhao emerson-zhao / bitcoin
  @epscylonb epscylonb / bitcoin
  @EricJ2190 EricJ2190 / bitcoin
  @error10 error10 / bitcoin
  @errord errord / bitcoin
  @esskar esskar / bitcoin
  @Eylrid Eylrid / Egonkorra
  @Ezequiel-Estrada Ezequiel-Estrada / bitcoin
  @fadefy fadefy / bitcoin
  @fanquake fanquake / bitcoin
  @farva farva / bitcoin
  @fcicq fcicq / bitcoin
  @fcjhgvjh fcjhgvjh / bitcoin
  @FEIHudson FEIHudson / bitcoin
  @finway-china finway-china / bitcoin
  @fireduck64 fireduck64 / duckcoin
  @flatpointer flatpointer / bitcoin
  @floe floe / bitcoin
  @Flowdalic Flowdalic / bitcoin
  @fmtzhangli fmtzhangli / bitcoin
  @foomango foomango / bitcoin
  @forrestv forrestv / bitcoin
  @freewil freewil / bitcoin
  @freicoin freicoin / freicoin-old
    @clarkminor clarkminor / freicoin
    @foocoin foocoin / freicoin
    @hanliumaozhi hanliumaozhi / freicoin
    @ImpalerWrG ImpalerWrG / freicoin
    @kosciuk kosciuk / freicoin
  @frrp frrp / bitcoin
  @furyan furyan / bitcoin
  @fusebox fusebox / i0coin
    @bedavidsson bedavidsson / i0coin
  @GaelVarlet GaelVarlet / bitcoin
  @Garr255 Garr255 / GarrCoin2
  @gasteve gasteve / bitcoin
  @gavinandresen gavinandresen / bitcoin-git
    @donflatcap donflatcap / bitcoin-git
    @gossamr gossamr / bitcoin-git
    @melek-bitcoin melek-bitcoin / bitcoin-git
    @old-c-coder old-c-coder / bitcoin-git
    @purplezky purplezky / bitcoin-git
    @tehpwnerer tehpwnerer / bitcoin-git
    @vietlq vietlq / bitcoin-git
  @gdoteof gdoteof / bitcoin
  @Gelford Gelford / bitcoin
  @genba genba / bitcoin
  @genjix genjix / bitcoin
  @gjs278 gjs278 / bitcoin
  @gkucmierz gkucmierz / bitcoin
  @glassman glassman / terracoin
  @glondu glondu / bitcoin
  @goodluckart goodluckart / bitcoin
  @gotmyname gotmyname / lotcoin
  @graingert graingert / bitcoin
  @grayleonard grayleonard / bitcoin
  @greedyclown greedyclown / bitcoin
  @greennum greennum / bitcoin
  @gregorwoggle gregorwoggle / bitcoin
  @groffer groffer / bitcoin
  @h00gs h00gs / bitcoin
  @halfinney halfinney / bitcoin
  @hanzheng hanzheng / bitcoin
  @haohonglin haohonglin / bitcoin
  @harishpillay harishpillay / bitcoin
  @harrylu harrylu / bitcoin
  @HassanBA HassanBA / bitcoin
  @helohe helohe / bitcoin
  @heremeare heremeare / bitcoin
  @hexiaoyuan hexiaoyuan / bitcoin
  @hfeeki hfeeki / bitcoin
  @hg285808684 hg285808684 / bitcoin
  @himawari8 himawari8 / bitcoin
  @hippich hippich / bitcoin
  @Hlux Hlux / bitcoin
  @hnaik hnaik / bitcoin
  @holydevil holydevil / bitcoin
  @HongPong HongPong / bitcoin
  @hookercookerman hookercookerman / bitcoin-1
  @hp685 hp685 / bitcoin
  @huatai huatai / bitcoin
  @huckfinne huckfinne / bitcoin
  @iase iase / bitcoin
  @iBeacons iBeacons / bitcoin
  @ikennyfallas ikennyfallas / bitcoin
  @ilsken ilsken / bitcoin
  @imageoptimiser imageoptimiser / bitcoin
  @imaginationcoin imaginationcoin / bitcoin
  @imsaguy imsaguy / bitcoin
  @instagibbs instagibbs / bitcoin
  @iongchun iongchun / bitcoin
  @isaka isaka / bitcoin
  @istovatis istovatis / bitcoin
  @istvant istvant / bitcoin
  @itanger itanger / bitcoin
  @itgoujie2 itgoujie2 / bitcoin
  @ixcoin ixcoin / ixcoin
  @j5ik2o j5ik2o / bitcoin
  @jackjack-jj jackjack-jj / bitcoin
    @rodjacksonx rodjacksonx / bitcoin-old
  @jackthomson jackthomson / bitcoin
  @jadeye jadeye / bitcoin
  @jakeva jakeva / bitcoin-pwcheck
    @initiate6 initiate6 / bitcoin-pwcheck
  @jammm jammm / bitcoin
  @jaromil jaromil / bitcoin
  @javgh javgh / bitcoin
  @Jay-Lei Jay-Lei / bitcoin
  @jb9802 jb9802 / bitcoin
  @jbidder jbidder / bitcoin
  @jbreher jbreher / bitcoin
  @jburkle jburkle / bitcoin
  @jdoyleslc jdoyleslc / bitcoin
  @jegz jegz / bitcoin
  @jerejones jerejones / bitcoin
  @jerffer jerffer / bitcoin
  @jerrycross jerrycross / bitcoin
  @jetmc jetmc / bitcoin
  @jgarzik jgarzik / bitcoin
    @talpan talpan / bitcoin
  @jgraef jgraef / bitcoin
  @jhavstad jhavstad / bitcoin
  @jholz jholz / bitcoin
  @jhsrcmh jhsrcmh / bitcoin
  @jhyslop jhyslop / bitcoin
  @jiangchanghao jiangchanghao / bitcoin
  @jik123 jik123 / bitcoin
  @jlanik jlanik / bitcoin
  @jmcorgan jmcorgan / bitcoin
  @joetufano joetufano / bitcoin
  @johndillon johndillon / bitcoin
  @JohnnyPP JohnnyPP / bitcoin
  @JohnnyZhao JohnnyZhao / bitcoin
  @jojkaart jojkaart / bitcoin
  @JokeCoin JokeCoin / bitcoin
  @jonasschnelli jonasschnelli / bitcoin
  @jonbaer jonbaer / bitcoin
  @jondoh jondoh / bitcoin
  @jonkoking jonkoking / bitcoin
  @jonls jonls / bitcoin
  @jordanlewis jordanlewis / bitcoin
  @jorgejardim jorgejardim / bitcoin
  @JoseManuelAbarca JoseManuelAbarca / bitcoin
  @JoshArmter JoshArmter / bitcoin
  @joshuahdudley joshuahdudley / bitcoin
  @joulesbeef joulesbeef / bitcoin
  @Jowbob Jowbob / bitcoin
  @jpentland jpentland / bitcoin
  @jrmithdobbs jrmithdobbs / bitcoin
  @jru jru / bitcoin
  @jscottmiller jscottmiller / bitcoin
  @jtbarker jtbarker / bitcoin
  @jtlas jtlas / bitcoin
  @jubalix jubalix / bitcoin-1
  @jurov jurov / bitcoin
  @justmoon justmoon / bitcoin
  @justusranvier justusranvier / bitcoin
  @jwhitehorn jwhitehorn / bitcoin
  @k1n3ct k1n3ct / bitcoin
  @kaiquewdev kaiquewdev / bitcoin
  @kakt kakt / bitcoin
  @kamalx kamalx / bitcoin
  @kamyu104 kamyu104 / bitcoin
  @kannan83 kannan83 / bitcoin
  @KaSt KaSt / bitcoin
  @katerega katerega / bitcoin
  @katuma katuma / bitcoin
  @katzky katzky / bitcoin
  @kcbigring kcbigring / bitcoin
  @kefirFake kefirFake / bitcoin
  @kelvinltg kelvinltg / bitcoin
  @keninishna keninishna / ass-pennies
  @keymone keymone / bitcoin
  @keyskull keyskull / bitcoin
  @khorben khorben / bitcoin
  @killerstorm killerstorm / bitcoin
  @kinlo-triplemining kinlo-triplemining / bitcoin
  @kjj2 kjj2 / bitcoin
  @knotwork knotwork / Mergecoin
  @KobuderaRoninShinobi KobuderaRoninShinobi / bitcoin
  @kodmunki kodmunki / bitcoin
  @komichi komichi / bitcoin
  @konieczkow konieczkow / bitcoin
  @Korn1699 Korn1699 / bitcoin
  @kpfile kpfile / bitcoin
  @kprog kprog / bitcoin
  @kR105-zz kR105-zz / i0coin
  @kraserge kraserge / bitcoin
  @Krellan Krellan / bitcoin
  @kulkarnisantosh kulkarnisantosh / bitcoin
  @KumaresanC KumaresanC / bitcoin
  @kwaaak kwaaak / bitcoin
  @kybl kybl / bitcoin
  @kyledrake kyledrake / bitcoin
  @L2G L2G / bitcoin
  @laanwj laanwj / bitcoin
    @BuloZB BuloZB / bitcoin
  @lachesis lachesis / bitcoin
  @lano1106 lano1106 / bitcoin
  @LargePig LargePig / bitcoin
  @ldjking ldjking / bitcoin
  @leeight leeight / bitcoin
  @leelium leelium / bitcoin
  @leto leto / bitcoin
  @Lewies Lewies / bitcoin
  @LGHTSRC LGHTSRC / LGHTcoin
  @lijiewang lijiewang / bitcoin
  @linjaaho linjaaho / bitcoin
  @lkurki lkurki / bitcoin
  @llleo llleo / bitcoin
  @LNGi LNGi / bitcoin
  @Lohoris Lohoris / bitcoin
  @LordC LordC / bitcoin
  @lotcoin lotcoin / lotcoin
  @lucciano lucciano / bitcoin
  @luke-jr luke-jr / bitcoin
  @LukeLu1263 LukeLu1263 / bitcoin
  @luoq luoq / bitcoin
  @lusob lusob / bitcoin
  @luwenhegithub luwenhegithub / bitcoin
  @lysimachas lysimachas / bitcoin
  @lzsaver lzsaver / bitcoin-translation
    @hagelien hagelien / bitcoin-translation
    @joooc joooc / bitcoin-translation
    @m4rkiz m4rkiz / bitcoin-translation
    @thewalkerdead thewalkerdead / bitcoin-translation
    @wolciph wolciph / bitcoin-translation
  @m0mchil m0mchil / bitcoin
  @m0Ray m0Ray / bitcoin
  @maaku maaku / bitcoin
  @macwoodell macwoodell / bitcoin
  @mad mad / bitcoin
  @madberry madberry / bitcoin
  @madmercen madmercen / bitcoin
  @maiopirata maiopirata / bitcoin
  @makevlad makevlad / bitcoin
  @makomk makomk / bitcoin
  @maqifrnswa maqifrnswa / bitcoin
  @markdavidlamb markdavidlamb / bitcoin
  @Marsdude Marsdude / bitcoin
  @martindale martindale / bitcoin
  @MasterfulCoder MasterfulCoder / bitcoin
  @matholroyd matholroyd / bitcoin
  @Matoking Matoking / bitcoin
  @matsufan matsufan / bitcoin
  @matthewgao matthewgao / bitcoin
  @MaximF MaximF / bitcoin
  @maximussteele79 maximussteele79 / bitcoin
  @maxme maxme / bitcoin
  @maysen maysen / bitcoin
  @mazemax mazemax / bitcoin
  @mb300sd mb300sd / bitcoin
  @mcassano mcassano / bitcoin
  @mcdee mcdee / bitcoin
  @mckoss mckoss / bitcoin
  @meighti meighti / bitcoin
  @meltra meltra / bitcoin
  @mgiuca mgiuca / bitcoin
  @mhanne mhanne / bitcoin
  @mhouriet mhouriet / bitcoin
  @michaelelliot michaelelliot / bitcoin
  @Michagogo Michagogo / bitcoin
  @mickelfeng mickelfeng / bitcoin
  @mikegogulski mikegogulski / bitcoin
  @mikehearn mikehearn / bitcoin
  @mikerka mikerka / Bitcoin-NDCS
  @miniupnp miniupnp / bitcoin
  @miwright12 miwright12 / bitcoin
  @mklarmann mklarmann / bitcoin
  @mloftis mloftis / bitcoin
  @mmalecki mmalecki / bitcoin
  @mndrix mndrix / bitcoin
  @modcracker modcracker / bitcoin
  @moffel moffel / bitcoin
  @mokerjoke mokerjoke / bitcoin
  @moncho moncho / bitcoin
  @morristech morristech / bitcoin
  @MrJohnsson77 MrJohnsson77 / bitcoin
  @MrPuzzle MrPuzzle / bitcoin
  @MrSteel MrSteel / bitcoin
  @Mslegten Mslegten / bitcoin
  @Mudroid1 Mudroid1 / bitcoin
  @mughat mughat / bitcoin
  @mwstyles2002 mwstyles2002 / bitcoin
  @mxd37 mxd37 / bitcoin
  @mypalsminecraft mypalsminecraft / bitcoin
  @Mysticsam Mysticsam / bitcoin
  @mzhvld mzhvld / bitcoin
  @n1bor n1bor / bitcoin
  @nanotube nanotube / bitcoin
  @nbcoin nbcoin / bitcoin
  @neerajtuteja neerajtuteja / bitcoin
  @nelisky nelisky / bitcoin
  @nemo8910 nemo8910 / bitcoin
  @neofutur neofutur / bitcoin
  @Nerzahd Nerzahd / bitcoin
  @nestegg nestegg / bitcoin
  @netsmashers netsmashers / bitcoin
  @netvortex netvortex / bitcoin
  @newblue newblue / bitcoin
  @NicholasBell NicholasBell / bitcoin
  @Nicolai-s Nicolai-s / bitcoin
  @nigel-v-thomas nigel-v-thomas / bitcoin
  @NightZpy NightZpy / bitcoin
  @nikileshsa nikileshsa / bitcoin
  @njdragonfly njdragonfly / bitcoin
  @no2key no2key / bitcoin
  @nobled nobled / bitcoin
  @noctrium noctrium / bitcoin
  @nomnombtc nomnombtc / bitcoin
  @noobcoin noobcoin / noobcoin
  @novusordo novusordo / bitcoin
  @np np / bitcoin
  @npk npk / bitcoin
  @nunb nunb / bitcoin
  @oddlyzen oddlyzen / bitcoin
  @older-c-coder older-c-coder / bitcoin
  @oleganza oleganza / bitcoin
  @oliora oliora / bitcoin
  @onjin onjin / bitcoin
  @OPCoin OPCoin / OPCoin
  @oravi oravi / bitcoin
  @orb orb / bitcoin
  @osiloke osiloke / bitcoin
  @osmosis79 osmosis79 / bitcoin
  @ovdeathiam ovdeathiam / bitcoin
  @oxmolia oxmolia / bitcoin
  @ozzie00 ozzie00 / bitcoin
  @p2k p2k / bitcoin
  @p308945 p308945 / bitcoin
  @pagenotfound pagenotfound / bitcoin
  @paintitblacksabbath paintitblacksabbath / bitcoin
  @pakt pakt / bitcoin
  @paraboul paraboul / bitcoin
  @paraipan paraipan / bitcoin-1
  @pasky pasky / bitcoin
  @paulgmiller paulgmiller / bitcoin
  @perryhau perryhau / bitcoin
  @petertodd petertodd / bitcoin
  @peterwillcn peterwillcn / bitcoin
  @phelixbtc phelixbtc / bitcoin
  @Philhippus Philhippus / bitcoin
  @phorensic phorensic / bitcoin
  @piotrnar piotrnar / bitcoin
  @pixelglow pixelglow / bitcoin
  @pkarc pkarc / bitcoin
  @Plaidxx Plaidxx / bitcoin
  @plaprade plaprade / bitcoin
  @plcreate plcreate / bitcoin
  @pmarches pmarches / bitcoin
  @pmavrodiev pmavrodiev / bitcoin
  @poelzi poelzi / bitcoin
  @poppinyunhai poppinyunhai / bitcoin
  @progmax progmax / bitcoin
  @ps-neville ps-neville / bitcoin
  @pshep pshep / bitcoin
  @ptitfred ptitfred / bitcoin
  @pymander pymander / bitcoin
  @pywebdesign pywebdesign / bitcoin
  @qikcoin qikcoin / bitcoin
  @qiuxi qiuxi / bitcoin
  @qubez qubez / bitcoin
  @queer1 queer1 / bitcoin
  @rafikius rafikius / bitcoin
  @ragmondo ragmondo / bitcoin
  @rakyll rakyll / bitcoin
  @rebroad rebroad / bitcoin
  @redavis22 redavis22 / bitcoin
  @redshark1802 redshark1802 / bitcoin
  @RESPAWN-007 RESPAWN-007 / bitcoin
  @RevCBH RevCBH / bitcoin
  @richardassar richardassar / bitcoin
  @richardboase richardboase / bitcoin
  @ricky999 ricky999 / bitcoin
  @robbak robbak / bitcoin
  @robinbowes robinbowes / bitcoin
  @Rogaven Rogaven / bitcoin
  @roman5566 roman5566 / bitcoin
  @Rongorongo Rongorongo / bitcoin
  @roques roques / bitcoin
  @rtirrell rtirrell / bitcoin
  @Rui-Santos Rui-Santos / bitcoin
  @runeksvendsen runeksvendsen / bitcoin
  @RyanKung RyanKung / bitcoin
  @ryny24 ryny24 / bitcoin
  @samphippen samphippen / bitcoin
  @SampiEx SampiEx / bitcoin
  @SanderKleykens SanderKleykens / bitcoin
  @sanool sanool / bitcoin
  @santhoshnvv santhoshnvv / bitcoin
  @sarchar sarchar / bitcoin
  @sassame sassame / bitcoin
  @schell schell / bitcoin
  @schildbach schildbach / bitcoin
  @scriptmunkee scriptmunkee / bitcoin
  @scv119 scv119 / bitcoin
  @sdhjob sdhjob / bitcoin
    @waibo waibo / bitcoin
  @semibiotic semibiotic / bitcoin
  @sequoiar sequoiar / bitcoin
  @sgimenez sgimenez / bitcoin
  @shadedpixel shadedpixel / bitcoin
  @Shadowmeph Shadowmeph / bitcoin
  @ShadowOfHarbringer ShadowOfHarbringer / bitcoin-nftf
    @derfloh derfloh / bitcoin-x8s
  @shamoons shamoons / litecoin
  @shanew shanew / bitcoin
  @Shattienator Shattienator / bitcoin
  @shaundaley39 shaundaley39 / bitcoin
  @shepelt shepelt / bitcoin
  @shripadk shripadk / bitcoin
  @sifcoin sifcoin / sifcoin
  @simbha simbha / bitcoin
  @sipa sipa / bitcoin
    @AbrahamJewowich AbrahamJewowich / bitcoin
    @linkedinyou linkedinyou / bitcoin
    @peter-conalgo peter-conalgo / bitcoin
  @sirk390 sirk390 / bitcoin
  @Sitao Sitao / bitcoin
  @sivaPalakurthi sivaPalakurthi / bitcoin
  @sjalq sjalq / bitcoin
  @sje1 sje1 / bitcoin
  @sje397 sje397 / bitcoin
  @sjmackenzie sjmackenzie / bitcoin
  @sjuxax sjuxax / bitcoin
  @skeltoac skeltoac / bitcoin
  @slash7 slash7 / bitcoin
  @slavik0329 slavik0329 / bitcoin
  @slck4205 slck4205 / bitcoin
  @smola smola / bitcoin
  @snowyu snowyu / bitcoin
  @soheil soheil / bitcoin
  @soitun soitun / bitcoin
  @somebadger somebadger / bitcoin4pools
  @songtian songtian / bitcoin
  @soul1314 soul1314 / bitcoin
  @souravzzz souravzzz / bitcoin
  @spaculator spaculator / bitcoin
  @sparelife sparelife / bitcoin
  @spsole spsole / bitcoin
  @sserrano44 sserrano44 / bitcoin
  @stameish stameish / bitcoin
  @StapleSteve StapleSteve / bitcoin
  @starius starius / bitcoin
  @stcupp stcupp / bitcoin
    @MORA99 MORA99 / bitcoin
  @StDarkAngel StDarkAngel / bitcoin
  @subSTRATA subSTRATA / terracoin
  @switchcoin switchcoin / bitcoin
  @Tania188 Tania188 / bitcoin
  @tariq786 tariq786 / bitcoin
  @tashrobinson tashrobinson / bitcoin
  @tcatm tcatm / bitcoin
  @tcirwin tcirwin / bitcoin
  @tcoppi tcoppi / bitcoin
  @techwtf techwtf / bitcoin
  @tejastank tejastank / bitcoin
  @tenobis tenobis / bitcoin
  @terryblood terryblood / bitcoin
  @testaccount33 testaccount33 / bitcoin
  @tfirer tfirer / bitcoin
  @thebandoffice thebandoffice / bitcoin
  @TheBlueMatt TheBlueMatt / bitcoin
    @Unreal89 Unreal89 / bitcoin
  @theuni theuni / bitcoin
  @thirugnanamsubbiah thirugnanamsubbiah / bitcoin
  @thodg thodg / bitcoin
  @tholenst tholenst / bitcoin
  @tholum tholum / bitcoin
  @thommahoney thommahoney / bitcoin
  @TierNolan TierNolan / bitcoin
  @timohanke timohanke / bitcoin
  @timsk timsk / bitcoin
  @tiv-source tiv-source / bitcoin
  @tomagoyaky tomagoyaky / bitcoin
  @TomKnox TomKnox / bitcoin
  @trapp trapp / bitcoin
  @treazant treazant / treazant
  @tril0byte tril0byte / bitcoin
  @TripleSpeeder TripleSpeeder / bitcoin
  @tstranex tstranex / bitcoin
  @tt tt / bitcoin
  @tucenaber tucenaber / bitcoin
  @twobits twobits / bitcoin-2bit
  @tzuryby tzuryby / bitcoin
  @udibr udibr / bitcoin
    @joyesin joyesin / bitcoin
    @mrcraigo mrcraigo / bitcoin
  @umaar umaar / bitcoin
  @uncorr uncorr / bitcoin
  @upriser upriser / bitcoin
  @vapapav vapapav / bitcoin
  @vdt vdt / bitcoin
  @vegard vegard / bitcoin
  @vershinin vershinin / bitcoin
  @VijayPande VijayPande / bitcoin
  @vinced vinced / namecoin
    @angeliux07 angeliux07 / namecoin
    @bmwiedemann bmwiedemann / bitcoin
    @crackleware crackleware / namecoin
    @dmp1ce dmp1ce / namecoin
    @frabcus frabcus / namecoin
    @jeffayle jeffayle / namecoin
    @kacmem kacmem / namecoin
    @Krazy-Bish-Margie Krazy-Bish-Margie / namecoin
    @loreweaver loreweaver / namecoin
    @manveru manveru / namecoin
    @mincua mincua / namecoin
    @MobiusL MobiusL / namecoin
    @neuroplastic neuroplastic / namecoin
    @nikole70 nikole70 / namecoin
    @pandrax pandrax / namecoin
    @pvwoods pvwoods / namecoin
    @slush0 slush0 / namecoin
    @Tetsue Tetsue / namecoin
    @tomcss tomcss / namecoin
  @vipjeffreylee vipjeffreylee / bitcoin
  @VirtualDestructor VirtualDestructor / bitcoin-qt-i2p
    @lalejjla lalejjla / bitcoin-qt-i2p
  @vitotafuni vitotafuni / bitcoin
  @vizotov vizotov / bitcoin
  @vleschuk vleschuk / bitcoin
  @vobornik vobornik / bitcoin
  @voirgag voirgag / bitcoin
  @Wagnerp Wagnerp / bitcoin
  @wanggong wanggong / bitcoin
  @wclssdn wclssdn / bitcoin
  @wdmchaft wdmchaft / bitcoin
  @weavejester weavejester / bitcoin
  @weaverx9x9 weaverx9x9 / bitcoin
  @weex weex / bitcoin
  @wishlog wishlog / bitcoin
  @witkamp witkamp / bitcoin
  @wjx052333 wjx052333 / bitcoin
  @wolciph wolciph / bitcoin
  @wRothbard wRothbard / ThirdCoin
  @wtogami wtogami / bitcoin
  @wudu wudu / bitcoin
  @wynnej1983 wynnej1983 / bitcoin
  @xaoseric xaoseric / bitcoin
  @Xenland Xenland / bitcoin
  @xenonc xenonc / bitcoin
  @xenovyzarz xenovyzarz / bitcoin
  @xHire xHire / bitcoin
  @xiaobinliu xiaobinliu / bitcoin
  @xiaoyooo xiaoyooo / bitcoin
  @xiphias xiphias / bitcoin
  @xuXie xuXie / bitcoin
  @yikedz yikedz / bitcoin
  @yinyunqiao yinyunqiao / bitcoin
  @yonder yonder / bitcoin
  @YoshikuniJujo YoshikuniJujo / bitcoin
  @yuanda yuanda / bitcoin
  @yuliyang6 yuliyang6 / bitcoin-1
  @yupic yupic / bitcoin
  @yurgu yurgu / bitcoin
  @yx2zhang yx2zhang / bitcoin
  @zavidovych zavidovych / bitcoin
  @zcater zcater / bitcoin
  @zebedee52 zebedee52 / bitcoin
  @zechiel zechiel / bitcoin
  @Zeilap Zeilap / bitcoin
  @zeldovich zeldovich / bitcoin
  @zeonglow zeonglow / bitcoin
  @zerbie zerbie / bitcoin
  @zeroxbeef zeroxbeef / bitcoin
  @zetacoin zetacoin / zetacoin
    @joulecoin joulecoin / joulecoin
    @MichaelFX MichaelFX / zetacoin
    @moonshinekiller moonshinekiller / zetacoin
    @novaspirit novaspirit / zetacoin
    @PeanutPower PeanutPower / zetacoin
    @purekk purekk / zetacoin
    @skeincoin skeincoin / skeincoin
  @zew13 zew13 / bitcoin
  @zhhchen zhhchen / bitcoin
  @zinsword zinsword / bitcoin
  @znort987 znort987 / bitcoin
  @zooko zooko / bitcoin
  @zootreeves zootreeves / bitcoin
  @zozo123 zozo123 / bitcoin
  @zwmsin zwmsin / bitcoin
'input' = bitcoinmusic.info
</ContentCollection>
'MC$'
Musicore.exe_miner*html/file/doc.
<xcode:
test/functional/example_test.py
 @@ -111,7 +111,7 @@ def setup_network(self):
         # sync_all() should not include node2, since we're not expecting it to		         # sync_all() should not include node2, since we're not expecting it to
         # sync.		         # sync.
         connect_nodes(self.nodes[0], 1)		         connect_nodes(self.nodes[0], 1)
         self.sync_all([self.nodes[0:1]])		         self.sync_all([self.nodes[0:2]])
		
     # Use setup_nodes() to customize the node start behaviour (for example if		     # Use setup_nodes() to customize the node start behaviour (for example if
     # you don't want to start all nodes at the start of the test).		     # you don't want to start all nodes at the start of the test).
 @@ -135,7 +135,7 @@ def run_test(self):
		
         # Generating a block on one of the nodes will get us out of IBD		         # Generating a block on one of the nodes will get us out of IBD
         blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]		         blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]
         self.sync_all([self.nodes[0:1]])		         self.sync_all([self.nodes[0:2]])
		
         # Notice above how we called an RPC by calling a method with the same		         # Notice above how we called an RPC by calling a method with the same
         # name on the node object. Notice also how we used a keyword argument		         # name on the node object. Notice also how we used a keyword:BTC_MUSIC=MC

$_#!/usr/bin/env python3
# Copyright (c) 2017-2018 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
"""An example functional test
The module-level docstring should include a high-level description of
what the test is doing. It's the first thing people see when they open
the file and should give the reader information about *what* the test
is testing and *how* it's being tested
"""
# Imports should be in PEP8 ordering (std library first, then third party
# libraries then local imports).
from collections import defaultdict

# Avoid wildcard * imports if possible
from test_framework.blocktools import (create_block, create_coinbase)
from test_framework.messages import CInv
from test_framework.mininode import (
    P2PInterface,
    mininode_lock,
    msg_block,
    msg_getdata,
)
from test_framework.test_framework import BitcoinTestFramework
from test_framework.util import (
    assert_equal,
    connect_nodes,
    wait_until,
)

# P2PInterface is a class containing callbacks to be executed when a P2P
# message is received from the node-under-test. Subclass P2PInterface and
# override the on_*() methods if you need custom behaviour.
class BaseNode(P2PInterface):
    def __init__(self):
        """Initialize the P2PInterface
        Used to initialize custom properties for the Node that aren't
        included by default in the base class. Be aware that the P2PInterface
        base class already stores a counter for each P2P message type and the
        last received message of each type, which should be sufficient for the
        needs of most tests.
        Call super().__init__() first for standard initialization and then
        initialize custom properties."""
        super().__init__()
        # Stores a dictionary of all blocks received
        self.block_receive_map = defaultdict(int)

    def on_block(self, message):
        """Override the standard on_block callback
        Store the hash of a received block in the dictionary."""
        message.block.calc_sha256()
        self.block_receive_map[message.block.sha256] += 1

    def on_inv(self, message):
        """Override the standard on_inv callback"""
        pass

def custom_function():
    """Do some custom behaviour
    If this function is more generally useful for other tests, consider
    moving it to a module in test_framework."""
    # self.log.info("running custom_function")  # Oops! Can't run self.log outside the BitcoinTestFramework
    pass

class ExampleTest(BitcoinTestFramework):
    # Each functional test is a subclass of the BitcoinTestFramework class.

    # Override the set_test_params(), add_options(), setup_chain(), setup_network()
    # and setup_nodes() methods to customize the test setup as required.

    def set_test_params(self):
        """Override test parameters for your individual test.
        This method must be overridden and num_nodes must be explicitly set."""
        self.setup_clean_chain = True
        self.num_nodes = 3
        # Use self.extra_args to change command-line arguments for the nodes
        self.extra_args = [[], ["-logips"], []]

        # self.log.info("I've finished set_test_params")  # Oops! Can't run self.log before run_test()

    # Use add_options() to add specific command-line options for your test.
    # In practice this is not used very much, since the tests are mostly written
    # to be run in automated environments without command-line options.
    # def add_options()
    #     pass

    # Use setup_chain() to customize the node data directories. In practice
    # this is not used very much since the default behaviour is almost always
    # fine
    # def setup_chain():
    #     pass

    def setup_network(self):
        """Setup the test network topology
        Often you won't need to override this, since the standard network topology
        (linear: node0 <-> node1 <-> node2 <-> ...) is fine for most tests.
        If you do override this method, remember to start the nodes, assign
        them to self.nodes, connect them and then sync."""

        self.setup_nodes()

        # In this test, we're not connecting node2 to node0 or node1. Calls to
        # sync_all() should not include node2, since we're not expecting it to
        # sync.
        connect_nodes(self.nodes[0], 1)
        self.sync_all([self.nodes[0:2]])

    # Use setup_nodes() to customize the node start behaviour (for example if
    # you don't want to start all nodes at the start of the test).
    # def setup_nodes():
    #     pass

    def custom_method(self):
        """Do some custom behaviour for this test
        Define it in a method here because you're going to use it repeatedly.
        If you think it's useful in general, consider moving it to the base
        BitcoinTestFramework class so other tests can use it."""

        self.log.info("Running custom_method")

    def run_test(self):
        """Main test logic"""

        # Create P2P connections will wait for a verack to make sure the connection is fully up
        self.nodes[0].add_p2p_connection(BaseNode())

        # Generating a block on one of the nodes will get us out of IBD
        blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]
        self.sync_all([self.nodes[0:2]])

        # Notice above how we called an RPC by calling a method with the same
        # name on the node object. Notice also how we used a keyword argument
        # to specify a named RPC argument. Neither of those are defined on the
        # node object. Instead there's some __getattr__() magic going on under
        # the covers to dispatch unrecognised attribute calls to the RPC
        # interface.

        # Logs are nice. Do plenty of them. They can be used in place of comments for
        # breaking the test into sub-sections.
        self.log.info("Starting test!")

        self.log.info("Calling a custom function")
        custom_function()

        self.log.info("Calling a custom method")
        self.custom_method()

        self.log.info("Create some blocks")
        self.tip = int(self.nodes[0].getbestblockhash(), 16)
        self.block_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time'] + 1

        height = 1

        for i in range(10):
            # Use the mininode and blocktools functionality to manually build a block
            # Calling the generate() rpc is easier, but this allows us to exactly
            # control the blocks and transactions.
            block = create_block(self.tip, create_coinbase(height), self.block_time)
            block.solve()
            block_message = msg_block(block)
            # Send message is used to send a P2P message to the node over our P2PInterface
            self.nodes[0].p2p.send_message(block_message)
            self.tip = block.sha256
            blocks.append(self.tip)
            self.block_time += 1
            height += 1

        self.log.info("Wait for node1 to reach current tip (height 11) using RPC")
        self.nodes[1].waitforblockheight(11)

        self.log.info("Connect node2 and node1")
        connect_nodes(self.nodes[1], 2)

        self.log.info("Add P2P connection to node2")
        self.nodes[0].disconnect_p2ps()

        self.nodes[2].add_p2p_connection(BaseNode())

        self.log.info("Wait for node2 reach current tip. Test that it has propagated all the blocks to us")

        getdata_request = msg_getdata()
        for block in blocks:
            getdata_request.inv.append(CInv(2, block))
        self.nodes[2].p2p.send_message(getdata_request)

        # wait_until() will loop until a predicate condition is met. Use it to test properties of the
        # P2PInterface objects.
        wait_until(lambda: sorted(blocks) == sorted(list(self.nodes[2].p2p.block_receive_map.keys())), timeout=5, lock=mininode_lock)

        self.log.info("Check that each block was received only once")
        # The network thread uses a global lock on data access to the P2PConnection objects when sending and receiving
        # messages. The test thread should acquire the global lock before accessing any P2PConnection data to avoid locking
        # and synchronization issues. Note wait_until() acquires this global lock when testing the predicate.
        with mininode_lock:
            for block in self.nodes[2].p2p.block_receive_map.values():
                assert_equal(block, 1)

if __name__ == '__main__':;Merge #13917: Additional safety checks in PSBT signer

5df6f08 More tests of signer checks (Andrew Chow)
7c8bffd Test that a non-witness script as witness utxo is not signed (Andrew Chow)
8254e99 Additional sanity checks in SignPSBTInput (Pieter Wuille)
c05712c Only wipe wrong UTXO type data if overwritten by wallet (Pieter Wuille)

Pull request description:

  The current PSBT signing code can end up producing a non-segwit signature, while only the UTXO being spent is provided in the PSBT (as opposed to the entire transaction being 

spent). This may be used to trick a user to incorrectly decide a transaction has the semantics he intends to sign.

  Fix this by refusing to sign if there is any mismatch between the provided data and what is being signed.

Tree-SHA512: b55790d79d8166e05513fc4c603a982a33710e79dc3c045060cddac6b48a1be3a28ebf8db63f988b6567b15dd27fd09bbaf48846e323c8635376ac20178956f4
 2018-09-example-test-slice (#1) 2018-09-txrelay (#1)
@laanwj
laanwj committed on Aug 14 Verified
2 parents 3e5424f + 5df6f08 commit 63f8b0128b2aac3b25c6ec4d2f5bda213033162a
Unified Split
Showing  5 changed files  with 79 additions and 11 deletions.
View  
16  src/script/sign.cpp
 @@ -244,17 +244,33 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t
     input.FillSignatureData(sigdata);		     input.FillSignatureData(sigdata);
		
     // Get UTXO		     // Get UTXO
     bool require_witness_sig = false;
     CTxOut utxo;		     CTxOut utxo;
     if (input.non_witness_utxo) {		     if (input.non_witness_utxo) {
         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.
         if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;
         // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't
         // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both
         // can be present is when they're added simultaneously by FillPSBT (in which case they always match).
         // Still, check in order to not rely on callers to enforce this.
         if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;
         utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];		         utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];
     } else if (!input.witness_utxo.IsNull()) {		     } else if (!input.witness_utxo.IsNull()) {
         utxo = input.witness_utxo;		         utxo = input.witness_utxo;
         // When we're taking our information from a witness UTXO, we can't verify it is actually data from
         // the output being spent. This is safe in case a witness signature is produced (which includes this
         // information directly in the hash), but not for non-witness signatures. Remember that we require
         // a witness signature in this situation.
         require_witness_sig = true;
     } else {		     } else {
         return false;		         return false;
     }		     }
		
     MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);		     MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);
     sigdata.witness = false;
     bool sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, sigdata);		     bool sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, 

sigdata);
     // Verify that a witness signature was produced in case one was required.
     if (require_witness_sig && !sigdata.witness) return false;
     input.FromSignatureData(sigdata);		     input.FromSignatureData(sigdata);
     return sig_complete;		     return sig_complete;
 }		 }
View  
2  src/script/sign.h
 @@ -686,7 +686,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato
 bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);		

 bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);
 bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);		 bool 

SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);
		
 /** Signs a PSBTInput */		 /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */
 bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);		 bool 

SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);
		
 /** Extract signature data from a transaction input, and insert it. */		 /** Extract signature data from a transaction input, and insert it. */
View  
15  src/wallet/rpcwallet.cpp
 @@ -4504,10 +4504,11 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C
		
         // If we don't know about this input, skip it and let someone else deal with it		         // If we don't know about this input, skip it and let someone else deal with it
         const uint256& txhash = txin.prevout.hash;		         const uint256& txhash = txin.prevout.hash;
         const auto& it = pwallet->mapWallet.find(txhash);		         const auto it = pwallet->mapWallet.find(txhash);
         if (it != pwallet->mapWallet.end()) {		         if (it != pwallet->mapWallet.end()) {
             const CWalletTx& wtx = it->second;		             const CWalletTx& wtx = it->second;
             CTxOut utxo = wtx.tx->vout[txin.prevout.n];		             CTxOut utxo = wtx.tx->vout[txin.prevout.n];
             // Update both UTXOs from the wallet.
             input.non_witness_utxo = wtx.tx;		             input.non_witness_utxo = wtx.tx;
             input.witness_utxo = utxo;		             input.witness_utxo = utxo;
         }		         }
 @@ -4524,11 +4525,13 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C
             complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);		             complete &= SignPSBTInput

(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);
         }		         }
		
         // Drop the unnecessary UTXO		         if (it != pwallet->mapWallet.end()) {
         if (sigdata.witness) {		             // Drop the unnecessary UTXO if we added both from the wallet.
             input.non_witness_utxo = nullptr;		             if (sigdata.witness) {
         } else {		                 input.non_witness_utxo = nullptr;
             input.witness_utxo.SetNull();		             } else {
                 input.witness_utxo.SetNull();
             }
         }		         }
		
         // Get public key paths		         // Get public key paths
View  
51  test/functional/data/rpc_psbt.json

Load diff
Large diffs are not rendered by default.

View  
6  test/functional/rpc_psbt.py
 @@ -168,9 +168,11 @@ def run_test(self):
		
         # Signer tests		         # Signer tests
         for i, signer in enumerate(signers):		         for i, signer in enumerate(signers):
             self.nodes[2].createwallet("wallet{}".format(i))
             wrpc = self.nodes[2].get_wallet_rpc("wallet{}".format(i))
             for key in signer['privkeys']:		             for key in signer['privkeys']:
                 self.nodes[i].importprivkey(key)		                 wrpc.importprivkey(key)
             signed_tx = self.nodes[i].walletprocesspsbt(signer['psbt'])['psbt']		             signed_tx = wrpc.walletprocesspsbt(signer['psbt'])['psbt']
             assert_equal(signed_tx, signer['result'])		             assert_equal(signed_tx, signer['result'])
		
         # Combiner test		         # Combiner test
#Test().main(MC$)
Merge:$ ./bitcoin-cli createpsbt "[]" "[{\"$(./bitcoin-cli getnewaddress)\":0.01}]"
cHNidP8BACoCAAAAAAFAQg8AAAAAABepFG6Rty1Vk+fUOR4v9E6R6YXDFkHwhwAAAAAAAA==
$ ./bitcoin-cli decodepsbt cHNidP8BACoCAAAAAAFAQg8AAAAAABepFG6Rty1Vk+fUOR4v9E6R6YXDFkHwhwAAAAAAAA==
error code: -22
error message:
TX decode failed CDataStream::read(MC$):
open(L):   CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);		     CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, 

txCredit);
     CScriptWitness& witness = txSpend.vin[0].scriptWitness;		     CScriptWitness& witness = txSpend.vin[0].scriptWitness;
     witness.stack.emplace_back();		     witness.stack.emplace_back();
     key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back(), 0);		     key.Sign

(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());
     witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));		     witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));
     witness.stack.push_back(ToByteVector(pubkey));		     witness.stack.push_back(ToByteVector(pubkey));
		
  Show comments  View   
24  src/key.cpp
 @@ -189,15 +189,35 @@ CPubKey CKey::GetPubKey() const {
     return result;		     return result;
 }		 }
		
 bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_t test_case) const {		 // Check that the sig has a low R value and will be less than 71 bytes
 bool SigHasLowR(const secp256k1_ecdsa_signature* sig)
 {
     unsigned char compact_sig[64];
     secp256k1_ecdsa_signature_serialize_compact(secp256k1_context_sign, compact_sig, sig);

     // In DER serialization, all values are interpreted as big-endian, signed integers. The highest bit in the integer indicates
     // its signed-ness; 0 is positive, 1 is negative. When the value is interpreted as a negative integer, it must be converted
     // to a positive value by prepending a 0x00 byte so that the highest bit is 0. We can avoid this prepending by ensuring that
     // our highest bit is always 0, and thus we must check that the first byte is less than 0x80.
     return compact_sig[0] < 0x80;
 }

 bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, bool grind, uint32_t test_case) const {
     if (!fValid)		     if (!fValid)
         return false;		         return false;
     vchSig.resize(CPubKey::SIGNATURE_SIZE);		     vchSig.resize(CPubKey::SIGNATURE_SIZE);
     size_t nSigLen = CPubKey::SIGNATURE_SIZE;		     size_t nSigLen = CPubKey::SIGNATURE_SIZE;
     unsigned char extra_entropy[32] = {0};		     unsigned char extra_entropy[32] = {0};
     WriteLE32(extra_entropy, test_case);		     WriteLE32(extra_entropy, test_case);
     secp256k1_ecdsa_signature sig;		     secp256k1_ecdsa_signature sig;
     int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : nullptr);		     

uint32_t counter = 0;
     int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (!grind && test_case) ? extra_entropy : nullptr);

     // Grind for low R
     while (ret && !SigHasLowR(&sig) && grind) {
         WriteLE32(extra_entropy, ++counter);
         ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, extra_entropy);
     }
   @kallewoof
kallewoof on Aug 9  Member
Maybe overkill, but you could in theory do

while (secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (counter || (!grind && test_case)) ? extra_entropy : nullptr)
    && !SigHasLowR(&sig) && grind) {
    WriteLE32(extra_entropy, ++counter);
}
to replace

bitcoin/src/key.cpp

Lines 214 to 220 in 069c879

 int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (!grind && test_case) ? extra_entropy : nullptr); 
  
 // Grind for low R 
 while (ret && !SigHasLowR(&sig) && grind) { 
     WriteLE32(extra_entropy, ++counter); 
     ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, extra_entropy); 
 } 
   @achow101
achow101 on Aug 9  Member
I'd rather not. It's kind of hard to read (at least to me).

 @MassMason	Reply…
Start a new conversation
     assert(ret);		     assert(ret);
     secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, vchSig.data(), &nSigLen, &sig);		     secp256k1_ecdsa_signature_serialize_der

(secp256k1_context_sign, vchSig.data(), &nSigLen, &sig);
     vchSig.resize(nSigLen);		     vchSig.resize(nSigLen);
View   
2  src/key.h
 @@ -114,7 +114,7 @@ class CKey
      * Create a DER-serialized signature.		      * Create a DER-serialized signature.
      * The test_case parameter tweaks the deterministic nonce.		      * The test_case parameter tweaks the deterministic nonce.
      */		      */
     bool Sign(const uint256& hash, std::vector<unsigned char>& vchSig, uint32_t test_case = 0) const;		     bool Sign(const uint256& hash, std::vector<unsigned char>& 

vchSig, bool grind = true, uint32_t test_case = 0) const;
		
     /**		     /**
      * Create a compact signature (65 bytes), which allows reconstructing the used public key.		      * Create a compact signature (65 bytes), which allows 

reconstructing the used public key.
View   
22  src/script/sign.cpp
 @@ -417,22 +417,25 @@ class DummySignatureChecker final : public BaseSignatureChecker
 const DummySignatureChecker DUMMY_CHECKER;		 const DummySignatureChecker DUMMY_CHECKER;
		
 class DummySignatureCreator final : public BaseSignatureCreator {		 class DummySignatureCreator final : public BaseSignatureCreator {
 private:
     char m_r_len = 32;
     char m_s_len = 32;
 public:		 public:
     DummySignatureCreator() {}		     DummySignatureCreator(char r_len, char s_len) : m_r_len(r_len), m_s_len(s_len) {}
     const BaseSignatureChecker& Checker() const override { return DUMMY_CHECKER; }		     const BaseSignatureChecker& Checker() const override { return 

DUMMY_CHECKER; }
     bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const override	

	     bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const 

override
     {		     {
         // Create a dummy signature that is a valid DER-encoding		         // Create a dummy signature = Mass Mason
Copyrights - 1st@musician.org
SSH
GitHub Desktop - Acer-W8
Fingerprint: 17:f5:99:a1:d6:03:a9:1f:15:a5:3e:03:ef:32:d6:c0
Added on Apr 7, 2018 by GitHub for Windows
Never used — Read/write : BitcoinMusic
(musicore)
<xcode>
es (78 sloc)  3.82 KB
"""
.. module: hubcommander.auth_plugins.duo.plugin
    :platform: Unix
    :copyright: (c) 2017 by Netflix Inc., see AUTHORS for more
    :license: Apache, see LICENSE for more details.
.. moduleauthor:: Mike Grima <mgrima@netflix.com>
"""
import json

from duo_client.client import Client

from hubcommander.bot_components.bot_classes import BotAuthPlugin
from hubcommander.bot_components.slack_comm import send_info, send_error, send_success


class InvalidDuoResponseError(Exception):
    pass


class CantDuoUserError(Exception):
    pass


class NoSecretsProvidedError(Exception):
    pass


class DuoPlugin(BotAuthPlugin):
    def __init__(self):
        super().__init__()

        self.clients = {}

    def setup(self, secrets, **kwargs):
        for variable, secret in secrets.items():
            if "DUO_" in variable:
                domain, host, ikey, skey = secret.split(",")
                self.clients[domain] = Client(ikey, skey, host)

        if not len(self.clients):
            raise NoSecretsProvidedError("Must provide secrets to enable authentication.")

    def authenticate(self, data, user_data, **kwargs):
        # Which domain does this user belong to?
        domain = user_data["profile"]["email"].split("@")[1]
        if not self.clients.get(domain):
            send_error(data["channel"], "💀 @{}: Duo in this bot is not configured for the domain: `{}`. It needs "
                                        "to be configured for you to run this command."
                       .format(user_data["name"], domain), markdown=True, thread=data["ts"])
            return False

        send_info(data["channel"], "🎟 @{}: Sending a Duo notification to your device. You must approve!"
                  .format(user_data["name"]), markdown=True, ephemeral_user=user_data["id"])

        try:
            result = self._perform_auth(user_data, self.clients[domain])
        except InvalidDuoResponseError as idre:
            send_error(data["channel"], "💀 @{}: There was a problem communicating with Duo. Got this status: {}. "
                                        "Aborting..."
                       .format(user_data["name"], str(idre)), thread=data["ts"], markdown=True)
            return False

        except CantDuoUserError as _:
            send_error(data["channel"], "💀 @{}: I can't Duo authenticate you. Please consult with your identity team."
                                        " Aborting..."
                       .format(user_data["name"]), thread=data["ts"], markdown=True)
            return False

        except Exception as e:
            send_error(data["channel"], "💀 @{}: I encountered some issue with Duo... Here are the details: ```{}```"
                       .format(user_data["name"], str(e)), thread=data["ts"], markdown=True)
            return False

        if not result:
            send_error(data["channel"], "💀 @{}: Your Duo request was rejected. Aborting..."
                       .format(user_data["name"]), markdown=True, thread=data["ts"])
            return False

        # All Good:
        send_success(data["channel"], "🎸 @{}: Duo approved! Completing request..."
                     .format(user_data["name"]), markdown=True, ephemeral_user=user_data["id"])
        return True

    def _perform_auth(self, user_data, client):
        # Push to devices:
        duo_params = {
            "username": user_data["profile"]["email"],
            "factor": "push",
            "device": "auto"
        }
        response, data = client.api_call("POST", "/auth/v2/auth", duo_params)
        result = json.loads(data.decode("utf-8"))

        if response.status != 200:
            raise InvalidDuoResponseError(response.status)

        if result["stat"] != "OK":
            raise CantDuoUserError()

        if result["response"]["result"] == "allow":
            return True
Musicore.bot
'configure'
"""
ADD WHATEVER CODE YOU NEED TO DO HERE TO DECRYPT CREDENTIALS FOR USE OF YOUR BOT!
"""


def get_credentials():
    # Here is a KMS example: (uncomment to make work)
    # return kms_decrypt()

    # For Docker, encryption is assumed to be happening outside of this, and the secrets
    # are instead being passed in as environment variables:
    import os

    creds = {
        # Minimum
        "SLACK": os.environ["SLACK_TOKEN"],

        # Optional:
        "GITHUB": os.environ.get("GITHUB_TOKEN"),

        # These are named the same as the env var, but these are the env vars should you
        # want to leverage the feature:
        # "TRAVIS_PRO_USER": os.environ.get("TRAVIS_PRO_USER"),
        # "TRAVIS_PRO_ID": os.environ.get("TRAVIS_PRO_ID"),
        # "TRAVIS_PRO_TOKEN": os.environ.get("TRAVIS_PRO_TOKEN"),
        # "TRAVIS_PUBLIC_USER": os.environ.get("TRAVIS_PUBLIC_USER"),
        # "TRAVIS_PUBLIC_ID": os.environ.get("TRAVIS_PUBLIC_ID"),
        # "TRAVIS_PUBLIC_TOKEN": os.environ.get("TRAVIS_PUBLIC_TOKEN"),

        # DUO_...NAME_OF_DUO_CRED: "domain-that-is-duod.com,duo_host,duo_ikey,duo_skey"

        # ADD MORE HERE...
    }

    # Just adds the rest for freely-named ones (Like for Duo):
    for variable, value in os.environ.items():
        creds[variable] = value

    return creds


# def kms_decrypt():
#     """
#     This is a method to decrypt credentials utilizing on-instance credentials
#     for AWS KMS. Please review AWS documentation for details.
#
#     The secret should be a JSON blob of the secrets that are required.
#     :return: A Dict with the secrets in them.
#     """
#     import boto3
#     import base64
#     import json
#     from config import KMS_REGION, KMS_CIPHERTEXT
#
#     kms_client = boto3.client("kms", region_name=KMS_REGION)
#     decrypt_res = kms_client.decrypt(CiphertextBlob=bytes(base64.b64decode(KMS_CIPHERTEXT)))
#     return json.loads(decrypt_res["Plaintext"].decode("utf-8"))


"""
Sample KMS encryption:
--------------------
import boto3
import json
import base64
kms_client = boto3.client("kms", region_name=KMS_REGION)
account_id = "YOUR ACCOUNT ID HERE"
key_id = "YOUR KEY ID HERE"
kms_arn = "arn:aws:kms:{region}:{account_id}:key/{key_id}".format(region=KMS_REGION, account_id=account_id, key_id=key_id)
secrets_to_encrypt = {
    "SLACK": "SLACK TOKEN HERE",
    "GITHUB": "GITHUB TOKEN HERE",
    "TRAVIS_PRO_USER": "GitHub ID of GitHub account with access to Travis Pro",
    "TRAVIS_PRO_ID": "The ID of the Travis user. Use the Travis API to get this (for Pro)",
    "TRAVIS_PRO_TOKEN": "Use the Travis API to get the Travis token (for the Travis Pro account)",
    "TRAVIS_PUBLIC_USER": "GitHub ID of GitHub account with access to Travis Public",
    "TRAVIS_PUBLIC_ID": "The ID of the Travis user. Use the Travis API to get this (for Public)",
    "TRAVIS_PUBLIC_TOKEN": Use the Travis API to get the Travis token (for the Travis Public account)",
    "DUO_YOUR_DOMAIN": "your-domain-here.com,xxxxxxxx.duosecurity.com,THEDUOIKEY,THEDUOSKEY"
}
encrypt_res = kms_client.encrypt(KeyId=kms_arn, Plaintext=bytes(json.dumps(secrets_to_encrypt, indent=4), "utf-8"))
# Your results are:
print("The encrypted PTXT in B64:")
print(base64.b64encode(encrypt_res["CiphertextBlob"]).decode("utf-8"))
"""
?MC$
<xcode:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7702" systemVersion="14D136" targetRuntime="iOS.CocoaTouch" 

propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES">
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7701"/>
        <capability name="Constraints with non-1.0 multipliers" minToolsVersion="5.1"/>
    </dependencies>
    <objects>
        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
        <view contentMode="scaleToFill" id="iN0-l3-epB">
            <rect key="frame" x="0.0" y="0.0" width="480" height="480"/>
            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
            <subviews>
                <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Powered by 

React Native" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" minimumFontSize="9" translatesAutoresizingMaskIntoConstraints="NO" 

id="8ie-xW-0ye">
                    <rect key="frame" x="20" y="439" width="441" height="21"/>
                    <fontDescription key="fontDescription" type="system" pointSize="17"/>
                    <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                    <nil key="highlightedColor"/>
                </label>
                <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" 

text="ReactNativeMusic" textAlignment="center" lineBreakMode="middleTruncation" baselineAdjustment="alignBaselines" minimumFontSize="18" 

translatesAutoresizingMaskIntoConstraints="NO" id="kId-c2-rCX">
                    <rect key="frame" x="20" y="140" width="441" height="43"/>
                    <fontDescription key="fontDescription" type="boldSystem" pointSize="36"/>
                    <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                    <nil key="highlightedColor"/>
                </label>
            </subviews>
            <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
            <constraints>
                <constraint firstItem="kId-c2-rCX" firstAttribute="centerY" secondItem="iN0-l3-epB" secondAttribute="bottom" multiplier="1/3" constant="1" id="5cJ-9S-tgC"/>
                <constraint firstAttribute="centerX" secondItem="kId-c2-rCX" secondAttribute="centerX" id="Koa-jz-hwk"/>
                <constraint firstAttribute="bottom" secondItem="8ie-xW-0ye" secondAttribute="bottom" constant="20" id="Kzo-t9-V3l"/>
                <constraint firstItem="8ie-xW-0ye" firstAttribute="leading" secondItem="iN0-l3-epB" secondAttribute="leading" constant="20" symbolic="YES" id="MfP-vx-nX0"/>
                <constraint firstAttribute="centerX" secondItem="8ie-xW-0ye" secondAttribute="centerX" id="ZEH-qu-HZ9"/>
                <constraint firstItem="kId-c2-rCX" firstAttribute="leading" secondItem="iN0-l3-epB" secondAttribute="leading" constant="20" symbolic="YES" id="fvb-Df-36g"/>
            </constraints>
            <nil key="simulatedStatusBarMetrics"/>
            <freeformSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
            <point key="canvasLocation" x="548" y="455"/>
        =Added PULL_REQUEST.md template
Added ISSUE_TEMPLATE.md
why
Enforce consistency of PRs & Issues
 @osterman
Add PR template & Issue template
16e965c
 @osterman osterman requested a review from aknysh on Apr 5
osterman added some commits on Apr 5
 @osterman
Update ISSUE_TEMPLATE.md
Verified
5651a5f
 @osterman
Update PULL_REQUEST.md
Verified
b0ec79e
 @osterman
Update ISSUE_TEMPLATE.md
Verified
f6b94a9
 @osterman
Update PULL_REQUEST.md
Verified
f3bbb98
 @osterman osterman requested a review from goruha on Apr 5
@aknysh
aknysh approved these changes on Apr 5 View changes
View details @osterman osterman merged commit 3e97931 into master=MassMason (MC1)
    </objects>:connect@<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "0620"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
               BuildableName = "ReactNativeMusic.app"
               BlueprintName = "ReactNativeMusic"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "ReactNativeMusicTests.xctest"
               BlueprintName = "ReactNativeMusicTests"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      buildConfiguration = "Debug">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "ReactNativeMusicTests.xctest"
               BlueprintName = "ReactNativeMusicTests"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </TestAction>
   <LaunchAction
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      buildConfiguration = "Debug"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <AdditionalOptions>
      </AdditionalOptions>
   </LaunchAction>
   <ProfileAction
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      buildConfiguration = "Release"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
  ## what
* Describe the problem and how to reproduce it.
* Describe the feature request or enhancement.

## why
* Explain why this is a problem and what is the expected behavior.
* Explain why this feature request or enhancement is beneficial.= (MC$)
Musicore.exe
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
{
  "os": "linux",
  "env": "DOCKER_IMAGE_NAME=cloudposse/geodesic",
  "dist": "trusty",
  "sudo": "required",
  "group": "stable",
  "addons": {
    "apt": {
      "packages": [
        "git",
        "make",
        "curl"
      ]
    }
  },
  "script": [
    "make deps",
    "make lint",
    "make docker/build"
  ],
  "install": [
    "make init",
    "make travis/docker-login"
  ],
  "language": "ruby",
  "services": [
    "docker"
  ],
  "after_success": [
    "make travis/docker-tag-and-push"
  ]
}
</Scheme-MC$ (musicore) BTC_MUSIC_$_MUSICORE_MUSIC:APP.bot
<!---html---mineable content *API($) KEY FUNCTION = TRUE (always) if needed add : (MC$)
</document
© Musicore #MASSMASON - 1st@musician.org
Musicorems Deployment
PRE-RELEASING
Travis CI can automatically release your Ruby gem to RubyGems after a successful build.

For a minimal configuration, all you need to do is add the following to your .travis.yml:

deploy:
  provider: rubygems
  api_key: "YOUR API KEY"
YAML
Most likely you would only want to deploy to RubyGems when a new version of your package is cut. To do this, you can tell Travis CI to only deploy on tagged commits, like so:

deploy:
  provider: rubygems
  api_key: "YOUR API KEY"
  on:
    tags: true
YAML
If you tag a commit locally, remember to run git push --tags to ensure that your tags are uploaded to GitHub.

You can retrieve your api key by following these instructions. It is recommended to encrypt that key. Assuming you have the Travis CI command line client installed, you can do it like this:

travis encrypt --add deploy.api_key
Bash
You will be prompted to enter your api key on the command line.

You can also have the travis tool set up everything for you:

travis setup rubygems
Bash
Keep in mind that the above command has to run in your project directory, so it can modify the .travis.yml for you.

Pre-releasing #
Instead of releasing for each new version of your gem, you can have Travis CI create a prerelease for each build.

This gives your gem’s users the option to download a newer, possibly more unstable version of your gem.

To enable this, add the following line to your gemspec, underneath your existing version line:

s.version = "#{s.version}-alpha-#{ENV['TRAVIS_BUILD_NUMBER']}" if ENV['TRAVIS']
If your gem’s current version is 1.0.0, then Travis CI will create a prerelease with the version 1.0.0-alpha-20, where 20 is the build number.

Gem to release #
By default, we will try to release a gem by the same name as the repository. For example, if you release a gem from the GitHub repository travis-ci/travis-chat without explicitly specify the name of the application, Travis CI will try to release the gem named travis-chat.

You can explicitly set the name via the gem option:

deploy:
  provider: rubygems
  api_key: ...
  gem: my-gem-123
YAML
It is also possible to release different branches to different gems:

deploy:
  provider: rubygems
  api_key: ...
  gem:
    master: my-gem
    old: my-gem-old
YAML
If these gems belong to different RubyGems accounts, you will have to do the same for the API key:

deploy:
  provider: rubygems
  api_key:
    master: ...
    old: ...
  gem:
    master: my-gem
    old: my-gem-old
YAML
Gemspec to use #
If you like, you can specify can alternate option with the gemspec option:

deploy:
    provider: rubygems
    api_key: ...
    gemspec: my-gemspec.gemspec
YAML
Branch to release from #
If you have branch specific options, as shown above, Travis CI will automatically figure out which branches to release from. Otherwise, it will only release from your master branch.

You can also explicitly specify the branch to release from with the on option:

deploy:
  provider: rubygems
  api_key: ...
  on:
    branch: production
YAML
Alternatively, you can also configure it to release from all branches:

deploy:
  provider: rubygems
  api_key: ...
  on:
    all_branches: true
YAML
Builds triggered from Pull Requests will never trigger a release.

Releasing build artifacts #
After your tests ran and before the release, Travis CI will clean up any additional files and changes you made.

Maybe that is not what you want, as you might generate some artifacts that are supposed to be released, too. There is now an option to skip the clean up:

deploy:
  provider: rubygems
  api_key: ...
  skip_cleanup: true
YAML
Conditional releases #
You can deploy only when certain conditions are met. See Conditional Releases with on:.

Gem must be registered beforehand #
Note that the gem you upload must be registered beforehand. If the gem does not exist on the host to which it is uploaded, deployment will fail. See this GitHub issue for details.

Running commands before and after release #
Sometimes you want to run commands before or after releasing a gem. You can use the before_deploy and after_deploy stages for this. These will only be triggered if Travis CI is actually pushing a release.

before_deploy: "echo 'ready?'"
deploy:
  ..
after_deploy:
  - ./after_deploy_1.sh
  - ./after_deploy_2.sh
  - ./after_deploy_3.sha
'xcode' accessgranted.
'MUSIC' + ''BTC''
<xcode=true_html_BITCOIN_MUSIC ; (BTC_MC$)
MUSICORE
/***
pull request #2006 from diemmarkus/patch-1  …
Latest commit 32612a3  2 days ago
..		
anynines.md	Clean up anchors and link checking (#1986)	25 days ago
appfog.md	Clean up anchors and link checking (#1986)	25 days ago
atlas.md	Minor fixes for repeated words and subordinate that	6 months ago
azure-web-apps.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
bintray.md	Clean up anchors and link checking (#1986)	25 days ago
bitballoon.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
bluemixcloudfoundry.md	Clean up anchors and link checking (#1986)	25 days ago
boxfuse.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
catalyze.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
chefsupermarket.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
cloud66.md	Clean up anchors and link checking (#1986)	25 days ago
cloudfiles.md	Clean up anchors and link checking (#1986)	25 days ago
cloudfoundry.md	Clean up anchors and link checking (#1986)	25 days ago
codedeploy.md	Clean up anchors and link checking (#1986)	25 days ago
custom.md	Clean up anchors and link checking (#1986)	25 days ago
deis.md	Clean up anchors and link checking (#1986)	25 days ago
elasticbeanstalk.md	Clarified purpose of bucket_name field of EBS deploy section (#2007)	7 days ago
engineyard.md	Clean up anchors and link checking (#1986)	25 days ago
firebase.md	Update firebase.md to improve readability. (#1975)	a month ago
gcs.md	Clean up anchors and link checking (#1986)	25 days ago
google-app-engine.md	Update some examples after travis-ci/dpl#540 (#1906)	3 months ago
hackage.md	Clean up anchors and link checking (#1986)	25 days ago
heroku.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
lambda.md	Clean up anchors and link checking (#1986)	25 days ago
launchpad.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
npm.md	Clean up anchors and link checking (#1986)	25 days ago
openshift.md	Clean up anchors and link checking (#1986)	25 days ago
opsworks.md	Clean up anchors and link checking (#1986)	25 days ago
packagecloud.md	Clean up anchors and link checking (#1986)	25 days ago
pages.md	Clean up anchors and link checking (#1986)	25 days ago
puppetforge.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
pypi.md	Clean up anchors and link checking (#1986)	25 days ago
releases.md	Clean up anchors and link checking (#1986)	25 days ago
rubygems.md	Clean up anchors and link checking (#1986)	25 days ago
s3.md	Clean up anchors and link checking (#1986)	25 days ago
scalingo.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
script.md	Call custom scripts with bash	7 months ago
snaps.md	"snap export-login" renamed to "snapcraft"	10 days ago
surge.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
testfairy.md	Minor fixes for repeated words and subordinate that	6 months ago
'xcode'
<Musicore>
/***
new file: MusiCore/Launch.py  …

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 24, 2016
828343d 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
1cd0401 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
38c2267 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
9e82913 
Merge branch 'master' of https://github.com/gerosix/MusiCore

@gerosix
gerosix committed to gerosix/musicore on Mar 22, 2016
81af472 
Merge branch 'master' of https://github.com/gerosix/MusiCore

@gerosix
gerosix committed to gerosix/musicore on Mar 3, 2016
89d5028 
Merge branch 'master' of https://github.com/gerosix/MusiCore  …

@gerosix
gerosix committed to gerosix/musicore on Mar 23, 2016
981eb70 
Added: Plugin,  …

raztoki
raztoki committed to user135711/jdownloaderClient on Jul 23, 2015
f89c1a5 
Added: Plugin,  …

raztoki
raztoki committed to joaquinito01/jdownloader on Jul 23, 2015
8f8e6e3 
Added: Plugin,  …

raztoki
raztoki committed to jakop345/svn-svn.jdownloader.org-jdownloader-MyJDownloaderClient on Jul 23, 2015
f89c1a5
Added: Plugin,

- siteTesterDisabled, boolean to disable testclass
- siteSupportedNames, String[] to apply all supported domains, since they can be nested inside urls regex. This is required because aliased domains can share a single connection settings across all domains. But we need a way to test ALL supported domains.
- siteSupportedPath, allow you determine default path ontop of names, for when sites run multiple services (templates) on the same domain, and only URL path seperates. Default testing at this given time is done on base URL/siteSupportedNames entries
Fixed: creative.arte.tv_extern, added siteSupportedNames to correct bad names entry (old one needed for cross plugin plugin for untils). - testclass
Fixed: names entry typo - testclass
- faptasti.co
- beemp3s.org
- filesmonster.com (folder)
- ORFMediathekDecrypter
Added: siteTesterDisabled() = true to the following classes
- CNL
- DummyCNL
- GenericM3u8Decrypter
- MegaEncDecrypter
- DirectHttpCreatorDecrypter
Offline: DNS/parked/socket issues for over 2 weeks. - testclass
- bergfiles.com
- proxy.doujin.us
- adli.pw
- hulkshare.biz
- handsupbr.com
- url.bilgiportal.com
- unlimfiles.com
- h-url.in
- m4u.in
- telona.biz
- clubteam.eu
- yourfileplace.com
- aiotool.net
- top2tech.com
- zero10.net
- gamz.us
- dwmp3.com
- flacforthemasses.com
- free-way.me (container file and other mentions in other class)
- fufufuu.net
- filetobox.com
- uploadseeds.com
- 3ll3.in
- mirrorafile.com
- needmirror.com
- otr-drive.com
- tinymoviez.info
- pic4free.org
- imagecorn.com
- klipsiz.org
- miniurls.co
- musicore.net
- my-protect-links.com
- norapidsearch.com
- protect-links.com
- protegez-vos-liens.com
- umquetenha.org
- doujin.us
- urlite.com
- urlcini.com
- thnlnk.com
- micurl.com
- urlcantik.com
- likejav.com
- 0url.in
- realtgfporn.com
- a7layom.ta4a.info
- adsva.org
- cdn.muvdog.com
- darkme.net
- downloads.tinynhd.com
- download.tinymoviez.biz
- download.jegethy.com
- dwnlinks.com
- filedp.com
- movierulez.us
- one.gopmwd.com
- resumable-link.info
- safe.tres20kbps.com
- pucuk.tk
- seber-neko.net
- securelinking.tk
- shortadult.com
- sl.8x.biz
- thisdoesntexist.tk
- torlink.org
- sharephile.com|
- unextfiles.com
- zharabit.net
- turbobit.name
- turboblt.ru
- serien-blog.com
- uload.to
Fixed: shorte.st, general improvements


git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@31031 ebf7c1c2-ba36-0410-9fe8-c592906822b4

Former-commit-id: fb915bf8524b7a3d85a53930e32f067eaa387b0f
 master

input :  MusiCore/implements/Exportation.py
 @@ -3,28 +3,44 @@
		
		
 def m3u(loc, mat):		 def m3u(loc, mat):
     '''
     permet d'exporter la playlist sous le format m3u
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier m3u
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         pl = open(loc, "w")		         pl = open(loc, "w")#on créé le document .m3u
         pl.write("#EXTM3U")		         pl.write("#EXTM3U")
         resultat = mat		         resultat = mat
         for i in resultat:		         for i in resultat:#écriture du document
             pl.write("\n")		             pl.write("\n")
             pl.write(i)		             pl.write(i)
         pl.close()		         pl.close()
         os.system("touch save")		         os.system("touch save")#on enregistre le document
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save")
		
		
 def mp3(loc, mat):		 def mp3(loc, mat):
      '''
     permet d'exporter la playlist sous le format mp3
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier mp3
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         resultat = mat		         resultat = mat
         song = AudioSegment.from_mp3(resultat[0])		         song = AudioSegment.from_mp3(resultat[0])#on crée la playlist
         playlist = song		         playlist = song
         for i in range(1, len(resultat)):		         for i in range(1, len(resultat)):
             song = AudioSegment.from_mp3(resultat[i])		             song = AudioSegment.from_mp3(resultat[i])
             playlist = playlist.append(song, crossfade=(10 * 1000))		             playlist = playlist.append(song, crossfade=(10 * 1000))#on rajoute la chanson suivant en faisant un crossfade avec la précédente
         playlist = playlist.fade_out(10)		         playlist = playlist.fade_out(10)#on fini le m3p par un fade out
         out_f = open(loc, 'wb')		         out_f = open(loc, 'wb')
         playlist.export(out_f, format='mp3')		         playlist.export(out_f, format='mp3')#on exporte la playlist au dossier destination spécifié par l'utilisateur
         os.system("touch save")		         os.system("touch save")
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save") MusiCore/implements/Exportation.py
 @@ -3,28 +3,44 @@
		
		
 def m3u(loc, mat):		 def m3u(loc, mat):
     '''
     permet d'exporter la playlist sous le format m3u
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier m3u
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         pl = open(loc, "w")		         pl = open(loc, "w")#on créé le document .m3u
         pl.write("#EXTM3U")		         pl.write("#EXTM3U")
         resultat = mat		         resultat = mat
         for i in resultat:		         for i in resultat:#écriture du document
             pl.write("\n")		             pl.write("\n")
             pl.write(i)		             pl.write(i)
         pl.close()		         pl.close()
         os.system("touch save")		         os.system("touch save")#on enregistre le document
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save")
		
		
 def mp3(loc, mat):		 def mp3(loc, mat):
      '''
     permet d'exporter la playlist sous le format mp3
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier mp3
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         resultat = mat		         resultat = mat
         song = AudioSegment.from_mp3(resultat[0])		         song = AudioSegment.from_mp3(resultat[0])#on crée la playlist
         playlist = song		         playlist = song
         for i in range(1, len(resultat)):		         for i in range(1, len(resultat)):
             song = AudioSegment.from_mp3(resultat[i])		             song = AudioSegment.from_mp3(resultat[i])
             playlist = playlist.append(song, crossfade=(10 * 1000))		             playlist = playlist.append(song, crossfade=(10 * 1000))#on rajoute la chanson suivant en faisant un crossfade avec la précédente
         playlist = playlist.fade_out(10)		         playlist = playlist.fade_out(10)#on fini le m3p par un fade out
         out_f = open(loc, 'wb')		         out_f = open(loc, 'wb')
         playlist.export(out_f, format='mp3')		         playlist.export(out_f, format='mp3')#on exporte la playlist au dossier destination spécifié par l'utilisateur
         os.system("touch save")		         os.system("touch save")
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save"): MusiCore/implements/Exportation.py
 @@ -3,28 +3,44 @@
		
		
 def m3u(loc, mat):		 def m3u(loc, mat):
     '''
     permet d'exporter la playlist sous le format m3u
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier m3u
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         pl = open(loc, "w")		         pl = open(loc, "w")#on créé le document .m3u
         pl.write("#EXTM3U")		         pl.write("#EXTM3U")
         resultat = mat		         resultat = mat
         for i in resultat:		         for i in resultat:#écriture du document
             pl.write("\n")		             pl.write("\n")
             pl.write(i)		             pl.write(i)
         pl.close()		         pl.close()
         os.system("touch save")		         os.system("touch save")#on enregistre le document
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save")
		
		
 def mp3(loc, mat):		 def mp3(loc, mat):
      '''
     permet d'exporter la playlist sous le format mp3
     
     :param loc: location du dossier destination, choisi par l'utilisateur, du fichier mp3
     :param mat: liste contenant les emplacements des différentes chansons ordonnées
     :return: None
     '''
     
     if loc != " ":		     if loc != " ":
         resultat = mat		         resultat = mat
         song = AudioSegment.from_mp3(resultat[0])		         song = AudioSegment.from_mp3(resultat[0])#on crée la playlist
         playlist = song		         playlist = song
         for i in range(1, len(resultat)):		         for i in range(1, len(resultat)):
             song = AudioSegment.from_mp3(resultat[i])		             song = AudioSegment.from_mp3(resultat[i])
             playlist = playlist.append(song, crossfade=(10 * 1000))		             playlist = playlist.append(song, crossfade=(10 * 1000))#on rajoute la chanson suivant en faisant un crossfade avec la précédente
         playlist = playlist.fade_out(10)		         playlist = playlist.fade_out(10)#on fini le m3p par un fade out
         out_f = open(loc, 'wb')		         out_f = open(loc, 'wb')
         playlist.export(out_f, format='mp3')		         playlist.export(out_f, format='mp3')#on exporte la playlist au dossier destination spécifié par l'utilisateur
         os.system("touch save")		         os.system("touch save")
         os.system("echo " + loc + ">save")		         os.system("echo " + loc + ">save");#!/usr/bin/env python
#import:<div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" class="musicore' class="render-shell js-render-shell"&gt;
    
<div class="pdf-container loaded" data-file="https://raw.githubusercontent.com/gerosix/musicore/22fc3f203af1881bcce71b34e99b265935212aac/Soutenance/Rapport_Final.pdf" data-worker="/assets/pdf/worker-de03a6262fe73d7da5661d85cbb46962.js" data-bcmap-dir="https://render.githubusercontent.com/pdf/">
<canvas class="pdf-page" data-page="0" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="1" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="2" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="3" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="4" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="5" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="6" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="7" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="8" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="9" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="10" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="11" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="12" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="13" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="14" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="15" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="16" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="17" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="18" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="19" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="20" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="21" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="22" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="23" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="24" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="25" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="26" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="27" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="28" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="29" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="30" height="2830" width="2000"></canvas><canvas class="pdf-page" data-page="31" height="2830" width="2000"></canvas></div>

<div id="js-click-for-more" class="click-for-more" style="display:true-preview-autoplay"</***
<xcode>
  <button class="button">More Pages</button>
  <div class="spinner"><img src="../pdf/spinner.gif" alt="Loading more pages"></div>
from distutils.core import setup

setup(
  name='musicore',
  packages=['musicore'],  # this must be the same as the name above
  version='0.5',
  description='A audio analysis application',
  author='Aurelien BETTINI' + MASSMASOM : (MC1)
  author_email='gerox@minet.net',
  url='https://github.com/gerosix/MusiCore',
  download_url='https://github.com/gerosix/MusiCore',  # I'll explain this in a second
  # keywords = ['testing', 'logging', 'example'], # arbitrary keywords
  classifiers=[MC$],
  install_requires=[
    'samplerate',
    'numpy',
    'scipy',
    'librosa'
  ]
)
</divine:add@# Sphinx documentation
BDDMusic

  </div>
 ###Importation des dépendances
 from pydub import AudioSegment

 ###Importation des. : musicore/Soutenance/Rapport_Final.pdf
443a3d5  on May 24, 2016
@gerosix gerosix soutenancel
1 contributor
# Build and Release Folders
bin-debug/
bin-release/
[Oo]bj/
[Bb]in/

# Other files and folders
.settings/

# Executables
*.swf
*.air
*.ipa
*.apk

# Project files, i.e. `.project`, `.actionScriptProperties` and `.flexProperties`
# should NOT be excluded as they contain compiler settings and other important
# information for Eclipse / Flash Builder.
Download (MC$) musicore.exe
 import implements.UI
"""
.. module: hubcommander.bot_components.bot_classes
    :platform: Unix
    :copyright: (c) 2017 by Netflix Inc., see AUTHORS for more
    :license: Apache, see LICENSE for more details.
.. moduleauthor:: Mike Grima <mgrima@netflix.com>
"""


class BotPlugin:
    def __init__(self):
        pass

    def setup(self, secrets, **kwargs):
        raise NotImplementedError()


class BotCommander(BotPlugin):
    def __init__(self):
        super().__init__()
        self.commands = {}

    def setup(self, secrets, **kwargs):
        pass


class BotAuthPlugin(BotPlugin):
    def __init__(self):
        super().__init__()

    def setup(self, secrets, **kwargs):
        pass

    def authenticate(self, *args, **kwargs):
        raise NotImplementedError(Musicore);G([--enable-asm],
  [Enable assembly routines (default is yes)])],
  [use_asm=$enableval],
  [use_asm=yes])

if test "x$use_asm" = xyes; then
  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])
fi

AC_ARG_WITH([system-univalue],
  [AS_HELP_STRING([--with-system-univalue],
  [Build with system UniValue (default is no)])],
  [system_univalue=$withval],
  [system_univalue=no]
)
AC_ARG_ENABLE([zmq],
  [AS_HELP_STRING([--disable-zmq],
  [disable ZMQ notifications])],
  [use_zmq=$enableval],
  [use_zmq=yes])

AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])

AC_ARG_ENABLE(man,
    [AS_HELP_STRING([--disable-man],
                    [do not install man pages (default is to install)])],,
    enable_man=yes)
AM_CONDITIONAL(ENABLE_MAN, test "$enable_man" != no)

# Enable debug
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
                    [use debug compiler flags and macros (default is no)])],
    [enable_debug=$enableval],
    [enable_debug=no])

# Enable different -fsanitize options
AC_ARG_WITH([sanitizers],
    [AS_HELP_STRING([--with-sanitizers],
                    [comma separated list of extra sanitizers to build with (default is none enabled)])],
    [use_sanitizers=$withval])

# Enable gprof profiling
AC_ARG_ENABLE([gprof],
    [AS_HELP_STRING([--enable-gprof],
                    [use gprof profiling compiler flags (default is no)])],
    [enable_gprof=$enableval],
    [enable_gprof=no])

# Turn warnings into errors
AC_ARG_ENABLE([werror],
    [AS_HELP_STRING([--enable-werror],
                    [Treat certain compiler warnings as errors (default is no)])],
    [enable_werror=$enableval],
    [enable_werror=no])

AC_LANG_PUSH([C++])
AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR="-Werror"],[CXXFLAG_WERROR=""])

if test "x$enable_debug" = xyes; then
  # Clear default -g -O2 flags
  if test "x$CXXFLAGS_overridden" = xno; then
	CXXFLAGS=""
  fi
#hi-fi:Just-Some-Bots/MusicBot
musical_note The original MusicBot for Discord (formerly SexualRhinoceros/MusicBot)
python
discord
musicbot
MIT license

Updated 9 hours ago

 Python
 1.6k
maicong/music
音乐搜索器 - 多站合一音乐搜索解决方案
music
music-search
music-bot
MIT license

Updated on Jun 11

 PHP
 645
aspnet/MusicStore
MusicStore test application that uses ASP.NET/EF Core
aspnet-product
Updated 4 days ago

 C#
 1.3k
darknessomi/musicbox
网易云音乐命令行版本
python
music
linux
netease-musicbox
MIT license

Updated 10 days ago

4 issues need help
 Python
 6.4k
harjot-oberai/MusicDNA
A Music Player for android that renders beautiful DNA(Visualization) of the currently playing music.
android
music-player
soundcloud
visualizer
Updated 3 days ago

3 issues need help
 Java
 2.4k
naman14/Timber
Material Design Music Player
android
music-player
material-design
Updated on Jul 10

 Java
 5.1k
googlesamples/android-UniversalMusicPlayer
This sample shows how to implement an audio media app that works across multiple form factors and provide a consisten…
Apache-2.0 license

Updated 16 days ago

 Kotlin
 10.2k
owncloud/music
notes Music app for ownCloud
AGPL-3.0 license

Updated 2 days ago

 JavaScript
 251
Fyus1201/music
iOS音乐播放器，采用喜马拉雅api，使用AVPlayer完成，支持后台，收藏，播放记录
Updated on Apr 3, 2017

 Objective-C
 294
bluetomlee/NetEase-MusicBox
网易云音乐命令行版本，排行榜，搜索，精选歌单，登录，DJ节目，快速打碟，本地收藏歌单
MIT license

Updated on Nov 21, 2015

 Python
 742:Repositories118K
Code34M
Commits1M
Issues208K
Marketplace
Topics574
Wikis26K
Users11K
Languages
20,404 JavaScript
16,364 Java
10,257 Python
6,050 HTML
3,864 Ruby
3,620 C#
3,420 CSS
2,720 PHP
2,383 C++
2,175 Vue
Advanced search Cheat sheet
Showing 106,901 available repository results 
Sort: Best match 
Jasonnor/th-music-video-generator
Touhou Project random music video generator/player, crawling image and video from websites to generate MV. (WIP)
javascript
music-video
touhou
Apache-2.0 license

Updated 3 days ago

 JavaScript
 74
burnson/belle
Belle, Bonne, Sage — music notation
Updated on Aug 12

 C++
 37
AntonioND/gbt-player
A music player library for Game Boy.
assembly
c
tracker
gameboy
demoscene
developer-tools
assembly-language
BSD-2-Clause license

Updated on Jan 30

 Assembly
 66
elieserdejesus/JamTaba
Jamtaba is a software to play online music jam sessions.
music
qt
midi
jam
ninjam
music-collaboration
vst
audio-unit
Updated 18 days ago

 C++
 37
ee0703/SimpleSheetMusic.js
Simple player that use pure javascript to play sheet music
MIT license

Updated on Dec 19, 2014

 JavaScript
 32
rbackhouse/Music-Server
Java/JavaScript based Music Server supporting remote control and streaming of MP3 and FLAC files
Updated on Dec 1, 2012

 Java
 14
lnmcc/musicPlayer
simple music player With FFMPEG & SDL
Updated on Mar 18, 2013

 C
 9
htqqdd/music_player
My first android application
OSL-3.0 license

Updated on Feb 21

 Java
 26
jiexunsee/rudimentary-ai-composer
A very basic LSTM composer, doesn't compose any proper music for now
Updated on Mar 17, 2017

 Python
 77
nhayflick/ReactNativeMusic
Build an iOS music player with React Native and the SoundCloud API!
Updated on Jun 3, 2015

 JavaScript
 32


input : 
#include <bench/bench.h>
#include <key.h>
#if defined(HAVE_CONSENSUS_LIB)
#include <script/bitcoinconsensus.h>
#endif
#include <script/script.h>
#include <script/sign.h>
#include <script/standard.h>
#include <streams.h>

#include <array>

// FIXME: Dedup with BuildCreditingTransaction in test/script_tests.cpp.
static CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey)
{
    CMutableTransaction txCredit;
    txCredit.nVersion = 1;
    txCredit.nLockTime = 0;
    txCredit.vin.resize(1);
    txCredit.vout.resize(1);
    txCredit.vin[0].prevout.SetNull();
    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);
    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;
    txCredit.vout[0].scriptPubKey = scriptPubKey;
    txCredit.vout[0].nValue = 1;

    return txCredit;
}

// FIXME: Dedup with BuildSpendingTransaction in test/script_tests.cpp.
static CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMutableTransaction& txCredit)
{
    CMutableTransaction txSpend;
    txSpend.nVersion = 1;
    txSpend.nLockTime = 0;
    txSpend.vin.resize(1);
    txSpend.vout.resize(1);
    txSpend.vin[0].prevout.hash = txCredit.GetHash();
    txSpend.vin[0].prevout.n = 0;
    txSpend.vin[0].scriptSig = scriptSig;
    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;
    txSpend.vout[0].scriptPubKey = CScript();
    txSpend.vout[0].nValue = txCredit.vout[0].nValue;

    return txSpend;
}

// Microbenchmark for verification of a basic P2WPKH script. Can be easily
// modified to measure performance of other types of scripts.
static void VerifyScriptBench(benchmark::State& state)
{
    const int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;
    const int witnessversion = 0;

    // Keypair.
    CKey key;
    static const std::array<unsigned char, 32> vchKey = {
        {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
        }
    };
    key.Set(vchKey.begin(), vchKey.end(), false);
    CPubKey pubkey = key.GetPubKey();
    uint160 pubkeyHash;
    CHash160().Write(pubkey.begin(), pubkey.size()).Finalize(pubkeyHash.begin());

    // Script.
    CScript scriptPubKey = CScript() << witnessversion << ToByteVector(pubkeyHash);
    CScript scriptSig;
    CScript witScriptPubkey = CScript() << OP_DUP << OP_HASH160 << ToByteVector(pubkeyHash) << OP_EQUALVERIFY << OP_CHECKSIG;
    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey);
    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);
    CScriptWitness& witness = txSpend.vin[0].scriptWitness;
    witness.stack.emplace_back();
    key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());
    witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));
    witness.stack.push_back(ToByteVector(pubkey));

    // Benchmark.
    while (state.KeepRunning()) {
        ScriptError err;
        bool success = VerifyScript(
            txSpend.vin[0].scriptSig,
            txCredit.vout[0].scriptPubKey,
            &txSpend.vin[0].scriptWitness,
            flags,
            MutableTransactionSignatureChecker(&txSpend, 0, txCredit.vout[0].nValue),
            &err);
        assert(err == SCRIPT_ERR_OK);
        assert(success);

#if defined(HAVE_CONSENSUS_LIB)
        CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);
        stream << txSpend;
        int csuccess = bitcoinconsensus_verify_script_with_amount(
            txCredit.vout[0].scriptPubKey.data(),
            txCredit.vout[0].scriptPubKey.size(),
            txCredit.vout[0].nValue,
            (const unsigned char*)stream.data(), stream.size(), 0, flags, nullptr);
        assert(csuccess == 1);
#endif
    }
}

BENCHMARK(VerifyScriptBench, 6300);
Miner:musicore.exe:
Re: Cryptonote @musicore
dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)
AC_PREREQ([2.60])
define(_CLIENT_VERSION_MAJOR, 0)
define(_CLIENT_VERSION_MINOR, 17)
define(_CLIENT_VERSION_REVISION, 0)
define(_CLIENT_VERSION_BUILD, 0)
define(_CLIENT_VERSION_IS_RELEASE, true)
define(_COPYRIGHT_YEAR, 2018)
define(_COPYRIGHT_HOLDERS,[The %s developers])
define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])
AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],

[https://bitcoincore.org/])
AC_CONFIG_SRCDIR([src/validation.cpp])
AC_CONFIG_HEADERS([src/config/bitcoin-config.h])
AC_CONFIG_AUX_DIR([build-aux])
AC_CONFIG_MACRO_DIR([build-aux/m4])

BITCOIN_DAEMON_NAME=bitcoind
BITCOIN_GUI_NAME=bitcoin-qt
BITCOIN_CLI_NAME=bitcoin-cli
BITCOIN_TX_NAME=bitcoin-tx

dnl Unless the user specified ARFLAGS, force it to be cr
AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])
if test "x${ARFLAGS+set}" != "xset"; then
  ARFLAGS="cr"
fi

AC_CANONICAL_HOST

AH_TOP([#ifndef BITCOIN_CONFIG_H])
AH_TOP([#define BITCOIN_CONFIG_H])
AH_BOTTOM([#endif //BITCOIN_CONFIG_H])

dnl faketime breaks configure and is only needed for make. Disable it here.
unset FAKETIME

dnl Automake init set-up and checks
AM_INIT_AUTOMAKE([no-define subdir-objects foreign])

dnl faketime messes with timestamps and causes configure to be re-run.
dnl --disable-maintainer-mode can be used to bypass this.
AM_MAINTAINER_MODE([enable])

dnl make the compilation flags quiet unless V=1 is used
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl Compiler checks (here before libtool).
if test "x${CXXFLAGS+set}" = "xset"; then
  CXXFLAGS_overridden=yes
else
  CXXFLAGS_overridden=no
fi
AC_PROG_CXX

dnl By default, libtool for mingw refuses to link static libs into a dll for
dnl fear of mixing pic/non-pic objects, and import/export complications. Since
dnl we have those under control, re-enable that functionality.
case $host in
  *mingw*)
     lt_cv_deplibs_check_method="pass_all"
  ;;
esac
dnl Require C++11 compiler (no GNU extensions)
AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])
dnl Check if -latomic is required for <std::atomic>
CHECK_ATOMIC

dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures
dnl that we get the same -std flags for both.
m4_ifdef([AC_PROG_OBJCXX],[
if test "x${OBJCXX+set}" = "x"; then
  OBJCXX="${CXX}"
fi
AC_PROG_OBJCXX
])

dnl Libtool init checks.
LT_INIT([pic-only])

dnl Check/return PATH for base programs.
AC_PATH_TOOL(AR, ar)
AC_PATH_TOOL(RANLIB, ranlib)
AC_PATH_TOOL(STRIP, strip)
AC_PATH_TOOL(GCOV, gcov)
AC_PATH_PROG(LCOV, lcov)
dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)
AC_PATH_PROGS([PYTHON], [python3.7 python3.6 python3.5 python3.4 python3 python])
AC_PATH_PROG(GENHTML, genhtml)
AC_PATH_PROG([GIT], [git])
AC_PATH_PROG(CCACHE,ccache)
AC_PATH_PROG(XGETTEXT,xgettext)
AC_PATH_PROG(HEXDUMP,hexdump)
AC_PATH_TOOL(READELF, readelf)
AC_PATH_TOOL(CPPFILT, c++filt)
AC_PATH_TOOL(OBJCOPY, objcopy)
AC_PATH_PROG(DOXYGEN, doxygen)
if test -z "$DOXYGEN"; then
   AC_MSG_WARN([Doxygen not found])
fi
AM_CONDITIONAL([HAVE_DOXYGEN], [test -n "$DOXYGEN"])

AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)

# Enable wallet
AC_ARG_ENABLE([wallet],
  [AS_HELP_STRING([--disable-wallet],
  [disable wallet (enabled by default)])],
  [enable_wallet=$enableval],
  [enable_wallet=yes])

AC_ARG_WITH([miniupnpc],
  [AS_HELP_STRING([--with-miniupnpc],
  [enable UPNP (default is yes if libminiupnpc is found)])],
  [use_upnp=$withval],
  [use_upnp=auto])

AC_ARG_ENABLE([upnp-default],
  [AS_HELP_STRING([--enable-upnp-default],
  [if UPNP is enabled, turn it on at startup (default is no)])],
  [use_upnp_default=$enableval],
  [use_upnp_default=no])

AC_ARG_ENABLE(tests,
    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),
    [use_tests=$enableval],
    [use_tests=yes])

AC_ARG_ENABLE(gui-tests,
    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),
    [use_gui_tests=$enableval],
    [use_gui_tests=$use_tests])

AC_ARG_ENABLE(bench,
    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),
    [use_bench=$enableval],
    [use_bench=yes])

AC_ARG_ENABLE([extended-functional-tests],
    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),
    [use_extended_functional_tests=$enableval],
    [use_extended_functional_tests=no])

AC_ARG_WITH([qrencode],
  [AS_HELP_STRING([--with-qrencode],
  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],
  [use_qr=$withval],
  [use_qr=auto])

AC_ARG_ENABLE([hardening],
  [AS_HELP_STRING([--disable-hardening],
  [do not attempt to harden the resulting executables (default is to harden when possible)])],
  [use_hardening=$enableval],
  [use_hardening=auto])

AC_ARG_ENABLE([reduce-exports],
  [AS_HELP_STRING([--enable-reduce-exports],
  [attempt to reduce exported symbols in the resulting executables (default is no)])],
  [use_reduce_exports=$enableval],
  [use_reduce_exports=no])

AC_ARG_ENABLE([ccache],
  [AS_HELP_STRING([--disable-ccache],
  [do not use ccache for building (default is to use if found)])],
  [use_ccache=$enableval],
  [use_ccache=auto])

AC_ARG_ENABLE([lcov],
  [AS_HELP_STRING([--enable-lcov],
  [enable lcov testing (default is no)])],
  [use_lcov=$enableval],
  [use_lcov=no])

AC_ARG_ENABLE([lcov-branch-coverage],
  [AS_HELP_STRING([--enable-lcov-branch-coverage],
  [enable lcov testing branch coverage (default is no)])],
  [use_lcov_branch=yes],
  [use_lcov_branch=no])

AC_ARG_ENABLE([glibc-back-compat],
  [AS_HELP_STRING([--enable-glibc-back-compat],
  [enable backwards compatibility with glibc])],
  [use_glibc_compat=$enableval],
  [use_glibc_compat=no])

AC_ARG_ENABLE([asm],
  [AS_HELP_STRING([--enable-asm],
  [Enable assembly routines (default is yes)])],
  [use_asm=$enableval],
  [use_asm=yes])

if test "x$use_asm" = xyes; then
  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])
fi

AC_ARG_WITH([system-univalue],
  [AS_HELP_STRING([--with-system-univalue],
  [Build with system UniValue (default is no)])],
  [system_univalue=$withval],
  [system_univalue=no]
)
AC_ARG_ENABLE([zmq],
  [AS_HELP_STRING([--disable-zmq],
  [disable ZMQ notifications])],
  [use_zmq=$enableval],
  [use_zmq=yes])

AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])

AC_ARG_ENABLE(man,
    [AS_HELP_STRING([--disable-man],
                    [do not install man pages (default is to install)])],,
    enable_man=yes)
AM_CONDITIONAL(ENABLE_MAN, test "$enable_man" != no)

# Enable debug
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
                    [use debug compiler flags and macros (default is no)])],
    [enable_debug=$enableval],
    [enable_debug=no])

# Enable different -fsanitize options
AC_ARG_WITH([sanitizers],
    [AS_HELP_STRING([--with-sanitizers],
                    [comma separated list of extra sanitizers to build with (default is none enabled)])],
    [use_sanitizers=$withval])

# Enable gprof profiling
AC_ARG_ENABLE([gprof],
    [AS_HELP_STRING([--enable-gprof],
                    [use gprof profiling compiler flags (default is no)])],
    [enable_gprof=$enableval],
    [enable_gprof=no])

# Turn warnings into errors
AC_ARG_ENABLE([werror],
    [AS_HELP_STRING([--enable-werror],
                    [Treat certain compiler warnings as errors (default is no)])],
    [enable_werror=$enableval],
    [enable_werror=no])

AC_LANG_PUSH([C++])
AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR="-Werror"],[CXXFLAG_WERROR=""])

if test "x$enable_debug" = xyes; then
  # Clear default -g -O2 flags
  if test "x$CXXFLAGS_overridden" = xno; then
	CXXFLAGS=""
  fi
  # Prefer -Og, fall back to -O0 if that is unavailable.
  AX_CHECK_COMPILE_FLAG(
    [-Og],
    [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -Og"]],
    [AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -O0"]],,[[$CXXFLAG_WERROR]])],
    [[$CXXFLAG_WERROR]])

  # Prefer -g3, fall back to -g if that is unavailable.
  AX_CHECK_COMPILE_FLAG(
    [-g3],
    [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g3"]],
    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g"]],,[[$CXXFLAG_WERROR]])],
    [[$CXXFLAG_WERROR]])

  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG"]],,[[$CXXFLAG_WERROR]])
  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER"]],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -ftrapv"],,[[$CXXFLAG_WERROR]])
fi

if test x$use_sanitizers != x; then
  # First check if the compiler accepts flags. If an incompatible pair like
  # -fsanitize=address,thread is used here, this check will fail. This will also
  # fail if a bad argument is passed, e.g. -fsanitize=undfeined
  AX_CHECK_COMPILE_FLAG(
    [[-fsanitize=$use_sanitizers]],
    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],
    [AC_MSG_ERROR([compiler did not accept requested flags])])

  # Some compilers (e.g. GCC) require additional libraries like libasan,
  # libtsan, libubsan, etc. Make sure linking still works with the sanitize
  # flag. This is a separate check so we can give a better error message when
  # the sanitize flags are supported by the compiler but the actual sanitizer
  # libs are missing.
  AX_CHECK_LINK_FLAG(
    [[-fsanitize=$use_sanitizers]],
    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],
    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])
fi

ERROR_CXXFLAGS=
if test "x$enable_werror" = "xyes"; then
  if test "x$CXXFLAG_WERROR" = "x"; then
    AC_MSG_ERROR("enable-werror set but -Werror is not usable")
  fi
  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=vla"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=thread-safety-analysis"],,[[$CXXFLAG_WERROR]])
fi

if test "x$CXXFLAGS_overridden" = "xno"; then
  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wextra"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wvla"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat-security"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wthread-safety-analysis"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS="$WARN_CXXFLAGS -Wrange-loop-analysis"],,[[$CXXFLAG_WERROR]])

  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all
  ## unknown options if any other warning is produced. Test the -Wfoo case, and
  ## set the -Wno-foo case if it works.
  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-parameter"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-self-assign"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-local-typedef"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-deprecated-register"],,[[$CXXFLAG_WERROR]])
  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-implicit-fallthrough"],,[[$CXXFLAG_WERROR]])
fi

# Check for optional instruction set support. Enabling these does _not_ imply that all code will
# be compiled with them, rather that specific objects/libs may use them after checking for runtime
# compatibility.
AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS="-msse4.2"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS="-msse4.1"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS="-mavx -mavx2"]],,[[$CXXFLAG_WERROR]])
AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS="-msse4 -msha"]],,[[$CXXFLAG_WERROR]])

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SSE42_CXXFLAGS"
AC_MSG_CHECKING(for assembler crc32 support)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #if defined(_MSC_VER)
    #include <intrin.h>
    #elif defined(__GNUC__) && defined(__SSE4_2__)
    #include <nmmintrin.h>
    #endif
  ]],[[
    uint64_t l = 0;
    l = _mm_crc32_u8(l, 0);
    l = _mm_crc32_u32(l, 0);
    l = _mm_crc32_u64(l, 0);
    return l;
  ]])],
 [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SSE41_CXXFLAGS"
AC_MSG_CHECKING(for SSE4.1 intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m128i l = _mm_set1_epi32(0);
    return _mm_extract_epi32(l, 3);
  ]])],
 [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $AVX2_CXXFLAGS"
AC_MSG_CHECKING(for AVX2 intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m256i l = _mm256_set1_epi32(0);
    return _mm256_extract_epi32(l, 7);
  ]])],
 [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

TEMP_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $SHANI_CXXFLAGS"
AC_MSG_CHECKING(for SHA-NI intrinsics)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    #include <stdint.h>
    #include <immintrin.h>
  ]],[[
    __m128i i = _mm_set1_epi32(0);
    __m128i j = _mm_set1_epi32(1);
    __m128i k = _mm_set1_epi32(2);
    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);
  ]])],
 [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],
 [ AC_MSG_RESULT(no)]
)
CXXFLAGS="$TEMP_CXXFLAGS"

CPPFLAGS="$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS"

AC_ARG_WITH([utils],
  [AS_HELP_STRING([--with-utils],
  [build bitcoin-cli bitcoin-tx (default=yes)])],
  [build_bitcoin_utils=$withval],
  [build_bitcoin_utils=yes])

AC_ARG_WITH([libs],
  [AS_HELP_STRING([--with-libs],
  [build libraries (default=yes)])],
  [build_bitcoin_libs=$withval],
  [build_bitcoin_libs=yes])

AC_ARG_WITH([daemon],
  [AS_HELP_STRING([--with-daemon],
  [build bitcoind daemon (default=yes)])],
  [build_bitcoind=$withval],
  [build_bitcoind=yes])

use_pkgconfig=yes
case $host in
  *mingw*)

     #pkgconfig does more harm than good with MinGW
     use_pkgconfig=no

     TARGET_OS=windows
     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(libmingwthrd missing))
     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(libkernel32 missing))
     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(libuser32 missing))
     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(libgdi32 missing))
     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(libcomdlg32 missing))
     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(libwinspool missing))
     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(libwinmm missing))
     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(libshell32 missing))
     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(libcomctl32 missing))
     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(libole32 missing))
     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(liboleaut32 missing))
     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(libuuid missing))
     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(librpcrt4 missing))
     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(libadvapi32 missing))
     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(libws2_32 missing))
     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(libmswsock missing))
     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))
     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))
     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))

     # -static is interpreted by libtool, where it has a different meaning.
     # In libtool-speak, it's -all-static.
     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS="$LIBTOOL_APP_LDFLAGS -all-static"])

     AC_PATH_PROG([MAKENSIS], [makensis], none)
     if test x$MAKENSIS = xnone; then
       AC_MSG_WARN("makensis not found. Cannot create installer.")
     fi

     AC_PATH_TOOL(WINDRES, windres, none)
     if test x$WINDRES = xnone; then
       AC_MSG_ERROR("windres not found")
     fi

     CPPFLAGS="$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB"
     LEVELDB_TARGET_FLAGS="-DOS_WINDOWS"
     if test "x$CXXFLAGS_overridden" = "xno"; then
       CXXFLAGS="$CXXFLAGS -w"
     fi
     case $host in
       i?86-*) WINDOWS_BITS=32 ;;
       x86_64-*) WINDOWS_BITS=64 ;;
       *) AC_MSG_ERROR("Could not determine win32/win64 for installer") ;;
     esac
     AC_SUBST(WINDOWS_BITS)

     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.
     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override
     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are
     dnl also overridden to prevent their insertion later.
     dnl This should only affect dll's.
     archive_cmds_CXX="\$CC -shared \$libobjs \$deplibs \$compiler_flags -static -o \$output_objdir/\$soname \${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \$lib"
     postdeps_CXX=

     ;;
  *darwin*)
     TARGET_OS=darwin
     LEVELDB_TARGET_FLAGS="-DOS_MACOSX"
     if  test x$cross_compiling != xyes; then
       BUILD_OS=darwin
       AC_CHECK_PROG([PORT],port, port)
       if test x$PORT = xport; then
         dnl add default macports paths
         CPPFLAGS="$CPPFLAGS -isystem /opt/local/include"
         LIBS="$LIBS -L/opt/local/lib"
         if test -d /opt/local/include/db48; then
           CPPFLAGS="$CPPFLAGS -I/opt/local/include/db48"
           LIBS="$LIBS -L/opt/local/lib/db48"
         fi
       fi

       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)
       AC_CHECK_PROG([BREW],brew, brew)
       if test x$BREW = xbrew; then
         dnl These Homebrew packages may be keg-only, meaning that they won't be found
         dnl in expected paths because they may conflict with system files. Ask
         dnl Homebrew where each one is located, then adjust paths accordingly.
         dnl It's safe to add these paths even if the functionality is disabled by
         dnl the user (--without-wallet or --without-gui for example).

         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`
         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`
         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`
         if test x$openssl_prefix != x; then
           PKG_CONFIG_PATH="$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
           export PKG_CONFIG_PATH
         fi
         if test x$bdb_prefix != x; then
           CPPFLAGS="$CPPFLAGS -I$bdb_prefix/include"
           LIBS="$LIBS -L$bdb_prefix/lib"
         fi
         if test x$qt5_prefix != x; then
           PKG_CONFIG_PATH="$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
           export PKG_CONFIG_PATH
         fi
       fi
     else
       case $build_os in
         *darwin*)
           BUILD_OS=darwin
           ;;
         *)
           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)
           AC_PATH_TOOL([OTOOL], [otool], otool)
           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)
           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)
           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)
           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)

           dnl libtool will try to strip the static lib, which is a problem for
           dnl cross-builds because strip attempts to call a hard-coded ld,
           dnl which may not exist in the path. Stripping the .a is not
           dnl necessary, so just disable it.
           old_striplib=
           ;;
       esac
     fi

     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS="$LDFLAGS -Wl,-headerpad_max_install_names"])
     CPPFLAGS="$CPPFLAGS -DMAC_OSX"
     OBJCXXFLAGS="$CXXFLAGS"
     ;;
   *android*)
     dnl make sure android stays above linux for hosts like *linux-android*
     LEVELDB_TARGET_FLAGS="-DOS_ANDROID"
     ;;
   *linux*)
     TARGET_OS=linux
     LEVELDB_TARGET_FLAGS="-DOS_LINUX"
     ;;
   *kfreebsd*)
     LEVELDB_TARGET_FLAGS="-DOS_KFREEBSD"
     ;;
   *freebsd*)
     LEVELDB_TARGET_FLAGS="-DOS_FREEBSD"
     ;;
   *openbsd*)
     LEVELDB_TARGET_FLAGS="-DOS_OPENBSD"
     ;;
   *netbsd*)
     LEVELDB_TARGET_FLAGS="-DOS_NETBSD"
     ;;
   *dragonfly*)
     LEVELDB_TARGET_FLAGS="-DOS_DRAGONFLYBSD"
     ;;
   *solaris*)
     LEVELDB_TARGET_FLAGS="-DOS_SOLARIS"
     ;;
   *hpux*)
     LEVELDB_TARGET_FLAGS="-DOS_HPUX"
     ;;
   *)
     AC_MSG_ERROR(Cannot build leveldb for $host. Please file a bug report.)
     ;;
esac

if test x$use_pkgconfig = xyes; then
  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])
  m4_ifdef([PKG_PROG_PKG_CONFIG], [
  PKG_PROG_PKG_CONFIG
  if test x"$PKG_CONFIG" = "x"; then
    AC_MSG_ERROR(pkg-config not found.)
  fi
  ])
fi

if test x$use_extended_functional_tests != xno; then
  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)
fi

if test x$use_lcov = xyes; then
  if test x$LCOV = x; then
    AC_MSG_ERROR("lcov testing requested but lcov not found")
  fi
  if test x$GCOV = x; then
    AC_MSG_ERROR("lcov testing requested but gcov not found")
  fi
  if test x$PYTHON = x; then
    AC_MSG_ERROR("lcov testing requested but python not found")
  fi
  if test x$GENHTML = x; then
    AC_MSG_ERROR("lcov testing requested but genhtml not found")
  fi
  LCOV="$LCOV --gcov-tool=$GCOV"
  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS="$LDFLAGS --coverage"],
    [AC_MSG_ERROR("lcov testing requested but --coverage linker flag does not work")])
  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS="$CXXFLAGS --coverage"],
    [AC_MSG_ERROR("lcov testing requested but --coverage flag does not work")])
  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])
  CXXFLAGS="$CXXFLAGS -Og"
fi

if test x$use_lcov_branch != xno; then
  AC_SUBST(LCOV_OPTS, "$LCOV_OPTS --rc lcov_branch_coverage=1")
fi

dnl Check for endianness
AC_C_BIGENDIAN

dnl Check for pthread compile/link requirements
AX_PTHREAD

# The following macro will add the necessary defines to bitcoin-config.h, but
# they also need to be passed down to any subprojects. Pull the results out of
# the cache and add them to CPPFLAGS.
AC_SYS_LARGEFILE
# detect POSIX or GNU variant of strerror_r
AC_FUNC_STRERROR_R

if test x$ac_cv_sys_file_offset_bits != x &&
   test x$ac_cv_sys_file_offset_bits != xno &&
   test x$ac_cv_sys_file_offset_bits != xunknown; then
  CPPFLAGS="$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits"
fi

if test x$ac_cv_sys_large_files != x &&
   test x$ac_cv_sys_large_files != xno &&
   test x$ac_cv_sys_large_files != xunknown; then
  CPPFLAGS="$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files"
fi

AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS="$LDFLAGS -Wl,--large-address-aware"])

AX_GCC_FUNC_ATTRIBUTE([visibility])
AX_GCC_FUNC_ATTRIBUTE([dllexport])
AX_GCC_FUNC_ATTRIBUTE([dllimport])

if test x$use_glibc_compat != xno; then

  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link
  #in anyway for back-compat.
  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(librt missing))

  #__fdelt_chk's params and return type have changed from long unsigned int to long int.
  # See which one is present here.
  AC_MSG_CHECKING(__fdelt_chk type)
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE
                    #undef _FORTIFY_SOURCE
                  #endif
                  #define _FORTIFY_SOURCE 2
                  #include <sys/select.h>
     extern "C" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],
    [ fdelt_type="long unsigned int"],
    [ fdelt_type="long int"])
  AC_MSG_RESULT($fdelt_type)
  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])
  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4"])
  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=log2f"])
else
  AC_SEARCH_LIBS([clock_gettime],[rt])
fi

if test "x$enable_gprof" = xyes; then
    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,
    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force
    dnl -pie by default, in which case it needs to be turned off with -no-pie.

    if test x$use_hardening = xyes; then
        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)
    fi
    use_hardening=no
    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS="-pg"],
        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])

    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS="-no-pie"])
    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS="$GPROF_LDFLAGS -pg"],
        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])
fi

if test x$TARGET_OS != xwindows; then
  # All windows code is PIC, forcing it on just adds useless compile warnings
  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS="-fPIC"])
fi

if test x$use_hardening != xno; then
  use_hardening=yes
  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -Wstack-protector"])
  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -fstack-protector-all"])

  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[
    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[
      HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE"
    ])
    HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2"
  ])

  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--dynamicbase"])
  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--nxcompat"])
  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--high-entropy-va"])
  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,relro"])
  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,now"])
  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS="-fPIE"; HARDENED_LDFLAGS="$HARDENED_LDFLAGS -pie"],, [[$CXXFLAG_WERROR]])

  case $host in
    *mingw*)
       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))
    ;;
  esac
fi

dnl this flag screws up non-darwin gcc even when the check fails. special-case it.
if test x$TARGET_OS = xdarwin; then
  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS="$LDFLAGS -Wl,-dead_strip"])
fi

AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])

AC_CHECK_DECLS([strnlen])

# Check for daemon(3), unrelated to --with-daemon (although used by it)
AC_CHECK_DECLS([daemon])

AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,
		[#if HAVE_ENDIAN_H
                 #include <endian.h>
                 #elif HAVE_SYS_ENDIAN_H
                 #include <sys/endian.h>
                 #endif])

AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,
		[#if HAVE_BYTESWAP_H
                 #include <byteswap.h>
                 #endif])

AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])

dnl Check for malloc_info (for memory statistics information in getmemoryinfo)
AC_MSG_CHECKING(for getmemoryinfo)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],
 [[ int f = malloc_info(0, NULL); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],
 [ AC_MSG_RESULT(no)]
)

dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)
AC_MSG_CHECKING(for mallopt M_ARENA_MAX)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],
 [[ mallopt(M_ARENA_MAX, 1); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING([for visibility attribute])
AC_LINK_IFELSE([AC_LANG_SOURCE([
  int foo_def( void ) __attribute__((visibility("default")));
  int main(){}
  ])],
  [
    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])
    AC_MSG_RESULT(yes)
  ],
  [
    AC_MSG_RESULT(no)
    if test x$use_reduce_exports = xyes; then
      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])
    fi
  ]
)

TEMP_LDFLAGS="$LDFLAGS"
LDFLAGS="$TEMP_LDFLAGS $PTHREAD_CFLAGS"
AC_MSG_CHECKING([for thread_local support])
AC_LINK_IFELSE([AC_LANG_SOURCE([
  #include <thread>
  static thread_local int foo = 0;
  static void run_thread() { foo++;}
  int main(){
  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}
  return foo;
  }
  ])],
  [
    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])
    AC_MSG_RESULT(yes)
  ],
  [
    AC_MSG_RESULT(no)
  ]
)
LDFLAGS="$TEMP_LDFLAGS"

# Check for different ways of gathering OS randomness
AC_MSG_CHECKING(for Linux getrandom syscall)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>
  #include <sys/syscall.h>
  #include <linux/random.h>]],
 [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for getentropy)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],
 [[ getentropy(nullptr, 32) ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for getentropy via random.h)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>
 #include <sys/random.h>]],
 [[ getentropy(nullptr, 32) ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for sysctl KERN_ARND)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
  #include <sys/sysctl.h>]],
 [[ static const int name[2] = {CTL_KERN, KERN_ARND};
    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],
 [ AC_MSG_RESULT(no)]
)

AC_MSG_CHECKING(for if type char equals int8_t)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>
  #include <type_traits>]],
 [[ static_assert(std::is_same<int8_t, char>::value, ""); ]])],
 [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],
 [ AC_MSG_RESULT(no)]
)

# Check for reduced exports
if test x$use_reduce_exports = xyes; then
  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS="-fvisibility=hidden"],
  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])
fi

LEVELDB_CPPFLAGS=
LIBLEVELDB=
LIBMEMENV=
AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])
AC_SUBST(LEVELDB_CPPFLAGS)
AC_SUBST(LIBLEVELDB)
AC_SUBST(LIBMEMENV)

if test x$enable_wallet != xno; then
    dnl Check for libdb_cxx only if wallet enabled
    BITCOIN_FIND_BDB48
fi

dnl Check for libminiupnpc (optional)
if test x$use_upnp != xno; then
  AC_CHECK_HEADERS(
    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],
    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],
    [have_miniupnpc=no]
  )
fi

BITCOIN_QT_INIT

dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus
BITCOIN_QT_CONFIGURE([$use_pkgconfig])

if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then
    use_boost=no
else
    use_boost=yes
fi

if test x$use_boost = xyes; then

dnl Minimum required Boost version
define(MINIMUM_REQUIRED_BOOST, 1.47.0)

dnl Check for boost libs
AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])
if test x$want_boost = xno; then
    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])
fi
AX_BOOST_SYSTEM
AX_BOOST_FILESYSTEM
AX_BOOST_THREAD
AX_BOOST_CHRONO

dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic
dnl counter implementations. In 1.63 and later the std::atomic approach is default.
m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro
BOOST_CPPFLAGS="-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS"

if test x$use_reduce_exports = xyes; then
  AC_MSG_CHECKING([for working boost reduced exports])
  TEMP_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$BOOST_CPPFLAGS $CPPFLAGS"
  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
      @%:@include <boost/version.hpp>
    ]], [[
      #if BOOST_VERSION >= 104900
      // Everything is okay
      #else
      #  error Boost version is too old
      #endif
    ]])],[
      AC_MSG_RESULT(yes)
    ],[
    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])
  ])
  CPPFLAGS="$TEMP_CPPFLAGS"
fi
fi

if test x$use_reduce_exports = xyes; then
    CXXFLAGS="$CXXFLAGS $RE_CXXFLAGS"
    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS="-Wl,--exclude-libs,ALL"])
fi

if test x$use_tests = xyes; then

  if test x$HEXDUMP = x; then
    AC_MSG_ERROR(hexdump is required for tests)
  fi


  if test x$use_boost = xyes; then

  AX_BOOST_UNIT_TEST_FRAMEWORK

  dnl Determine if -DBOOST_TEST_DYN_LINK is needed
  AC_MSG_CHECKING([for dynamic linked boost test])
  TEMP_LIBS="$LIBS"
  LIBS="$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB"
  TEMP_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
  AC_LINK_IFELSE([AC_LANG_SOURCE([
       #define BOOST_TEST_DYN_LINK
       #define BOOST_TEST_MAIN
        #include <boost/test/unit_test.hpp>

       ])],
    [AC_MSG_RESULT(yes)]
    [TESTDEFS="$TESTDEFS -DBOOST_TEST_DYN_LINK"],
    [AC_MSG_RESULT(no)])
  LIBS="$TEMP_LIBS"
  CPPFLAGS="$TEMP_CPPFLAGS"

  fi
fi

if test x$use_boost = xyes; then

BOOST_LIBS="$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB"


dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums
dnl using c++98 constructs. Unfortunately, this implementation detail leaked into
dnl the abi. This was fixed in 1.57.

dnl When building against that installed version using c++11, the headers pick up
dnl on the native c++11 scoped enum support and enable it, however it will fail to
dnl link. This can be worked around by disabling c++11 scoped enums if linking will
dnl fail.
dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.

TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/config.hpp>
  #include <boost/version.hpp>
  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700
  #define BOOST_NO_SCOPED_ENUMS
  #define BOOST_NO_CXX11_SCOPED_ENUMS
  #define CHECK
  #endif
  #include <boost/filesystem.hpp>
  ]],[[
  #if defined(CHECK)
    boost::filesystem::copy_file("foo", "bar");
  #else
    choke;
  #endif
  ]])],
  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS="$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS"], 

[AC_MSG_RESULT(ok)])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"

dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however
dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if
dnl a working version is available, else fall back to sleep. sleep was removed
dnl after 1.56.
dnl If neither is available, abort.
TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/thread/thread.hpp>
  #include <boost/version.hpp>
  ]],[[
  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)
      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));
  #else
   choke me
  #endif
  ]])],
  [boost_sleep=yes;
     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],
  [boost_sleep=no])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"

if test x$boost_sleep != xyes; then
TEMP_LIBS="$LIBS"
LIBS="$BOOST_LIBS $LIBS"
TEMP_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
AC_LINK_IFELSE([AC_LANG_PROGRAM([[
  #include <boost/version.hpp>
  #include <boost/thread.hpp>
  #include <boost/date_time/posix_time/posix_time_types.hpp>
  ]],[[
  #if BOOST_VERSION <= 105600
      boost::this_thread::sleep(boost::posix_time::milliseconds(0));
  #else
   choke me
  #endif
  ]])],
  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],
  [boost_sleep=no])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"
fi

if test x$boost_sleep != xyes; then
  AC_MSG_ERROR(No working boost sleep implementation found.)
fi

fi

if test x$use_pkgconfig = xyes; then
  : dnl
  m4_ifdef(
    [PKG_CHECK_MODULES],
    [
      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])
      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])
      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])
      if test x$use_qr != xno; then
        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])
      fi
      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then
        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])
        if test x$TARGET_OS != xwindows; then
          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])
        fi
      fi

      if test "x$use_zmq" = "xyes"; then
        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],
          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],
          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])
           use_zmq=no])
      else
          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
      fi
    ]
  )
else
  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))
  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))

  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)
  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))

  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then
    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)
    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))
    if test x$TARGET_OS != xwindows; then
      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))
    fi
  fi

  if test "x$use_zmq" = "xyes"; then
     AC_CHECK_HEADER([zmq.h],
       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],
       [AC_MSG_WARN([zmq.h not found, disabling zmq support])
        use_zmq=no
        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])
     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,
       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])
        use_zmq=no
        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])
  else
    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])
  fi

  if test "x$use_zmq" = "xyes"; then
    dnl Assume libzmq was built for static linking
    case $host in
      *mingw*)
        ZMQ_CFLAGS="$ZMQ_CFLAGS -DZMQ_STATIC"
      ;;
    esac
  fi

  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))
  if test x$use_qr != xno; then
    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])
    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])
  fi
fi

save_CXXFLAGS="${CXXFLAGS}"
CXXFLAGS="${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}"
AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT
#include <openssl/x509_vfy.h>
])
CXXFLAGS="${save_CXXFLAGS}"

dnl univalue check

need_bundled_univalue=yes

if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then
  need_bundled_univalue=no
else

if test x$system_univalue != xno ; then
  found_univalue=no
  if test x$use_pkgconfig = xyes; then
    : #NOP
    m4_ifdef(
      [PKG_CHECK_MODULES],
      [
        PKG_CHECK_MODULES([UNIVALUE],[libunivalue >= 1.0.4],[found_univalue=yes],[true])
      ]
    )
  else
    AC_CHECK_HEADER([univalue.h],[
      AC_CHECK_LIB([univalue],  [main],[
        UNIVALUE_LIBS=-lunivalue
        found_univalue=yes
      ],[true])
    ],[true])
  fi

  if test x$found_univalue = xyes ; then
    system_univalue=yes
    need_bundled_univalue=no
  elif test x$system_univalue = xyes ; then
    AC_MSG_ERROR([univalue not found])
  else
    system_univalue=no
  fi
fi

if test x$need_bundled_univalue = xyes ; then
  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'
  UNIVALUE_LIBS='univalue/libunivalue.la'
fi

fi

AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])
AC_SUBST(UNIVALUE_CFLAGS)
AC_SUBST(UNIVALUE_LIBS)

BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)

AC_MSG_CHECKING([whether to build bitcoind])
AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])
AC_MSG_RESULT($build_bitcoind)

AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])
AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])
AC_MSG_RESULT($build_bitcoin_utils)

AC_MSG_CHECKING([whether to build libraries])
AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])
if test x$build_bitcoin_libs = xyes; then
  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])
  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])
fi
AC_MSG_RESULT($build_bitcoin_libs)

AC_LANG_POP

if test "x$use_ccache" != "xno"; then
  AC_MSG_CHECKING(if ccache should be used)
  if test x$CCACHE = x; then
    if test "x$use_ccache" = "xyes"; then
      AC_MSG_ERROR([ccache not found.]);
    else
      use_ccache=no
    fi
  else
    use_ccache=yes
    CC="$ac_cv_path_CCACHE $CC"
    CXX="$ac_cv_path_CCACHE $CXX"
  fi
  AC_MSG_RESULT($use_ccache)
fi
if test "x$use_ccache" = "xyes"; then
    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS="-Qunused-arguments $CPPFLAGS"])
fi

dnl enable wallet
AC_MSG_CHECKING([if wallet should be enabled])
if test x$enable_wallet != xno; then
  AC_MSG_RESULT(yes)
  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])

else
  AC_MSG_RESULT(no)
fi

dnl enable upnp support
AC_MSG_CHECKING([whether to build with support for UPnP])
if test x$have_miniupnpc = xno; then
  if test x$use_upnp = xyes; then
     AC_MSG_ERROR("UPnP requested but cannot be built. use --without-miniupnpc")
  fi
  AC_MSG_RESULT(no)
else
  if test x$use_upnp != xno; then
    AC_MSG_RESULT(yes)
    AC_MSG_CHECKING([whether to build with UPnP enabled by default])
    use_upnp=yes
    upnp_setting=0
    if test x$use_upnp_default != xno; then
      use_upnp_default=yes
      upnp_setting=1
    fi
    AC_MSG_RESULT($use_upnp_default)
    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])
    if test x$TARGET_OS = xwindows; then
      MINIUPNPC_CPPFLAGS="-DSTATICLIB -DMINIUPNP_STATICLIB"
    fi
  else
    AC_MSG_RESULT(no)
  fi
fi

dnl these are only used when qt is enabled
BUILD_TEST_QT=""
if test x$bitcoin_enable_qt != xno; then
  dnl enable dbus support
  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])
  if test x$bitcoin_enable_qt_dbus != xno; then
    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])
  fi
  AC_MSG_RESULT($bitcoin_enable_qt_dbus)

  dnl enable qr support
  AC_MSG_CHECKING([whether to build GUI with support for QR codes])
  if test x$have_qrencode = xno; then
    if test x$use_qr = xyes; then
     AC_MSG_ERROR("QR support requested but cannot be built. use --without-qrencode")
    fi
    AC_MSG_RESULT(no)
  else
    if test x$use_qr != xno; then
      AC_MSG_RESULT(yes)
      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])
      use_qr=yes
    else
      AC_MSG_RESULT(no)
    fi
  fi

  if test x$XGETTEXT = x; then
    AC_MSG_WARN("xgettext is required to update qt translations")
  fi

  AC_MSG_CHECKING([whether to build test_bitcoin-qt])
  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then
    AC_MSG_RESULT([yes])
    BUILD_TEST_QT="yes"
  else
    AC_MSG_RESULT([no])
  fi
fi

AM_CONDITIONAL([ENABLE_ZMQ], [test "x$use_zmq" = "xyes"])

AC_MSG_CHECKING([whether to build test_bitcoin])
if test x$use_tests = xyes; then
  AC_MSG_RESULT([yes])
  BUILD_TEST="yes"
else
  AC_MSG_RESULT([no])
  BUILD_TEST=""
fi

AC_MSG_CHECKING([whether to reduce exports])
if test x$use_reduce_exports = xyes; then
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi

if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then
  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])
fi

AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])
AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])
AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])
AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])
AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])
AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])
AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])
AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])
AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])
AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])
AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])
AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])
AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])
AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])
AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])
AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])
AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])

AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])
AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])
AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])
AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])
AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])
AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])
AC_DEFINE(COPYRIGHT_HOLDERS, "_COPYRIGHT_HOLDERS", [Copyright holder(s) before %s replacement])
AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, "_COPYRIGHT_HOLDERS_SUBSTITUTION", [Replacement for %s in copyright holders string])
define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])
AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, "_COPYRIGHT_HOLDERS_FINAL", [Copyright holder(s)])
AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)
AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)
AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)
AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)
AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)
AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)
AC_SUBST(COPYRIGHT_HOLDERS, "_COPYRIGHT_HOLDERS")
AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, "_COPYRIGHT_HOLDERS_SUBSTITUTION")
AC_SUBST(COPYRIGHT_HOLDERS_FINAL, "_COPYRIGHT_HOLDERS_FINAL")
AC_SUBST(BITCOIN_DAEMON_NAME)
AC_SUBST(BITCOIN_GUI_NAME)
AC_SUBST(BITCOIN_CLI_NAME)
AC_SUBST(BITCOIN_TX_NAME)

AC_SUBST(RELDFLAGS)
AC_SUBST(DEBUG_CPPFLAGS)
AC_SUBST(WARN_CXXFLAGS)
AC_SUBST(NOWARN_CXXFLAGS)
AC_SUBST(DEBUG_CXXFLAGS)
AC_SUBST(COMPAT_LDFLAGS)
AC_SUBST(ERROR_CXXFLAGS)
AC_SUBST(GPROF_CXXFLAGS)
AC_SUBST(GPROF_LDFLAGS)
AC_SUBST(HARDENED_CXXFLAGS)
AC_SUBST(HARDENED_CPPFLAGS)
AC_SUBST(HARDENED_LDFLAGS)
AC_SUBST(PIC_FLAGS)
AC_SUBST(PIE_FLAGS)
AC_SUBST(SANITIZER_CXXFLAGS)
AC_SUBST(SANITIZER_LDFLAGS)
AC_SUBST(SSE42_CXXFLAGS)
AC_SUBST(SSE41_CXXFLAGS)
AC_SUBST(AVX2_CXXFLAGS)
AC_SUBST(SHANI_CXXFLAGS)
AC_SUBST(LIBTOOL_APP_LDFLAGS)
AC_SUBST(USE_UPNP)
AC_SUBST(USE_QRCODE)
AC_SUBST(BOOST_LIBS)
AC_SUBST(TESTDEFS)
AC_SUBST(LEVELDB_TARGET_FLAGS)
AC_SUBST(MINIUPNPC_CPPFLAGS)
AC_SUBST(MINIUPNPC_LIBS)
AC_SUBST(CRYPTO_LIBS)
AC_SUBST(SSL_LIBS)
AC_SUBST(EVENT_LIBS)
AC_SUBST(EVENT_PTHREADS_LIBS)
AC_SUBST(ZMQ_LIBS)
AC_SUBST(PROTOBUF_LIBS)
AC_SUBST(QR_LIBS)
AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])
AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])
AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])
AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])
AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])
AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])
AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])

dnl boost's m4 checks do something really nasty: they export these vars. As a
dnl result, they leak into secp256k1's configure and crazy things happen.
dnl Until this is fixed upstream and we've synced, we'll just un-export them.
CPPFLAGS_TEMP="$CPPFLAGS"
unset CPPFLAGS
CPPFLAGS="$CPPFLAGS_TEMP"

LDFLAGS_TEMP="$LDFLAGS"
unset LDFLAGS
LDFLAGS="$LDFLAGS_TEMP"

LIBS_TEMP="$LIBS"
unset LIBS
LIBS="$LIBS_TEMP"

PKGCONFIG_PATH_TEMP="$PKG_CONFIG_PATH"
unset PKG_CONFIG_PATH
PKG_CONFIG_PATH="$PKGCONFIG_PATH_TEMP"

PKGCONFIG_LIBDIR_TEMP="$PKG_CONFIG_LIBDIR"
unset PKG_CONFIG_LIBDIR
PKG_CONFIG_LIBDIR="$PKGCONFIG_LIBDIR_TEMP"

if test x$need_bundled_univalue = xyes; then
  AC_CONFIG_SUBDIRS([src/univalue])
fi

ac_configure_args="${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni"
AC_CONFIG_SUBDIRS([src/secp256k1])

AC_OUTPUT

dnl Taken from https://wiki.debian.org/RpathIssue
case $host in
   *-*-linux-gnu)
     AC_MSG_RESULT([Fixing libtool for -rpath problems.])
     sed < libtool > libtool-2 \
     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/'
     mv libtool-2 libtool
     chmod 755 libtool
   ;;
esac

dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows
case ${OS} in
   *Windows*)
     sed  's/BUILDDIR="\/\([[a-z]]\)/BUILDDIR="\1:/'  test/config.ini > test/config-2.ini
     mv test/config-2.ini test/config.ini
   ;;
esac

echo
echo "Options used to compile and link:"
echo "  with wallet   = $enable_wallet"
echo "  with gui / qt = $bitcoin_enable_qt"
if test x$bitcoin_enable_qt != xno; then
    echo "    with qr     = $use_qr"
fi
echo "  with zmq      = $use_zmq"
echo "  with test     = $use_tests"
echo "  with bench    = $use_bench"
echo "  with upnp     = $use_upnp"
echo "  use asm       = $use_asm"
echo "  sanitizers    = $use_sanitizers"
echo "  debug enabled = $enable_debug"
echo "  gprof enabled = $enable_gprof"
echo "  werror        = $enable_werror"
echo
echo "  target os     = $TARGET_OS"
echo "  build os      = $BUILD_OS"
echo
echo "  CC            = $CC"
echo "  CFLAGS        = $CFLAGS"
echo "  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS"
echo "  CXX           = $CXX"
echo "  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS"
echo "  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS"
echo "  ARFLAGS       = $ARFLAGS"
echo
From:
"Mass Mason" <1st@musician.org>
To:
"Mass Mason" <1st@musician.org>
Date:
Sep 13, 2018 6:58:58 PM
<svg width="907" height="6720"NAME*
Tunecoin
EMAIL*
1st@musician.org
TICKER*
MC$
ALGO*
add_definitions(-DSTATICLIB) file(GLOB_RECURSE COMMON common/*) file(GLOB_RECURSE CRYPTO crypto/*) file(GLOB_RECURSE CRYPTONOTE_CORE 

cryptonote_core/*) file(GLOB_RECURSE CRYPTONOTE_PROTOCOL cryptonote_protocol/*) file(GLOB_RECURSE DAEMON daemon/*) file(GLOB_RECURSE P2P p2p/*) file

(GLOB_RECURSE RPC rpc/*) file(GLOB_RECURSE SIMPLEWALLET simplewallet/*) file(GLOB_RECURSE CONN_TOOL connectivity_tool/*) file(GLOB_RECURSE WALLET 

wallet/*) file(GLOB_RECURSE MINER miner/*) source_group(common FILES ${COMMON}) source_group(crypto FILES ${CRYPTO}) source_group(cryptonote_core FILES 

${CRYPTONOTE_CORE}) source_group(cryptonote_protocol FILES ${CRYPTONOTE_PROTOCOL}) source_group(daemon FILES ${DAEMON}) source_group(p2p FILES 

${P2P}) source_group(rpc FILES ${RPC}) source_group(simplewallet FILES ${SIMPLEWALLET}) source_group(connectivity-tool FILES ${CONN_TOOL}) source_group(wallet 

FILES ${WALLET}) source_group(simpleminer FILES ${MINER}) add_library(common ${COMMON}) add_library(crypto ${CRYPTO}) add_library(cryptonote_core 

${CRYPTONOTE_CORE}) add_executable(daemon ${DAEMON} ${P2P} ${CRYPTONOTE_PROTOCOL}) add_executable(connectivity_tool ${CONN_TOOL}) add_executable

(simpleminer ${MINER}) target_link_libraries(daemon rpc cryptonote_core crypto common upnpc-static ${Boost_LIBRARIES}) target_link_libraries(connectivity_tool cryptonote_core 

crypto common ${Boost_LIBRARIES}) target_link_libraries(simpleminer cryptonote_core crypto common ${Boost_LIBRARIES}) add_library(rpc ${RPC}) add_library(wallet 

${WALLET}) add_executable(simplewallet ${SIMPLEWALLET} ) target_link_libraries(simplewallet wallet rpc cryptonote_core crypto common upnpc-static ${Boost_LIBRARIES}) 

add_dependencies(daemon version) add_dependencies(rpc version) add_dependencies(simplewallet version) set_property(TARGET common crypto cryptonote_core rpc wallet 

PROPERTY FOLDER "libs") set_property(TARGET daemon simplewallet connectivity_tool simpleminer PROPERTY FOLDER "prog") #TODO Specify the name of daemon for your 

currency #set_property(TARGET daemon PROPERTY OUTPUT_NAME "cryptonoted")
BLOCK TIME, SEC*
0.111
REWARD, COINS PER BLOCKS
1
HALFING REWARD CYCLE, BLOCKS
TOTAL COINS
333000616
PREMINE COINS
21000000
DIFFICULTY CYCLE, BLOCKS
None
TRANSACTION CONFIRMATION, BLOCKS
3
COIN MATURITY, BLOCKS
$
ANNUAL INTEREST, %
100
SEND><g transform="translate(100,50)scale(1,1)"><path class="link" id="link-NMC-NMC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,11.539792387543253 

707,11.539792387543253"></path><path class="link" id="link-LUC-LUC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,23.079584775086506 

707,23.079584775086506"></path><path class="link" id="link-POD-POD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,34.61937716262975 

707,34.61937716262975"></path><path class="link" id="link-PWNY-PWNY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,57.69896193771627 

707,57.69896193771627"></path><path class="link" id="link-ORO-ORO" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,69.2387543252595 

707,69.2387543252595"></path><path class="link" id="link-ATC-ATC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,80.77854671280276 

707,80.77854671280276"></path><path class="link" id="link-BEN-BEN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,92.31833910034602 

707,92.31833910034602"></path><path class="link" id="link-HXC-HXC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,103.85813148788927 

707,103.85813148788927"></path><path class="link" id="link-CTD-CTD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,115.39792387543254 

707,115.39792387543254"></path><path class="link" id="link-RIC-RIC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,126.93771626297578 

707,126.93771626297578"></path><path class="link" id="link-ARS-ARS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,138.477508650519 

707,138.477508650519"></path><path class="link" id="link-TAK-TAK" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,150.0173010380623 

707,150.0173010380623"></path><path class="link" id="link-PPCD-PPCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,161.55709342560553 

707,161.55709342560553"></path><path class="link" id="link-LOOT-LOOT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,173.0968858131488 

707,173.0968858131488"></path><path class="link" id="link-CX-CX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,184.63667820069205 

707,184.63667820069205"></path><path class="link" id="link-LGBT-LGBT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,196.1764705882353 

707,196.1764705882353"></path><path class="link" id="link-ABC-ABC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,207.71626297577853 

707,207.71626297577853"></path><path class="link" id="link-INK-INK" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,219.2560553633218 

707,219.2560553633218"></path><path class="link" id="link-PRO-PRO" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,230.79584775086508 

707,230.79584775086508"></path><path class="link" id="link-SPICE-SPICE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,242.3356401384083 

707,242.3356401384083"></path><path class="link" id="link-EIC-EIC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,253.87543252595157 

707,253.87543252595157"></path><path class="link" id="link-FUD-FUD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,265.4152249134948 

707,265.4152249134948"></path><path class="link" id="link-ChC-ChC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,276.955017301038 

707,276.955017301038"></path><path class="link" id="link-AAC-AAC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,288.4948096885813 

707,288.4948096885813"></path><path class="link" id="link-BULL-BULL" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,300.0346020761246 

707,300.0346020761246"></path><path class="link" id="link-SSC-SSC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,311.57439446366783 

707,311.57439446366783"></path><path class="link" id="link-GSY-GSY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,323.11418685121106 

707,323.11418685121106"></path><path class="link" id="link-SNC-SNC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,334.6539792387543 

707,334.6539792387543"></path><path class="link" id="link-ODNT-ODNT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,346.1937716262976 

707,346.1937716262976"></path><path class="link" id="link-GLB-GLB" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,357.73356401384086 

707,357.73356401384086"></path><path class="link" id="link-PHR-PHR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,369.2733564013841 

707,369.2733564013841"></path><path class="link" id="link-KMC-KMC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,380.8131487889273 

707,380.8131487889273"></path><path class="link" id="link-STEPS-STEPS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,392.3529411764706 

707,392.3529411764706"></path><path class="link" id="link-HUC-HUC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,403.89273356401384 

707,403.89273356401384"></path><path class="link" id="link-LOG-LOG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,415.43252595155707 

707,415.43252595155707"></path><path class="link" id="link-Curecoin-Curecoin" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,426.9723183391003 

707,426.9723183391003"></path><path class="link" id="link-GUINEA-GUINEA" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,438.5121107266436 

707,438.5121107266436"></path><path class="link" id="link-NYM-NYM" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,450.05190311418687 

707,450.05190311418687"></path><path class="link" id="link-SOV-SOV" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,461.59169550173016 

707,461.59169550173016"></path><path class="link" id="link-RKC-RKC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,473.1314878892734 

707,473.1314878892734"></path><path class="link" id="link-eTaler-eTaler" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,484.6712802768166 

707,484.6712802768166"></path><path class="link" id="link-FLIRT-FLIRT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,496.21107266435985 

707,496.21107266435985"></path><path class="link" id="link-BTCD-BTCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,507.75086505190313 

707,507.75086505190313"></path><path class="link" id="link-BET-BET" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,519.2906574394464 

707,519.2906574394464"></path><path class="link" id="link-ACOIN-ACOIN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,530.8304498269896 

707,530.8304498269896"></path><path class="link" id="link-ASC-ASC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,542.3702422145328 

707,542.3702422145328"></path><path class="link" id="link-TTY-TTY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,553.910034602076 

707,553.910034602076"></path><path class="link" id="link-URAN-URAN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,565.4498269896194 

707,565.4498269896194"></path><path class="link" id="link-UBTC-UBTC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,576.9896193771626 

707,576.9896193771626"></path><path class="link" id="link-TGC-TGC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,588.529411764706 

707,588.529411764706"></path><path class="link" id="link-BTI-BTI" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,600.0692041522492 

707,600.0692041522492"></path><path class="link" id="link-GRD-GRD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,611.6089965397924 

707,611.6089965397924"></path><path class="link" id="link-DOGEBC-DOGEBC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,623.1487889273357 

707,623.1487889273357"></path><path class="link" id="link-PIMP-PIMP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,634.6885813148789 

707,634.6885813148789"></path><path class="link" id="link-SSD-SSD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,646.2283737024221 

707,646.2283737024221"></path><path class="link" id="link-FLIRT-FLIRT" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,657.7681660899653 

707,657.7681660899653"></path><path class="link" id="link-DRX-DRX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,669.3079584775086 

707,669.3079584775086"></path><path class="link" id="link-DECR-DECR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,680.8477508650519 

707,680.8477508650519"></path><path class="link" id="link-NEOS-NEOS" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,692.3875432525952 

707,692.3875432525952"></path><path class="link" id="link-MEG-MEG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,703.9273356401384 

707,703.9273356401384"></path><path class="link" id="link-ASD-ASD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,715.4671280276817 

707,715.4671280276817"></path><path class="link" id="link-PAYER-PAYER" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,727.006920415225 

707,727.006920415225"></path><path class="link" id="link-REB-REB" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,738.5467128027682 

707,738.5467128027682"></path><path class="link" id="link-BTE-BTE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,750.0865051903114 

707,750.0865051903114"></path><path class="link" id="link-BIG-BIG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,761.6262975778546 

707,761.6262975778546"></path><path class="link" id="link-TRC-TRC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,773.1660899653979 

707,773.1660899653979"></path><path class="link" id="link-XMG-XMG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,784.7058823529412 

707,784.7058823529412"></path><path class="link" id="link-IQD-IQD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,796.2456747404844 

707,796.2456747404844"></path><path class="link" id="link-AXR-AXR" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,807.7854671280277 

707,807.7854671280277"></path><path class="link" id="link-IMP-IMP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,819.3252595155709 

707,819.3252595155709"></path><path class="link" id="link-MOBI-MOBI" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,830.8650519031141 

707,830.8650519031141"></path><path class="link" id="link-OAC-OAC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,842.4048442906574 

707,842.4048442906574"></path><path class="link" id="link-NODE-NODE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,853.9446366782006 

707,853.9446366782006"></path><path class="link" id="link-MTX-MTX" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,865.4844290657438 

707,865.4844290657438"></path><path class="link" id="link-WWC-WWC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,877.0242214532872 

707,877.0242214532872"></path><path class="link" id="link-GG-GG" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,888.5640138408304 

707,888.5640138408304"></path><path class="link" id="link-AU-AU" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,900.1038062283737 

707,900.1038062283737"></path><path class="link" id="link-SC-SC" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,911.6435986159171 

707,911.6435986159171"></path><path class="link" id="link-PPCD-PPCD" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,923.1833910034603 

707,923.1833910034603"></path><path class="link" id="link-CKE-CKE" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,934.7231833910035 

707,934.7231833910035"></path><path class="link" id="link-SUP-SUP" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,946.2629757785468 

707,946.2629757785468"></path><path class="link" id="link-BTN-BTN" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,957.80276816609 

707,957.80276816609"></path><path class="link" id="link-BLC-BLC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,986.6522491349481 589.1666666666667,986.6522491349481"></path><path class="link" id="link-UNO-UNO" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1015.5017301038063 589.1666666666667,1015.5017301038063"></path><path 

class="link" id="link-SKC-SKC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1038.5813148788927 

589.1666666666667,1038.5813148788927"></path><path class="link" id="link-CL-CL" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1067.430795847751 589.1666666666667,1067.430795847751"></path><path class="link" id="link-DVC-DVC" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1096.2802768166089 589.1666666666667,1096.2802768166089"></path><path 

class="link" id="link-IXC-IXC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1119.3598615916953 

589.1666666666667,1119.3598615916953"></path><path class="link" id="link-XPM-XPM" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1153.9792387543253 589.1666666666667,1153.9792387543253"></path><path class="link" id="link-FRC-FRC" 

d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1188.5986159169552 589.1666666666667,1188.5986159169552"></path><path 

class="link" id="link-YLC-YLC" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 294.58333333333337,1211.6782006920416 

589.1666666666667,1211.6782006920416"></path><path class="link" id="link-ZET-ZET" d="M0,613.2488781196508C294.58333333333337,613.2488781196508 

294.58333333333337,1252.0674740484428 589.1666666666667,1252.0674740484428"></path><path class="link" id="link-PPC-PPC" 

d="M0,613.2488781196508C117.83333333333334,613.2488781196508 117.83333333333334,1360.6353828215895 235.66666666666669,1360.6353828215895"></path><path 

class="link" id="link-SIC-SIC" d="M0,613.2488781196508C117.83333333333334,613.2488781196508 117.83333333333334,2056.176121072315 

235.66666666666669,2056.176121072315"></path><path class="link" id="link-TBX-TBX" d="M0,613.2488781196508C58.91666666666665,613.2488781196508 

58.91666666666665,4097.234774831328 117.8333333333333,4097.234774831328"></path><path class="link" id="link-I0C-I0C" 

d="M589.1666666666667,1119.3598615916953C648.0833333333334,1119.3598615916953 648.0833333333334,1119.3598615916953 707,1119.3598615916953"></path><path 

class="link" id="link-FBX-FBX" d="M117.8333333333333,4097.234774831328C412.41666666666663,4097.234774831328 412.41666666666663,3646.5743944636683 

707,3646.5743944636683"></path><path class="link" id="link-LQC-LQC" d="M117.8333333333333,4097.234774831328C412.41666666666663,4097.234774831328 

412.41666666666663,3658.114186851211 707,3658.114186851211"></path><path class="link" id="link-LTC-LTC" 

d="M117.8333333333333,4097.234774831328C176.75,4097.234774831328 176.75,4987.015743179104 235.66666666666669,4987.015743179104"></path><path class="link" 

id="link-BQC-BQC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3681.193771626298 

707,3681.193771626298"></path><path class="link" id="link-APP-APP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3692.7335640138413 707,3692.7335640138413"></path><path class="link" id="link-GMC-GMC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3704.273356401384 707,3704.273356401384"></path><path 

class="link" id="link-ENC-ENC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3715.8131487889273 

707,3715.8131487889273"></path><path class="link" id="link-CCC-CCC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3727.3529411764707 707,3727.3529411764707"></path><path class="link" id="link-EMO-EMO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3738.892733564014 707,3738.892733564014"></path><path 

class="link" id="link-CHAM-CHAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3750.4325259515567 

707,3750.4325259515567"></path><path class="link" id="link-NOTE-NOTE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3761.9723183391 707,3761.9723183391"></path><path class="link" id="link-FUNK-FUNK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3773.5121107266436 

707,3773.5121107266436"></path><path class="link" id="link-BRD-BRD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3785.051903114187 707,3785.051903114187"></path><path class="link" id="link-DUCK-DUCK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3796.5916955017296 

707,3796.5916955017296"></path><path class="link" id="link-LYC-LYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3808.131487889273 707,3808.131487889273"></path><path class="link" id="link-FLAP-FLAP" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3819.6712802768166 

707,3819.6712802768166"></path><path class="link" id="link-ZMB-ZMB" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3831.21107266436 707,3831.21107266436"></path><path class="link" id="link-SNP-SNP" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3842.7508650519026 

707,3842.7508650519026"></path><path class="link" id="link-MVC-MVC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3854.290657439446 707,3854.290657439446"></path><path class="link" id="link-OLY-OLY" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3865.8304498269895 

707,3865.8304498269895"></path><path class="link" id="link-RBC-RBC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3877.370242214533 707,3877.370242214533"></path><path class="link" id="link-CORG-CORG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3888.9100346020764 

707,3888.9100346020764"></path><path class="link" id="link-PHI-PHI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3900.449826989619 707,3900.449826989619"></path><path class="link" id="link-HBC-HBC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3911.9896193771624 

707,3911.9896193771624"></path><path class="link" id="link-BLA-BLA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3923.529411764706 707,3923.529411764706"></path><path class="link" id="link-KARM-KARM" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3935.0692041522493 

707,3935.0692041522493"></path><path class="link" id="link-FRY-FRY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3946.6089965397923 707,3946.6089965397923"></path><path class="link" id="link-ALC-ALC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3958.1487889273358 

707,3958.1487889273358"></path><path class="link" id="link-RPD-RPD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3969.688581314879 707,3969.688581314879"></path><path class="link" id="link-BEC-BEC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,3981.2283737024222 

707,3981.2283737024222"></path><path class="link" id="link-LMC-LMC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,3992.7681660899652 707,3992.7681660899652"></path><path class="link" id="link-JUN-JUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4004.3079584775087 

707,4004.3079584775087"></path><path class="link" id="link-ANT-ANT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4015.847750865052 707,4015.847750865052"></path><path class="link" id="link-SOC-SOC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4027.3875432525956 

707,4027.3875432525956"></path><path class="link" id="link-BEE-BEE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4038.927335640138 707,4038.927335640138"></path><path class="link" id="link-MOSC-MOSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4050.4671280276816 

707,4050.4671280276816"></path><path class="link" id="link-CARBON-CARBON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4062.006920415225 707,4062.006920415225"></path><path class="link" id="link-NOBL-NOBL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4073.5467128027685 

707,4073.5467128027685"></path><path class="link" id="link-SHC-SHC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4085.086505190311 707,4085.086505190311"></path><path class="link" id="link-SOL-SOL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4096.6262975778545 

707,4096.6262975778545"></path><path class="link" id="link-VGC-VGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4108.166089965398 707,4108.166089965398"></path><path class="link" id="link-BAT-BAT" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4119.705882352941 707,4119.705882352941"></path><path 

class="link" id="link-FSC-FSC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4131.245674740485 

707,4131.245674740485"></path><path class="link" id="link-MDC-MDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4142.785467128027 707,4142.785467128027"></path><path class="link" id="link-EQB-EQB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4154.325259515571 707,4154.325259515571"></path><path 

class="link" id="link-VOLT-VOLT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4165.865051903114 

707,4165.865051903114"></path><path class="link" id="link-PENG-PENG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4177.404844290658 707,4177.404844290658"></path><path class="link" id="link-BOS-BOS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4188.9446366782 707,4188.9446366782"></path><path 

class="link" id="link-ONI-ONI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4200.484429065744 

707,4200.484429065744"></path><path class="link" id="link-CAGE-CAGE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4212.024221453287 707,4212.024221453287"></path><path class="link" id="link-PCC-PCC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4223.564013840831 707,4223.564013840831"></path><path 

class="link" id="link-42-42" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4235.103806228373 

707,4235.103806228373"></path><path class="link" id="link-VNC-VNC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4246.643598615917 707,4246.643598615917"></path><path class="link" id="link-TIPS-TIPS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4258.18339100346 707,4258.18339100346"></path><path 

class="link" id="link-TAXI-TAXI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4269.723183391004 

707,4269.723183391004"></path><path class="link" id="link-TFC-TFC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4281.262975778546 707,4281.262975778546"></path><path class="link" id="link-BLL-BLL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4292.80276816609 707,4292.80276816609"></path><path 

class="link" id="link-MOON-MOON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4304.342560553633 

707,4304.342560553633"></path><path class="link" id="link-MCR-MCR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4315.882352941177 707,4315.882352941177"></path><path class="link" id="link-VWC-VWC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4327.422145328719 707,4327.422145328719"></path><path 

class="link" id="link-MRS-MRS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4338.961937716263 

707,4338.961937716263"></path><path class="link" id="link-HAM-HAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4350.501730103806 707,4350.501730103806"></path><path class="link" id="link-LTB-LTB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4362.0415224913495 

707,4362.0415224913495"></path><path class="link" id="link-NWC-NWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4373.581314878893 707,4373.581314878893"></path><path class="link" id="link-XXL-XXL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4385.1211072664355 

707,4385.1211072664355"></path><path class="link" id="link-HTC-HTC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4396.660899653979 707,4396.660899653979"></path><path class="link" id="link-SDM-SDM" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4408.200692041522 707,4408.200692041522"></path><path 

class="link" id="link-MEOW-MEOW" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4419.740484429066 

707,4419.740484429066"></path><path class="link" id="link-PAND-PAND" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4431.280276816608 707,4431.280276816608"></path><path class="link" id="link-CHI-CHI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4442.820069204152 707,4442.820069204152"></path><path 

class="link" id="link-RDD-RDD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4454.359861591695 

707,4454.359861591695"></path><path class="link" id="link-LDC-LDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4465.899653979239 707,4465.899653979239"></path><path class="link" id="link-YACC-YACC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4477.439446366781 707,4477.439446366781"></path><path 

class="link" id="link-XIV-XIV" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4488.979238754325 

707,4488.979238754325"></path><path class="link" id="link-PRC-PRC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4500.519031141868 707,4500.519031141868"></path><path class="link" id="link-LOTTO-LOTTO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4512.058823529412 707,4512.058823529412"></path><path 

class="link" id="link-SUN-SUN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4523.598615916955 

707,4523.598615916955"></path><path class="link" id="link-EUC-EUC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4535.138408304498 707,4535.138408304498"></path><path class="link" id="link-SOCHI-SOCHI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4546.678200692041 707,4546.678200692041"></path><path 

class="link" id="link-LOVE-LOVE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4558.217993079585 

707,4558.217993079585"></path><path class="link" id="link-ZED-ZED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4569.757785467128 707,4569.757785467128"></path><path class="link" id="link-BOS-BOS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4581.2975778546715 

707,4581.2975778546715"></path><path class="link" id="link-TOP-TOP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4592.837370242215 707,4592.837370242215"></path><path class="link" id="link-AMC-AMC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4604.377162629758 707,4604.377162629758"></path><path 

class="link" id="link-AUR-AUR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4615.916955017301 

707,4615.916955017301"></path><path class="link" id="link-CYB-CYB" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4627.4567474048445 707,4627.4567474048445"></path><path class="link" id="link-BELI-BELI" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4638.996539792388 707,4638.996539792388"></path><path 

class="link" id="link-POK-POK" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4650.536332179931 

707,4650.536332179931"></path><path class="link" id="link-BELA-BELA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4662.076124567475 707,4662.076124567475"></path><path class="link" id="link-BEST-BEST" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4673.615916955017 707,4673.615916955017"></path><path 

class="link" id="link-COIN-COIN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4685.155709342561 

707,4685.155709342561"></path><path class="link" id="link-VAG-VAG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4696.695501730104 707,4696.695501730104"></path><path class="link" id="link-PIG-PIG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4708.235294117648 707,4708.235294117648"></path><path 

class="link" id="link-QWC-QWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4719.77508650519 

707,4719.77508650519"></path><path class="link" id="link-CCN-CCN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4731.314878892734 707,4731.314878892734"></path><path class="link" id="link-FLS-FLS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4742.854671280277 707,4742.854671280277"></path><path 

class="link" id="link-SVC-SVC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4754.394463667821 

707,4754.394463667821"></path><path class="link" id="link-KIMO-KIMO" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4765.934256055363 707,4765.934256055363"></path><path class="link" id="link-EXE-EXE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4777.474048442907 707,4777.474048442907"></path><path 

class="link" id="link-GME-GME" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4789.01384083045 

707,4789.01384083045"></path><path class="link" id="link-JNY-JNY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4800.553633217994 707,4800.553633217994"></path><path class="link" id="link-DBL-DBL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4812.093425605536 707,4812.093425605536"></path><path 

class="link" id="link-GAM-GAM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4823.63321799308 

707,4823.63321799308"></path><path class="link" id="link-CRC-CRC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4835.173010380623 707,4835.173010380623"></path><path class="link" id="link-ISR-ISR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4846.7128027681665 

707,4846.7128027681665"></path><path class="link" id="link-ARC-ARC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4858.252595155709 707,4858.252595155709"></path><path class="link" id="link-YOLO-YOLO" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4869.7923875432525 

707,4869.7923875432525"></path><path class="link" id="link-TYC-TYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4881.332179930796 707,4881.332179930796"></path><path class="link" id="link-FREEB-FREEB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4892.871972318339 707,4892.871972318339"></path><path 

class="link" id="link-WEC-WEC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4904.411764705883 

707,4904.411764705883"></path><path class="link" id="link-MXT-MXT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4915.951557093425 707,4915.951557093425"></path><path class="link" id="link-PCN-PCN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4927.491349480969 707,4927.491349480969"></path><path 

class="link" id="link-IDC-IDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4939.031141868512 

707,4939.031141868512"></path><path class="link" id="link-GIL-GIL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4950.570934256056 707,4950.570934256056"></path><path class="link" id="link-FUN-FUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4962.110726643598 707,4962.110726643598"></path><path 

class="link" id="link-ITC-ITC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4973.650519031142 

707,4973.650519031142"></path><path class="link" id="link-AIM-AIM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,4985.190311418685 707,4985.190311418685"></path><path class="link" id="link-EXC-EXC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,4996.730103806229 707,4996.730103806229"></path><path 

class="link" id="link-WFC-WFC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5008.269896193771 

707,5008.269896193771"></path><path class="link" id="link-PLT-PLT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5019.809688581315 707,5019.809688581315"></path><path class="link" id="link-CFN-CFN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5031.349480968858 707,5031.349480968858"></path><path 

class="link" id="link-BEL-BEL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5042.889273356402 

707,5042.889273356402"></path><path class="link" id="link-G8-G8" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5054.429065743944 707,5054.429065743944"></path><path class="link" id="link-ZEU-ZEU" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5065.968858131488 707,5065.968858131488"></path><path 

class="link" id="link-XXX-XXX" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5077.508650519031 

707,5077.508650519031"></path><path class="link" id="link-ELC-ELC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5089.048442906575 707,5089.048442906575"></path><path class="link" id="link-QTL-QTL" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5100.588235294117 707,5100.588235294117"></path><path 

class="link" id="link-HYC-HYC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5112.128027681661 

707,5112.128027681661"></path><path class="link" id="link-FJC-FJC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5123.667820069204 707,5123.667820069204"></path><path class="link" id="link-ICE-ICE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5135.2076124567475 

707,5135.2076124567475"></path><path class="link" id="link-AID-AID" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5146.747404844291 707,5146.747404844291"></path><path class="link" id="link-EZC-EZC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5158.2871972318335 

707,5158.2871972318335"></path><path class="link" id="link-M.J-M.J" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5169.826989619377 707,5169.826989619377"></path><path class="link" id="link-CNC-CNC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5181.36678200692 707,5181.36678200692"></path><path 

class="link" id="link-numc-numc" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5192.906574394464 

707,5192.906574394464"></path><path class="link" id="link-JPC-JPC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5204.446366782006 707,5204.446366782006"></path><path class="link" id="link-RC-RC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5215.98615916955 707,5215.98615916955"></path><path 

class="link" id="link-CTC-CTC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5227.525951557093 

707,5227.525951557093"></path><path class="link" id="link-CZC-CZC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5239.065743944637 707,5239.065743944637"></path><path class="link" id="link-NRB-NRB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5250.605536332179 707,5250.605536332179"></path><path 

class="link" id="link-Kool-Kool" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5262.145328719723 

707,5262.145328719723"></path><path class="link" id="link-RUP-RUP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5273.685121107266 707,5273.685121107266"></path><path class="link" id="link-RSC-RSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5285.22491349481 707,5285.22491349481"></path><path 

class="link" id="link-PXC-PXC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5296.764705882352 

707,5296.764705882352"></path><path class="link" id="link-LTCD-LTCD" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5308.304498269896 707,5308.304498269896"></path><path class="link" id="link-GLD-GLD" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5319.844290657439 707,5319.844290657439"></path><path 

class="link" id="link-CPTL-CPTL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5331.384083044983 

707,5331.384083044983"></path><path class="link" id="link-FEC-FEC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5342.923875432525 707,5342.923875432525"></path><path class="link" id="link-BMY-BMY" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5354.463667820069 707,5354.463667820069"></path><path 

class="link" id="link-USC-USC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5366.003460207612 

707,5366.003460207612"></path><path class="link" id="link-LNKC-LNKC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5377.5432525951555 707,5377.5432525951555"></path><path class="link" id="link-QTC-QTC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5389.083044982699 707,5389.083044982699"></path><path 

class="link" id="link-BLP-BLP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5400.622837370242 

707,5400.622837370242"></path><path class="link" id="link-ELP-ELP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5412.162629757785 707,5412.162629757785"></path><path class="link" id="link-EVC-EVC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5423.7024221453285 

707,5423.7024221453285"></path><path class="link" id="link-EGC-EGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5435.242214532872 707,5435.242214532872"></path><path class="link" id="link-GB-GB" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5446.782006920415 707,5446.782006920415"></path><path 

class="link" id="link-RED-RED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5458.321799307959 

707,5458.321799307959"></path><path class="link" id="link-SYS-SYS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5469.861591695502 707,5469.861591695502"></path><path class="link" id="link-CSC-CSC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5481.401384083045 707,5481.401384083045"></path><path 

class="link" id="link-BUY-BUY" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5492.941176470588 

707,5492.941176470588"></path><path class="link" id="link-LEL-LEL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5504.480968858132 707,5504.480968858132"></path><path class="link" id="link-ROOT-ROOT" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5516.020761245675 707,5516.020761245675"></path><path 

class="link" id="link-VLC-VLC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5527.560553633219 

707,5527.560553633219"></path><path class="link" id="link-TRDR-TRDR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5539.100346020761 707,5539.100346020761"></path><path class="link" id="link-TDC-TDC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5550.640138408305 707,5550.640138408305"></path><path 

class="link" id="link-MANA-MANA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5562.179930795848 

707,5562.179930795848"></path><path class="link" id="link-NC-NC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5573.719723183392 707,5573.719723183392"></path><path class="link" id="link-SHADE-SHADE" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5585.259515570934 707,5585.259515570934"></path><path 

class="link" id="link-SXC-SXC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5596.799307958478 

707,5596.799307958478"></path><path class="link" id="link-XBOT-XBOT" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5608.339100346021 707,5608.339100346021"></path><path class="link" id="link-EMD-EMD" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5619.8788927335645 

707,5619.8788927335645"></path><path class="link" id="link-CGA-CGA" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5631.418685121107 707,5631.418685121107"></path><path class="link" id="link-eDC-eDC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5642.9584775086505 

707,5642.9584775086505"></path><path class="link" id="link-BTLS-BTLS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5654.498269896194 707,5654.498269896194"></path><path class="link" id="link-REC-REC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5666.038062283737 707,5666.038062283737"></path><path 

class="link" id="link-VAC-VAC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5677.577854671281 

707,5677.577854671281"></path><path class="link" id="link-RCH-RCH" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5689.117647058823 707,5689.117647058823"></path><path class="link" id="link-SLK-SLK" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5700.657439446367 707,5700.657439446367"></path><path 

class="link" id="link-6CN-6CN" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5712.19723183391 

707,5712.19723183391"></path><path class="link" id="link-DOLLAR-DOLLAR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5723.737024221454 707,5723.737024221454"></path><path class="link" id="link-GLC-GLC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5735.276816608996 707,5735.276816608996"></path><path 

class="link" id="link-SNG-SNG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5746.81660899654 

707,5746.81660899654"></path><path class="link" id="link-MEM-MEM" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5758.356401384083 707,5758.356401384083"></path><path class="link" id="link-DPC-DPC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5769.896193771627 707,5769.896193771627"></path><path 

class="link" id="link-FST-FST" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5781.435986159169 

707,5781.435986159169"></path><path class="link" id="link-MTLMC-MTLMC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5792.975778546713 707,5792.975778546713"></path><path class="link" id="link-KGC-KGC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5804.515570934256 707,5804.515570934256"></path><path 

class="link" id="link-SEED-SEED" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5816.0553633218 

707,5816.0553633218"></path><path class="link" id="link-PWC-PWC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5827.595155709342 707,5827.595155709342"></path><path class="link" id="link-SMBR-SMBR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5839.134948096886 707,5839.134948096886"></path><path 

class="link" id="link-ARG-ARG" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5850.674740484429 

707,5850.674740484429"></path><path class="link" id="link-C2-C2" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5862.214532871973 707,5862.214532871973"></path><path class="link" id="link-ALF-ALF" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5873.754325259515 707,5873.754325259515"></path><path 

class="link" id="link-ONE-ONE" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5885.294117647059 

707,5885.294117647059"></path><path class="link" id="link-NBL-NBL" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5896.833910034602 707,5896.833910034602"></path><path class="link" id="link-DBU-DBU" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5908.3737024221455 

707,5908.3737024221455"></path><path class="link" id="link-GIAR-GIAR" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5919.913494809689 707,5919.913494809689"></path><path class="link" id="link-VTR-VTR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5931.4532871972315 

707,5931.4532871972315"></path><path class="link" id="link-DGC-DGC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5942.993079584775 707,5942.993079584775"></path><path class="link" id="link-INS-INS" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5954.532871972318 707,5954.532871972318"></path><path 

class="link" id="link-FOF-FOF" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5966.072664359862 

707,5966.072664359862"></path><path class="link" id="link-DIBS-DIBS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,5977.612456747404 707,5977.612456747404"></path><path class="link" id="link-NLG-NLG" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,5989.152249134948 707,5989.152249134948"></path><path 

class="link" id="link-DGMS-DGMS" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6000.692041522491 

707,6000.692041522491"></path><path class="link" id="link-FLO-FLO" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6012.231833910035 707,6012.231833910035"></path><path class="link" id="link-FSC2-FSC2" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6023.771626297577 707,6023.771626297577"></path><path 

class="link" id="link-XNC-XNC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6035.311418685121 

707,6035.311418685121"></path><path class="link" id="link-DIGI-DIGI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6046.851211072664 707,6046.851211072664"></path><path class="link" id="link-IFC-IFC" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6058.391003460208 707,6058.391003460208"></path><path 

class="link" id="link-CARSI-CARSI" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6069.93079584775 

707,6069.93079584775"></path><path class="link" id="link-ANC-ANC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6081.470588235294 707,6081.470588235294"></path><path class="link" id="link-XTR-XTR" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6093.010380622837 707,6093.010380622837"></path><path 

class="link" id="link-FRK-FRK" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6104.550173010381 

707,6104.550173010381"></path><path class="link" id="link-EMC2-EMC2" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6116.089965397923 707,6116.089965397923"></path><path class="link" id="link-NET-NET" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6127.629757785467 707,6127.629757785467"></path><path 

class="link" id="link-DDC-DDC" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6139.16955017301 

707,6139.16955017301"></path><path class="link" id="link-RON-RON" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 

471.33333333333337,6150.7093425605535 707,6150.7093425605535"></path><path class="link" id="link-BUN-BUN" 

d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6162.249134948097 707,6162.249134948097"></path><path 

class="link" id="link-VMP-VMP" d="M235.66666666666669,4987.015743179104C471.33333333333337,4987.015743179104 471.33333333333337,6173.7889273356395 

707,6173.7889273356395"></path><path class="link" id="link-FTC-FTC" d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 

412.41666666666674,6196.868512110726 589.1666666666667,6196.868512110726"></path><path class="link" id="link-PIC-PIC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6294.9567474048445 

589.1666666666667,6294.9567474048445"></path><path class="link" id="link-RYC-RYC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6393.0449826989625 

589.1666666666667,6393.0449826989625"></path><path class="link" id="link-WDC-WDC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6416.1245674740485 

589.1666666666667,6416.1245674740485"></path><path class="link" id="link-MNC-MNC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6439.204152249135 

589.1666666666667,6439.204152249135"></path><path class="link" id="link-MEC-MEC" 

d="M235.66666666666669,4987.015743179104C412.41666666666674,4987.015743179104 412.41666666666674,6462.283737024221 

589.1666666666667,6462.283737024221"></path><path class="link" id="link-STR-STR" d="M235.66666666666669,4987.015743179104C353.5,4987.015743179104 

353.5,6485.363321799308 471.33333333333337,6485.363321799308"></path><path class="link" id="link-SMC-SMC" 

d="M235.66666666666669,4987.015743179104C294.58333333333337,4987.015743179104 294.58333333333337,6523.829296424453 

353.5,6523.829296424453"></path><path class="link" id="link-JKC-JKC" d="M235.66666666666669,4987.015743179104C294.58333333333337,4987.015743179104 

294.58333333333337,6588.259803921568 353.5,6588.259803921568"></path><path class="link" id="link-SRC-SRC" 

d="M589.1666666666667,6196.868512110726C648.0833333333334,6196.868512110726 648.0833333333334,6196.868512110726 707,6196.868512110726"></path><path 

class="link" id="link-NAN-NAN" d="M589.1666666666667,6462.283737024221C648.0833333333334,6462.283737024221 648.0833333333334,6462.283737024221 

707,6462.283737024221"></path><path class="link" id="link-TCN-TCN" d="M589.1666666666667,6439.204152249135C648.0833333333334,6439.204152249135 

648.0833333333334,6439.204152249135 707,6439.204152249135"></path><path class="link" id="link-PNC-PNC" 

d="M589.1666666666667,6416.1245674740485C648.0833333333334,6416.1245674740485 648.0833333333334,6416.1245674740485 707,6416.1245674740485"></path><path 

class="link" id="link-SPC-SPC" d="M353.5,6588.259803921568C530.25,6588.259803921568 530.25,6566.141868512111 707,6566.141868512111"></path><path class="link" 

id="link-GDC-GDC" d="M353.5,6588.259803921568C530.25,6588.259803921568 530.25,6577.681660899654 707,6577.681660899654"></path><path class="link" id="link-LKY-

LKY" d="M353.5,6588.259803921568C412.4166666666667,6588.259803921568 412.4166666666667,6620.955882352941 

471.33333333333337,6620.955882352941"></path><path class="link" id="link-JBG-JBG" 

d="M471.33333333333337,6620.955882352941C589.1666666666667,6620.955882352941 589.1666666666667,6600.76124567474 707,6600.76124567474"></path><path 

class="link" id="link-DOGE-DOGE" d="M471.33333333333337,6620.955882352941C530.25,6620.955882352941 530.25,6641.150519031142 

589.1666666666667,6641.150519031142"></path><path class="link" id="link-APE-APE" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 

648.0833333333334,6623.840830449827 707,6623.840830449827"></path><path class="link" id="link-NYAN-NYAN" 

d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 648.0833333333334,6635.3806228373705 707,6635.3806228373705"></path><path 

class="link" id="link-CAT-CAT" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 648.0833333333334,6646.920415224913 

707,6646.920415224913"></path><path class="link" id="link-PND-PND" d="M589.1666666666667,6641.150519031142C648.0833333333334,6641.150519031142 

648.0833333333334,6658.4602076124565 707,6658.4602076124565"></path><path class="link" id="link-SBC-SBC" 

d="M589.1666666666667,6393.0449826989625C648.0833333333334,6393.0449826989625 648.0833333333334,6393.0449826989625 707,6393.0449826989625"></path><path 

class="link" id="link-ADT-ADT" d="M471.33333333333337,6485.363321799308C530.25,6485.363321799308 530.25,6485.363321799308 

589.1666666666667,6485.363321799308"></path><path class="link" id="link-COL-COL" 

d="M589.1666666666667,6485.363321799308C648.0833333333334,6485.363321799308 648.0833333333334,6485.363321799308 707,6485.363321799308"></path><path 

class="link" id="link-DNC-DNC" d="M353.5,6523.829296424453C530.25,6523.829296424453 530.25,6508.442906574394 707,6508.442906574394"></path><path class="link" 

id="link-GEO-GEO" d="M353.5,6523.829296424453C530.25,6523.829296424453 530.25,6519.982698961938 707,6519.982698961938"></path><path class="link" id="link-SPT-

SPT" d="M353.5,6523.829296424453C412.4166666666667,6523.829296424453 412.4166666666667,6543.062283737025 

471.33333333333337,6543.062283737025"></path><path class="link" id="link-CPR-CPR" d="M471.33333333333337,6543.062283737025C530.25,6543.062283737025 

530.25,6543.062283737025 589.1666666666667,6543.062283737025"></path><path class="link" id="link-PINGAS-PINGAS" 

d="M589.1666666666667,6543.062283737025C648.0833333333334,6543.062283737025 648.0833333333334,6543.062283737025 707,6543.062283737025"></path><path 

class="link" id="link-BEER-BEER" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6219.948096885813 

707,6219.948096885813"></path><path class="link" id="link-FISH-FISH" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6231.487889273356 707,6231.487889273356"></path><path class="link" id="link-COLA-COLA" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6243.027681660899 707,6243.027681660899"></path><path 

class="link" id="link-TEL-TEL" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6254.567474048443 

707,6254.567474048443"></path><path class="link" id="link-VDC-VDC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6266.107266435986 707,6266.107266435986"></path><path class="link" id="link-WWW-WWW" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6277.64705882353 707,6277.64705882353"></path><path 

class="link" id="link-SHOP-SHOP" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6289.186851211073 

707,6289.186851211073"></path><path class="link" id="link-HAC-HAC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6300.726643598616 707,6300.726643598616"></path><path class="link" id="link-HDC-HDC" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6312.266435986159 707,6312.266435986159"></path><path 

class="link" id="link-LADY-LADY" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6323.806228373703 

707,6323.806228373703"></path><path class="link" id="link-MUSC-MUSC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6335.346020761246 707,6335.346020761246"></path><path class="link" id="link-PAS-PAS" 

d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6346.88581314879 707,6346.88581314879"></path><path 

class="link" id="link-CIC-CIC" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 648.0833333333334,6358.425605536332 

707,6358.425605536332"></path><path class="link" id="link-OIL-OIL" d="M589.1666666666667,6294.9567474048445C648.0833333333334,6294.9567474048445 

648.0833333333334,6369.965397923876 707,6369.965397923876"></path><path class="link" id="link-STY-STY" 

d="M589.1666666666667,1096.2802768166089C648.0833333333334,1096.2802768166089 648.0833333333334,1096.2802768166089 707,1096.2802768166089"></path><path 

class="link" id="link-ZTC-ZTC" d="M589.1666666666667,1188.5986159169552C648.0833333333334,1188.5986159169552 648.0833333333334,1188.5986159169552 

707,1188.5986159169552"></path><path class="link" id="link-QBT-QBT" d="M235.66666666666669,1360.6353828215895C471.33333333333337,1360.6353828215895 

471.33333333333337,1292.4567474048442 707,1292.4567474048442"></path><path class="link" id="link-FLT-FLT" 

d="M235.66666666666669,1360.6353828215895C471.33333333333337,1360.6353828215895 471.33333333333337,1303.9965397923875 

707,1303.9965397923875"></path><path class="link" id="link-NVC-NVC" d="M235.66666666666669,1360.6353828215895C294.58333333333337,1360.6353828215895 

294.58333333333337,1485.4528612675367 353.5,1485.4528612675367"></path><path class="link" id="link-ZEIT-ZEIT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1327.076124567474 707,1327.076124567474"></path><path class="link" id="link-XMAS-XMAS" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1338.6159169550172 707,1338.6159169550172"></path><path class="link" id="link-CDC-CDC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1350.1557093425606 707,1350.1557093425606"></path><path class="link" id="link-GLX-GLX" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1361.6955017301038 707,1361.6955017301038"></path><path class="link" id="link-NEC-NEC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1373.235294117647 707,1373.235294117647"></path><path class="link" id="link-HBN-HBN" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1384.7750865051903 707,1384.7750865051903"></path><path class="link" id="link-BTG-BTG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1396.3148788927335 707,1396.3148788927335"></path><path class="link" id="link-SAV-SAV" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1407.8546712802768 707,1407.8546712802768"></path><path class="link" id="link-PPL-PPL" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1419.3944636678202 707,1419.3944636678202"></path><path class="link" id="link-SHT-SHT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1430.9342560553634 707,1430.9342560553634"></path><path class="link" id="link-CIN-CIN" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1442.4740484429067 707,1442.4740484429067"></path><path class="link" id="link-MINT-MINT" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1454.01384083045 707,1454.01384083045"></path><path class="link" id="link-BOC-BOC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1465.5536332179931 707,1465.5536332179931"></path><path class="link" id="link-BC-BC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1477.0934256055364 707,1477.0934256055364"></path><path class="link" id="link-TEK-TEK" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1488.6332179930796 707,1488.6332179930796"></path><path class="link" id="link-CGB-CGB" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1500.1730103806228 707,1500.1730103806228"></path><path class="link" id="link-NIG-NIG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1511.712802768166 707,1511.712802768166"></path><path class="link" id="link-PHS-PHS" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1523.2525951557093 707,1523.2525951557093"></path><path class="link" id="link-GRA-GRA" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1534.7923875432525 707,1534.7923875432525"></path><path class="link" id="link-BITB-BITB" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1546.3321799307957 707,1546.3321799307957"></path><path class="link" id="link-UFC-UFC" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1557.871972318339 707,1557.871972318339"></path><path class="link" id="link-TAG-TAG" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1569.4117647058824 707,1569.4117647058824"></path><path class="link" id="link-LK7-LK7" 

d="M353.5,1485.4528612675367C530.25,1485.4528612675367 530.25,1580.9515570934257 707,1580.9515570934257"></path><path class="link" id="link-CMC-CMC" 

d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 471.33333333333337,1604.0311418685121 

589.1666666666667,1604.0311418685121"></path><path class="link" id="link-CAP-CAP" d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 

471.33333333333337,1627.1107266435986 589.1666666666667,1627.1107266435986"></path><path class="link" id="link-DMD-DMD" 

d="M353.5,1485.4528612675367C471.33333333333337,1485.4528612675367 471.33333333333337,1655.9602076124568 

589.1666666666667,1655.9602076124568"></path><path class="link" id="link-YAC-YAC" d="M353.5,1485.4528612675367C412.4166666666667,1485.4528612675367 

412.4166666666667,1777.8068389985751 471.33333333333337,1777.8068389985751"></path><path class="link" id="link-ONC-ONC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1684.8096885813147 

707,1684.8096885813147"></path><path class="link" id="link-APC-APC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1696.3494809688582 707,1696.3494809688582"></path><path class="link" id="link-ECO-ECO" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1707.8892733564012 

707,1707.8892733564012"></path><path class="link" id="link-KING-KING" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1719.4290657439446 707,1719.4290657439446"></path><path class="link" id="link-PGC-PGC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1730.9688581314877 

707,1730.9688581314877"></path><path class="link" id="link-CENT-CENT" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1742.508650519031 707,1742.508650519031"></path><path class="link" id="link-CACH-CACH" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1754.0484429065743 

707,1754.0484429065743"></path><path class="link" id="link-HRC-HRC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1765.5882352941176 707,1765.5882352941176"></path><path class="link" id="link-QQC-QQC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1777.1280276816608 

707,1777.1280276816608"></path><path class="link" id="link-JPU-JPU" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1788.6678200692043 707,1788.6678200692043"></path><path class="link" id="link-null-null" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1800.2076124567475 

707,1800.2076124567475"></path><path class="link" id="link-FRE-FRE" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1811.7474048442907 707,1811.7474048442907"></path><path class="link" id="link-FATE-FATE" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1823.2871972318342 

707,1823.2871972318342"></path><path class="link" id="link-ZCC-ZCC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1834.8269896193772 707,1834.8269896193772"></path><path class="link" id="link-MCC-MCC" 

d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 589.1666666666667,1846.3667820069206 

707,1846.3667820069206"></path><path class="link" id="link-MRC-MRC" d="M471.33333333333337,1777.8068389985751C589.1666666666667,1777.8068389985751 

589.1666666666667,1857.9065743944636 707,1857.9065743944636"></path><path class="link" id="link-VTC-VTC" 

d="M471.33333333333337,1777.8068389985751C530.25,1777.8068389985751 530.25,1880.98615916955 589.1666666666667,1880.98615916955"></path><path class="link" 

id="link-ALT-ALT" d="M589.1666666666667,1880.98615916955C648.0833333333334,1880.98615916955 648.0833333333334,1880.98615916955 

707,1880.98615916955"></path><path class="link" id="link-GRW-GRW" d="M589.1666666666667,1655.9602076124568C648.0833333333334,1655.9602076124568 

648.0833333333334,1650.190311418685 707,1650.190311418685"></path><path class="link" id="link-BAC-BAC" 

d="M589.1666666666667,1655.9602076124568C648.0833333333334,1655.9602076124568 648.0833333333334,1661.7301038062283 707,1661.7301038062283"></path><path 

class="link" id="link-LBW-LBW" d="M589.1666666666667,1627.1107266435986C648.0833333333334,1627.1107266435986 648.0833333333334,1627.1107266435986 

707,1627.1107266435986"></path><path class="link" id="link-PYC-PYC" d="M589.1666666666667,1604.0311418685121C648.0833333333334,1604.0311418685121 

648.0833333333334,1604.0311418685121 707,1604.0311418685121"></path><path class="link" id="link-DTC-DTC" 

d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 648.0833333333334,1142.439446366782 707,1142.439446366782"></path><path 

class="link" id="link-CDN-CDN" d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 648.0833333333334,1153.9792387543253 

707,1153.9792387543253"></path><path class="link" id="link-FTW-FTW" d="M589.1666666666667,1153.9792387543253C648.0833333333334,1153.9792387543253 

648.0833333333334,1165.5190311418687 707,1165.5190311418687"></path><path class="link" id="link-TEA-TEA" 

d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1234.757785467128 707,1234.757785467128"></path><path 

class="link" id="link-MYR-MYR" d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1246.2975778546713 

707,1246.2975778546713"></path><path class="link" id="link-CHC-CHC" d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 

648.0833333333334,1257.8373702422145 707,1257.8373702422145"></path><path class="link" id="link-MZC-MZC" 

d="M589.1666666666667,1252.0674740484428C648.0833333333334,1252.0674740484428 648.0833333333334,1269.3771626297578 707,1269.3771626297578"></path><path 

class="link" id="link-QRK-QRK" d="M235.66666666666669,2056.176121072315C294.58333333333337,2056.176121072315 294.58333333333337,2056.176121072315 

353.5,2056.176121072315"></path><path class="link" id="link-OBC-OBC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1904.0657439446366 

707,1904.0657439446366"></path><path class="link" id="link-ZUR-ZUR" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1915.60553633218 

707,1915.60553633218"></path><path class="link" id="link-VLD-VLD" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1927.145328719723 

707,1927.145328719723"></path><path class="link" id="link-ANI-ANI" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1938.6851211072665 

707,1938.6851211072665"></path><path class="link" id="link-WIKI-WIKI" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1950.2249134948095 

707,1950.2249134948095"></path><path class="link" id="link-DIME-DIME" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1961.764705882353 

707,1961.764705882353"></path><path class="link" id="link-MTS-MTS" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1973.3044982698962 

707,1973.3044982698962"></path><path class="link" id="link-OFF-OFF" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1984.8442906574394 

707,1984.8442906574394"></path><path class="link" id="link-TBC-TBC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,1996.3840830449826 

707,1996.3840830449826"></path><path class="link" id="link-PRT-PRT" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2007.923875432526 

707,2007.923875432526"></path><path class="link" id="link-DOUG-DOUG" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2019.463667820069 

707,2019.463667820069"></path><path class="link" id="link-SEC-SEC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2031.0034602076125 

707,2031.0034602076125"></path><path class="link" id="link-MET-MET" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2042.5432525951555 

707,2042.5432525951555"></path><path class="link" id="link-MOL-MOL" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2054.083044982699 

707,2054.083044982699"></path><path class="link" id="link-SOMA-SOMA" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2065.6228373702425 

707,2065.6228373702425"></path><path class="link" id="link-ATO-ATO" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2077.1626297577855 

707,2077.1626297577855"></path><path class="link" id="link-QB-QB" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2088.702422145329 

707,2088.702422145329"></path><path class="link" id="link-FZ-FZ" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2100.242214532872 

707,2100.242214532872"></path><path class="link" id="link-SRC-SRC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2111.7820069204154 

707,2111.7820069204154"></path><path class="link" id="link-RVD-RVD" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2123.3217993079584 

707,2123.3217993079584"></path><path class="link" id="link-MUE-MUE" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2134.861591695502 

707,2134.861591695502"></path><path class="link" id="link-UNC-UNC" d="M353.5,2056.176121072315C530.25,2056.176121072315 530.25,2146.401384083045 

707,2146.401384083045"></path><path class="link" id="link-DRK-DRK" d="M353.5,2056.176121072315C412.4166666666667,2056.176121072315 

412.4166666666667,2736.912376358743 471.33333333333337,2736.912376358743"></path><path class="link" id="link-CC-CC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2169.4809688581313 707,2169.4809688581313"></path><path 

class="link" id="link-FVZ-FVZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2181.0207612456747 

707,2181.0207612456747"></path><path class="link" id="link-ELTC-ELTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2192.5605536332178 707,2192.5605536332178"></path><path class="link" id="link-ESC-ESC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2204.100346020761 707,2204.100346020761"></path><path 

class="link" id="link-XAN-XAN" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2215.640138408304 

707,2215.640138408304"></path><path class="link" id="link-Sync-Sync" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2227.1799307958477 707,2227.1799307958477"></path><path class="link" id="link-FUSE-FUSE" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2238.7197231833907 707,2238.7197231833907"></path><path 

class="link" id="link-WITCH-WITCH" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2250.259515570934 

707,2250.259515570934"></path><path class="link" id="link-ZEB-ZEB" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2261.7993079584776 707,2261.7993079584776"></path><path class="link" id="link-CLD-CLD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2273.3391003460206 707,2273.3391003460206"></path><path 

class="link" id="link-RW-RW" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2284.878892733564 

707,2284.878892733564"></path><path class="link" id="link-BTO-BTO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2296.4186851211075 707,2296.4186851211075"></path><path class="link" id="link-SRZ-SRZ" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2307.9584775086505 707,2307.9584775086505"></path><path 

class="link" id="link-BIZ-BIZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2319.498269896194 

707,2319.498269896194"></path><path class="link" id="link-DGORE-DGORE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2331.0380622837374 707,2331.0380622837374"></path><path class="link" id="link-Pal-Pal" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2342.5778546712804 707,2342.5778546712804"></path><path 

class="link" id="link-SND-SND" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2354.117647058824 

707,2354.117647058824"></path><path class="link" id="link-MWC-MWC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2365.657439446367 707,2365.657439446367"></path><path class="link" id="link-LIN-LIN" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2377.1972318339103 707,2377.1972318339103"></path><path 

class="link" id="link-DSV-DSV" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2388.7370242214533 

707,2388.7370242214533"></path><path class="link" id="link-BOOTY-BOOTY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2400.276816608997 707,2400.276816608997"></path><path class="link" id="link-MTS-MTS" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2411.81660899654 707,2411.81660899654"></path><path 

class="link" id="link-PIGGY-PIGGY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2423.3564013840833 

707,2423.3564013840833"></path><path class="link" id="link-MAG-MAG" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2434.8961937716263 707,2434.8961937716263"></path><path class="link" id="link-MIL-MIL" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2446.4359861591697 707,2446.4359861591697"></path><path 

class="link" id="link-VMINE-VMINE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2457.9757785467127 

707,2457.9757785467127"></path><path class="link" id="link-LOL-LOL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2469.515570934256 707,2469.515570934256"></path><path class="link" id="link-DEPO-GBP-DEPO-GBP" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2481.055363321799 707,2481.055363321799"></path><path 

class="link" id="link-MHYC-MHYC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2492.5951557093426 

707,2492.5951557093426"></path><path class="link" id="link-XCR-XCR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2504.1349480968856 707,2504.1349480968856"></path><path class="link" id="link-CSO-CSO" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2515.674740484429 707,2515.674740484429"></path><path 

class="link" id="link-WeTk-WeTk" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2527.214532871972 

707,2527.214532871972"></path><path class="link" id="link-PP-PP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2538.7543252595156 707,2538.7543252595156"></path><path class="link" id="link-CYX-CYX" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2550.2941176470586 707,2550.2941176470586"></path><path 

class="link" id="link-TRUST-TRUST" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2561.833910034602 

707,2561.833910034602"></path><path class="link" id="link-TMC-TMC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2573.3737024221455 707,2573.3737024221455"></path><path class="link" id="link-BULBA-BULBA" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2584.9134948096885 707,2584.9134948096885"></path><path 

class="link" id="link-RACE-RACE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2596.453287197232 

707,2596.453287197232"></path><path class="link" id="link-SPCC-SPCC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2607.993079584775 707,2607.993079584775"></path><path class="link" id="link-AZC-AZC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2619.5328719723184 707,2619.5328719723184"></path><path 

class="link" id="link-HODOR-HODOR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2631.0726643598614 

707,2631.0726643598614"></path><path class="link" id="link-AMBER-AMBER" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2642.612456747405 707,2642.612456747405"></path><path class="link" id="link-GOD-GOD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2654.152249134948 707,2654.152249134948"></path><path 

class="link" id="link-LMR-LMR" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2665.6920415224913 

707,2665.6920415224913"></path><path class="link" id="link-NeWO-NeWO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2677.2318339100343 707,2677.2318339100343"></path><path class="link" id="link-CryptoXTC-CryptoXTC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2688.7716262975778 707,2688.7716262975778"></path><path 

class="link" id="link-gue-gue" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2700.311418685121 

707,2700.311418685121"></path><path class="link" id="link-XURO-XURO" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2711.8512110726642 707,2711.8512110726642"></path><path class="link" id="link-WVS-WVS" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2723.3910034602077 707,2723.3910034602077"></path><path 

class="link" id="link-GLY-GLY" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2734.930795847751 

707,2734.930795847751"></path><path class="link" id="link-FRAC-FRAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2746.470588235294 707,2746.470588235294"></path><path class="link" id="link-MWC-MWC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2758.0103806228376 707,2758.0103806228376"></path><path 

class="link" id="link-LIT-LIT" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2769.5501730103806 

707,2769.5501730103806"></path><path class="link" id="link-Neos-Neos" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2781.089965397924 707,2781.089965397924"></path><path class="link" id="link-KiB-KiB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2792.629757785467 707,2792.629757785467"></path><path 

class="link" id="link-EQX-EQX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2804.1695501730105 

707,2804.1695501730105"></path><path class="link" id="link-TRS-TRS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2815.7093425605535 707,2815.7093425605535"></path><path class="link" id="link-CCB-CCB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2827.249134948097 707,2827.249134948097"></path><path 

class="link" id="link-MIN-MIN" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2838.7889273356404 

707,2838.7889273356404"></path><path class="link" id="link-TNZ-TNZ" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2850.3287197231834 707,2850.3287197231834"></path><path class="link" id="link-WCC-WCC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2861.868512110727 707,2861.868512110727"></path><path 

class="link" id="link-CRCK-CRCK" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2873.40830449827 

707,2873.40830449827"></path><path class="link" id="link-GRE-GRE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2884.9480968858134 707,2884.9480968858134"></path><path class="link" id="link-CHILD-CHILD" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2896.4878892733564 707,2896.4878892733564"></path><path 

class="link" id="link-LIMX-LIMX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2908.0276816609 

707,2908.0276816609"></path><path class="link" id="link-ROS-ROS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2919.567474048443 707,2919.567474048443"></path><path class="link" id="link-Voot-Voot" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2931.1072664359863 707,2931.1072664359863"></path><path 

class="link" id="link-STC-STC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2942.6470588235293 

707,2942.6470588235293"></path><path class="link" id="link-BS-BS" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2954.1868512110727 707,2954.1868512110727"></path><path class="link" id="link-Envy-Envy" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2965.7266435986157 707,2965.7266435986157"></path><path 

class="link" id="link-Iaura-Iaura" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,2977.266435986159 

707,2977.266435986159"></path><path class="link" id="link-EXCL-EXCL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,2988.806228373702 707,2988.806228373702"></path><path class="link" id="link-LTCX-LTCX" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3000.3460207612457 707,3000.3460207612457"></path><path 

class="link" id="link-DP-DP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3011.8858131487887 

707,3011.8858131487887"></path><path class="link" id="link-NL-NL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3023.425605536332 707,3023.425605536332"></path><path class="link" id="link-MTC-MTC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3034.965397923875 707,3034.965397923875"></path><path 

class="link" id="link-suc-suc" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3046.5051903114186 

707,3046.5051903114186"></path><path class="link" id="link-METAL-METAL" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3058.0449826989616 707,3058.0449826989616"></path><path class="link" id="link-HPC-HPC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3069.584775086505 707,3069.584775086505"></path><path 

class="link" id="link-GHOST-GHOST" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3081.1245674740485 

707,3081.1245674740485"></path><path class="link" id="link-NAC-NAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3092.6643598615915 707,3092.6643598615915"></path><path class="link" id="link-WSTL-WSTL" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3104.204152249135 707,3104.204152249135"></path><path 

class="link" id="link-PURE-PURE" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3115.743944636678 

707,3115.743944636678"></path><path class="link" id="link-SPARK-SPARK" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3127.2837370242214 707,3127.2837370242214"></path><path class="link" id="link-GRN-GRN" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3138.823529411765 707,3138.823529411765"></path><path 

class="link" id="link-OPTI-OPTI" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3150.363321799308 

707,3150.363321799308"></path><path class="link" id="link-KRYP-KRYP" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3161.9031141868513 707,3161.9031141868513"></path><path class="link" id="link-MOB-MOB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3173.442906574395 707,3173.442906574395"></path><path 

class="link" id="link-ACC-ACC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3184.982698961938 

707,3184.982698961938"></path><path class="link" id="link-NKT-NKT" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3196.5224913494812 707,3196.5224913494812"></path><path class="link" id="link-MLGB-MLGB" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3208.0622837370242 707,3208.0622837370242"></path><path 

class="link" id="link-LFTC-LFTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3219.6020761245677 

707,3219.6020761245677"></path><path class="link" id="link-RTC-RTC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3231.1418685121107 707,3231.1418685121107"></path><path class="link" id="link-CBR-CBR" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3242.681660899654 707,3242.681660899654"></path><path 

class="link" id="link-TEX-TEX" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3254.221453287197 

707,3254.221453287197"></path><path class="link" id="link-SMAC-SMAC" d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 

589.1666666666667,3265.7612456747406 707,3265.7612456747406"></path><path class="link" id="link-MC-MC" 

d="M471.33333333333337,2736.912376358743C589.1666666666667,2736.912376358743 589.1666666666667,3277.3010380622836 707,3277.3010380622836"></path><path 

class="link" id="link-X14-X14" d="M471.33333333333337,2736.912376358743C530.25,2736.912376358743 530.25,3306.150519031142 

589.1666666666667,3306.150519031142"></path><path class="link" id="link-BBL-BBL" d="M471.33333333333337,2736.912376358743C530.25,2736.912376358743 

530.25,3479.247404844291 589.1666666666667,3479.247404844291"></path><path class="link" id="link-FIRE-FIRE" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3335 707,3335"></path><path class="link" id="link-BACK-BACK" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3346.5397923875435 707,3346.5397923875435"></path><path 

class="link" id="link-MInC-MInC" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3358.079584775087 

707,3358.079584775087"></path><path class="link" id="link-LIZE-LIZE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3369.6193771626295 707,3369.6193771626295"></path><path class="link" id="link-NHC-NHC" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3381.159169550173 707,3381.159169550173"></path><path 

class="link" id="link-SPATA-SPATA" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3392.6989619377164 

707,3392.6989619377164"></path><path class="link" id="link-FBIT-FBIT" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3404.23875432526 707,3404.23875432526"></path><path class="link" id="link-LIMI-LIMI" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3415.7785467128024 707,3415.7785467128024"></path><path 

class="link" id="link-CRYSTAL-CRYSTAL" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3427.318339100346 

707,3427.318339100346"></path><path class="link" id="link-BBC-BBC" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3438.8581314878893 707,3438.8581314878893"></path><path class="link" id="link-OT-OT" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3450.3979238754328 707,3450.3979238754328"></path><path 

class="link" id="link-COF-COF" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3461.9377162629753 

707,3461.9377162629753"></path><path class="link" id="link-XDE-XDE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3473.4775086505188 707,3473.4775086505188"></path><path class="link" id="link-ANG-ANG" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3485.017301038062 707,3485.017301038062"></path><path 

class="link" id="link-NMB-NMB" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3496.5570934256057 

707,3496.5570934256057"></path><path class="link" id="link-POS-POS" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3508.0968858131487 707,3508.0968858131487"></path><path class="link" id="link-GRYF-GRYF" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3519.636678200692 707,3519.636678200692"></path><path 

class="link" id="link-Dino-Dino" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3531.176470588235 

707,3531.176470588235"></path><path class="link" id="link-VLT-VLT" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3542.7162629757786 707,3542.7162629757786"></path><path class="link" id="link-ISIS-ISIS" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3554.2560553633216 707,3554.2560553633216"></path><path 

class="link" id="link-HTML5-HTML5" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3565.795847750865 

707,3565.795847750865"></path><path class="link" id="link-ALEA-ALEA" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3577.3356401384085 707,3577.3356401384085"></path><path class="link" id="link-B1bl3-B1bl3" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3588.875432525952 707,3588.875432525952"></path><path 

class="link" id="link-CORE-CORE" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3600.415224913495 

707,3600.415224913495"></path><path class="link" id="link-U-U" d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 

648.0833333333334,3611.955017301038 707,3611.955017301038"></path><path class="link" id="link-City-City" 

d="M589.1666666666667,3479.247404844291C648.0833333333334,3479.247404844291 648.0833333333334,3623.4948096885814 707,3623.4948096885814"></path><path 

class="link" id="link-SOLE-SOLE" d="M589.1666666666667,3306.150519031142C648.0833333333334,3306.150519031142 648.0833333333334,3300.38062283737 

707,3300.38062283737"></path><path class="link" id="link-BCSH-BCSH" d="M589.1666666666667,3306.150519031142C648.0833333333334,3306.150519031142 

648.0833333333334,3311.9204152249135 707,3311.9204152249135"></path><path class="link" id="link-ECN-ECN" 

d="M589.1666666666667,1067.430795847751C648.0833333333334,1067.430795847751 648.0833333333334,1061.6608996539792 707,1061.6608996539792"></path><path 

class="link" id="link-MAX-MAX" d="M589.1666666666667,1067.430795847751C648.0833333333334,1067.430795847751 648.0833333333334,1073.2006920415224 

707,1073.2006920415224"></path><path class="link" id="link-XDC-XDC" d="M589.1666666666667,1038.5813148788927C648.0833333333334,1038.5813148788927 

648.0833333333334,1038.5813148788927 707,1038.5813148788927"></path><path class="link" id="link-AMK-AMK" 

d="M589.1666666666667,1015.5017301038063C648.0833333333334,1015.5017301038063 648.0833333333334,1015.5017301038063 707,1015.5017301038063"></path><path 

class="link" id="link-PHO-PHO" d="M589.1666666666667,986.6522491349481C648.0833333333334,986.6522491349481 648.0833333333334,980.8823529411765 

707,980.8823529411765"></path><path class="link" id="link-365-365" d="M589.1666666666667,986.6522491349481C648.0833333333334,986.6522491349481 

648.0833333333334,992.4221453287197 707,992.4221453287197"></path><path class="link" id="link-PAC-PAC" 

d="M589.1666666666667,1211.6782006920416C648.0833333333334,1211.6782006920416 648.0833333333334,1211.6782006920416 707,1211.6782006920416"></path><g 

class="node" transform="translate(707,11.539792387543253)"><circle r="4.5" id="circle-NMC-NMC" class="circle-NMC circle-fork-BTC"></circle><text id="text-NMC-NMC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NMC</text></g><g class="node" transform="translate(589.1666666666667,1119.3598615916953)"><circle 

r="4.75" id="circle-IXC-IXC" class="circle-IXC circle-fork-BTC"></circle><text id="text-IXC-IXC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">IXC</text></g><g class="node" transform="translate(707,1119.3598615916953)"><circle r="4.5" id="circle-I0C-I0C" class="circle-I0C circle-fork-IXC"></circle><text id="text-

I0C-I0C" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">I0C</text></g><g class="node" transform="translate(707,911.6435986159171)"><circle 

r="4.5" id="circle-SC-SC" class="circle-SC circle-fork-BTC"></circle><text id="text-SC-SC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SC</text></g><g class="node" transform="translate(707,888.5640138408304)"><circle r="4.5" id="circle-GG-GG" class="circle-GG circle-fork-BTC"></circle><text id="text-

GG-GG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GG</text></g><g class="node" transform="translate

(117.8333333333333,4097.234774831328)"><circle r="5.25" id="circle-TBX-TBX" class="circle-TBX circle-fork-BTC"></circle><text id="text-TBX-TBX" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.75)" style="text-anchor: end;">TBX</text></g><g class="node" transform="translate(707,3646.5743944636683)"><circle r="4.5" id="circle-FBX-

FBX" class="circle-FBX circle-fork-TBX"></circle><text id="text-FBX-FBX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FBX</text></g><g 

class="node" transform="translate(235.66666666666669,4987.015743179104)"><circle r="61" id="circle-LTC-LTC" class="circle-LTC circle-fork-TBX"></circle><text id="text-LTC-

LTC" dx="-8" dy=".31em" class="btc" transform="translate(-67.8)" style="text-anchor: end;">LTC</text></g><g class="node" transform="translate(707,3681.193771626298)"><circle 

r="4.5" id="circle-BQC-BQC" class="circle-BQC circle-fork-LTC"></circle><text id="text-BQC-BQC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BQC</text></g><g class="node" transform="translate(589.1666666666667,6196.868512110726)"><circle r="4.75" id="circle-FTC-FTC" class="circle-FTC circle-fork-

LTC"></circle><text id="text-FTC-FTC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">FTC</text></g><g class="node" transform="translate

(707,6196.868512110726)"><circle r="4.5" id="circle-SRC-SRC" class="circle-SRC circle-fork-FTC"></circle><text id="text-SRC-SRC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SRC</text></g><g class="node" transform="translate(707,6127.629757785467)"><circle r="4.5" id="circle-NET-NET" 

class="circle-NET circle-fork-LTC"></circle><text id="text-NET-NET" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NET</text></g><g 

class="node" transform="translate(707,6104.550173010381)"><circle r="4.5" id="circle-FRK-FRK" class="circle-FRK circle-fork-LTC"></circle><text id="text-FRK-FRK" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRK</text></g><g class="node" transform="translate(707,6081.470588235294)"><circle r="4.5" id="circle-

ANC-ANC" class="circle-ANC circle-fork-LTC"></circle><text id="text-ANC-ANC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANC</text></g><g 

class="node" transform="translate(707,6058.391003460208)"><circle r="4.5" id="circle-IFC-IFC" class="circle-IFC circle-fork-LTC"></circle><text id="text-IFC-IFC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">IFC</text></g><g class="node" transform="translate(707,6035.311418685121)"><circle r="4.5" id="circle-XNC-XNC" 

class="circle-XNC circle-fork-LTC"></circle><text id="text-XNC-XNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XNC</text></g><g 

class="node" transform="translate(707,6012.231833910035)"><circle r="4.5" id="circle-FLO-FLO" class="circle-FLO circle-fork-LTC"></circle><text id="text-FLO-FLO" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLO</text></g><g class="node" transform="translate(589.1666666666667,6462.283737024221)"><circle 

r="4.75" id="circle-MEC-MEC" class="circle-MEC circle-fork-LTC"></circle><text id="text-MEC-MEC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">MEC</text></g><g class="node" transform="translate(707,6462.283737024221)"><circle r="4.5" id="circle-NAN-NAN" class="circle-NAN circle-fork-MEC"></circle><text 

id="text-NAN-NAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NAN</text></g><g class="node" transform="translate

(589.1666666666667,6439.204152249135)"><circle r="4.75" id="circle-MNC-MNC" class="circle-MNC circle-fork-LTC"></circle><text id="text-MNC-MNC" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">MNC</text></g><g class="node" transform="translate(707,6439.204152249135)"><circle r="4.5" id="circle-TCN-

TCN" class="circle-TCN circle-fork-MNC"></circle><text id="text-TCN-TCN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TCN</text></g><g 

class="node" transform="translate(707,5942.993079584775)"><circle r="4.5" id="circle-DGC-DGC" class="circle-DGC circle-fork-LTC"></circle><text id="text-DGC-DGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DGC</text></g><g class="node" transform="translate(589.1666666666667,6416.1245674740485)"><circle 

r="4.75" id="circle-WDC-WDC" class="circle-WDC circle-fork-LTC"></circle><text id="text-WDC-WDC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">WDC</text></g><g class="node" transform="translate(707,6416.1245674740485)"><circle r="4.5" id="circle-PNC-PNC" class="circle-PNC circle-fork-WDC"></circle><text 

id="text-PNC-PNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PNC</text></g><g class="node" transform="translate

(707,5896.833910034602)"><circle r="4.5" id="circle-NBL-NBL" class="circle-NBL circle-fork-LTC"></circle><text id="text-NBL-NBL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NBL</text></g><g class="node" transform="translate(707,5873.754325259515)"><circle r="4.5" id="circle-ALF-ALF" class="circle-

ALF circle-fork-LTC"></circle><text id="text-ALF-ALF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALF</text></g><g class="node" 

transform="translate(707,5850.674740484429)"><circle r="4.5" id="circle-ARG-ARG" class="circle-ARG circle-fork-LTC"></circle><text id="text-ARG-ARG" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ARG</text></g><g class="node" transform="translate(707,5827.595155709342)"><circle r="4.5" id="circle-PWC-PWC" 

class="circle-PWC circle-fork-LTC"></circle><text id="text-PWC-PWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PWC</text></g><g 

class="node" transform="translate(707,5804.515570934256)"><circle r="4.5" id="circle-KGC-KGC" class="circle-KGC circle-fork-LTC"></circle><text id="text-KGC-KGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KGC</text></g><g class="node" transform="translate(707,5781.435986159169)"><circle r="4.5" id="circle-

FST-FST" class="circle-FST circle-fork-LTC"></circle><text id="text-FST-FST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FST</text></g><g 

class="node" transform="translate(707,5758.356401384083)"><circle r="4.5" id="circle-MEM-MEM" class="circle-MEM circle-fork-LTC"></circle><text id="text-MEM-MEM" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEM</text></g><g class="node" transform="translate(707,5735.276816608996)"><circle r="4.5" 

id="circle-GLC-GLC" class="circle-GLC circle-fork-LTC"></circle><text id="text-GLC-GLC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GLC</text></g><g class="node" transform="translate(707,5712.19723183391)"><circle r="4.5" id="circle-6CN-6CN" class="circle-6CN circle-fork-LTC"></circle><text 

id="text-6CN-6CN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">6CN</text></g><g class="node" transform="translate

(707,5689.117647058823)"><circle r="4.5" id="circle-RCH-RCH" class="circle-RCH circle-fork-LTC"></circle><text id="text-RCH-RCH" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RCH</text></g><g class="node" transform="translate(707,5666.038062283737)"><circle r="4.5" id="circle-REC-REC" 

class="circle-REC circle-fork-LTC"></circle><text id="text-REC-REC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">REC</text></g><g 

class="node" transform="translate(707,5642.9584775086505)"><circle r="4.5" id="circle-eDC-eDC" class="circle-eDC circle-fork-LTC"></circle><text id="text-eDC-eDC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">eDC</text></g><g class="node" transform="translate(707,5619.8788927335645)"><circle r="4.5" 

id="circle-EMD-EMD" class="circle-EMD circle-fork-LTC"></circle><text id="text-EMD-EMD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">EMD</text></g><g class="node" transform="translate(707,5596.799307958478)"><circle r="4.5" id="circle-SXC-SXC" class="circle-SXC circle-fork-LTC"></circle><text 

id="text-SXC-SXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SXC</text></g><g class="node" transform="translate

(707,5573.719723183392)"><circle r="4.5" id="circle-NC-NC" class="circle-NC circle-fork-LTC"></circle><text id="text-NC-NC" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">NC</text></g><g class="node" transform="translate(707,5550.640138408305)"><circle r="4.5" id="circle-TDC-TDC" class="circle-TDC circle-fork-

LTC"></circle><text id="text-TDC-TDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TDC</text></g><g class="node" transform="translate

(707,5527.560553633219)"><circle r="4.5" id="circle-VLC-VLC" class="circle-VLC circle-fork-LTC"></circle><text id="text-VLC-VLC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VLC</text></g><g class="node" transform="translate(353.5,6588.259803921568)"><circle r="5.25" id="circle-JKC-JKC" 

class="circle-JKC circle-fork-LTC"></circle><text id="text-JKC-JKC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">JKC</text></g><g 

class="node" transform="translate(471.33333333333337,6620.955882352941)"><circle r="5" id="circle-LKY-LKY" class="circle-LKY circle-fork-JKC"></circle><text id="text-LKY-LKY" 

dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: end;">LKY</text></g><g class="node" transform="translate

(589.1666666666667,6641.150519031142)"><circle r="5.5" id="circle-DOGE-DOGE" class="circle-DOGE circle-fork-LKY"></circle><text id="text-DOGE-DOGE" dx="-8" dy=".31em" 

class="btc" transform="translate(-1)" style="text-anchor: end;">DOGE</text></g><g class="node" transform="translate(707,6623.840830449827)"><circle r="4.5" id="circle-APE-APE" 

class="circle-APE circle-fork-DOGE"></circle><text id="text-APE-APE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">APE</text></g><g 

class="node" transform="translate(707,6635.3806228373705)"><circle r="4.5" id="circle-NYAN-NYAN" class="circle-NYAN circle-fork-DOGE"></circle><text id="text-NYAN-NYAN" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NYAN</text></g><g class="node" transform="translate(707,6646.920415224913)"><circle r="4.5" 

id="circle-CAT-CAT" class="circle-CAT circle-fork-DOGE"></circle><text id="text-CAT-CAT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CAT</text></g><g class="node" transform="translate(707,6658.4602076124565)"><circle r="4.5" id="circle-PND-PND" class="circle-PND circle-fork-DOGE"></circle><text 

id="text-PND-PND" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PND</text></g><g class="node" transform="translate

(707,6600.76124567474)"><circle r="4.5" id="circle-JBG-JBG" class="circle-JBG circle-fork-LKY"></circle><text id="text-JBG-JBG" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">JBG</text></g><g class="node" transform="translate(707,6566.141868512111)"><circle r="4.5" id="circle-SPC-SPC" 

class="circle-SPC circle-fork-JKC"></circle><text id="text-SPC-SPC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPC</text></g><g class="node" 

transform="translate(707,6577.681660899654)"><circle r="4.5" id="circle-GDC-GDC" class="circle-GDC circle-fork-JKC"></circle><text id="text-GDC-GDC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">GDC</text></g><g class="node" transform="translate(707,5481.401384083045)"><circle r="4.5" id="circle-CSC-CSC" 

class="circle-CSC circle-fork-LTC"></circle><text id="text-CSC-CSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CSC</text></g><g 

class="node" transform="translate(707,5458.321799307959)"><circle r="4.5" id="circle-RED-RED" class="circle-RED circle-fork-LTC"></circle><text id="text-RED-RED" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RED</text></g><g class="node" transform="translate(707,5435.242214532872)"><circle r="4.5" id="circle-

EGC-EGC" class="circle-EGC circle-fork-LTC"></circle><text id="text-EGC-EGC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EGC</text></g><g 

class="node" transform="translate(707,5412.162629757785)"><circle r="4.5" id="circle-ELP-ELP" class="circle-ELP circle-fork-LTC"></circle><text id="text-ELP-ELP" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELP</text></g><g class="node" transform="translate(707,5389.083044982699)"><circle r="4.5" id="circle-

QTC-QTC" class="circle-QTC circle-fork-LTC"></circle><text id="text-QTC-QTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">QTC</text></g><g class="node" transform="translate(707,5366.003460207612)"><circle r="4.5" id="circle-USC-USC" class="circle-USC circle-fork-LTC"></circle><text 

id="text-USC-USC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">USC</text></g><g class="node" transform="translate

(707,5342.923875432525)"><circle r="4.5" id="circle-FEC-FEC" class="circle-FEC circle-fork-LTC"></circle><text id="text-FEC-FEC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FEC</text></g><g class="node" transform="translate(707,5319.844290657439)"><circle r="4.5" id="circle-GLD-GLD" 

class="circle-GLD circle-fork-LTC"></circle><text id="text-GLD-GLD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLD</text></g><g 

class="node" transform="translate(707,5296.764705882352)"><circle r="4.5" id="circle-PXC-PXC" class="circle-PXC circle-fork-LTC"></circle><text id="text-PXC-PXC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PXC</text></g><g class="node" transform="translate(589.1666666666667,6393.0449826989625)"><circle 

r="4.75" id="circle-RYC-RYC" class="circle-RYC circle-fork-LTC"></circle><text id="text-RYC-RYC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">RYC</text></g><g class="node" transform="translate(707,6393.0449826989625)"><circle r="4.5" id="circle-SBC-SBC" class="circle-SBC circle-fork-RYC"></circle><text 

id="text-SBC-SBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SBC</text></g><g class="node" transform="translate

(707,5250.605536332179)"><circle r="4.5" id="circle-NRB-NRB" class="circle-NRB circle-fork-LTC"></circle><text id="text-NRB-NRB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NRB</text></g><g class="node" transform="translate(707,5227.525951557093)"><circle r="4.5" id="circle-CTC-CTC" 

class="circle-CTC circle-fork-LTC"></circle><text id="text-CTC-CTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CTC</text></g><g 

class="node" transform="translate(707,5204.446366782006)"><circle r="4.5" id="circle-JPC-JPC" class="circle-JPC circle-fork-LTC"></circle><text id="text-JPC-JPC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JPC</text></g><g class="node" transform="translate(707,5181.36678200692)"><circle r="4.5" id="circle-

CNC-CNC" class="circle-CNC circle-fork-LTC"></circle><text id="text-CNC-CNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CNC</text></g><g 

class="node" transform="translate(707,5158.2871972318335)"><circle r="4.5" id="circle-EZC-EZC" class="circle-EZC circle-fork-LTC"></circle><text id="text-EZC-EZC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EZC</text></g><g class="node" transform="translate(707,5135.2076124567475)"><circle r="4.5" id="circle-

ICE-ICE" class="circle-ICE circle-fork-LTC"></circle><text id="text-ICE-ICE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ICE</text></g><g 

class="node" transform="translate(707,5112.128027681661)"><circle r="4.5" id="circle-HYC-HYC" class="circle-HYC circle-fork-LTC"></circle><text id="text-HYC-HYC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HYC</text></g><g class="node" transform="translate(707,5089.048442906575)"><circle r="4.5" id="circle-

ELC-ELC" class="circle-ELC circle-fork-LTC"></circle><text id="text-ELC-ELC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELC</text></g><g 

class="node" transform="translate(707,5065.968858131488)"><circle r="4.5" id="circle-ZEU-ZEU" class="circle-ZEU circle-fork-LTC"></circle><text id="text-ZEU-ZEU" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZEU</text></g><g class="node" transform="translate(707,5042.889273356402)"><circle r="4.5" id="circle-

BEL-BEL" class="circle-BEL circle-fork-LTC"></circle><text id="text-BEL-BEL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BEL</text></g><g 

class="node" transform="translate(707,5019.809688581315)"><circle r="4.5" id="circle-PLT-PLT" class="circle-PLT circle-fork-LTC"></circle><text id="text-PLT-PLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PLT</text></g><g class="node" transform="translate(707,4996.730103806229)"><circle r="4.5" id="circle-

EXC-EXC" class="circle-EXC circle-fork-LTC"></circle><text id="text-EXC-EXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXC</text></g><g 

class="node" transform="translate(707,4973.650519031142)"><circle r="4.5" id="circle-ITC-ITC" class="circle-ITC circle-fork-LTC"></circle><text id="text-ITC-ITC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ITC</text></g><g class="node" transform="translate(707,4950.570934256056)"><circle r="4.5" id="circle-

GIL-GIL" class="circle-GIL circle-fork-LTC"></circle><text id="text-GIL-GIL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GIL</text></g><g 

class="node" transform="translate(707,4927.491349480969)"><circle r="4.5" id="circle-PCN-PCN" class="circle-PCN circle-fork-LTC"></circle><text id="text-PCN-PCN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PCN</text></g><g class="node" transform="translate(707,4904.411764705883)"><circle r="4.5" id="circle-

WEC-WEC" class="circle-WEC circle-fork-LTC"></circle><text id="text-WEC-WEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">WEC</text></g><g class="node" transform="translate(707,4881.332179930796)"><circle r="4.5" id="circle-TYC-TYC" class="circle-TYC circle-fork-LTC"></circle><text 

id="text-TYC-TYC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TYC</text></g><g class="node" transform="translate

(707,4858.252595155709)"><circle r="4.5" id="circle-ARC-ARC" class="circle-ARC circle-fork-LTC"></circle><text id="text-ARC-ARC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ARC</text></g><g class="node" transform="translate(707,4835.173010380623)"><circle r="4.5" id="circle-CRC-CRC" 

class="circle-CRC circle-fork-LTC"></circle><text id="text-CRC-CRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CRC</text></g><g 

class="node" transform="translate(707,4812.093425605536)"><circle r="4.5" id="circle-DBL-DBL" class="circle-DBL circle-fork-LTC"></circle><text id="text-DBL-DBL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DBL</text></g><g class="node" transform="translate(707,4789.01384083045)"><circle r="4.5" id="circle-

GME-GME" class="circle-GME circle-fork-LTC"></circle><text id="text-GME-GME" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GME</text></g><g class="node" transform="translate(471.33333333333337,6485.363321799308)"><circle r="4.75" id="circle-STR-STR" class="circle-STR circle-fork-

LTC"></circle><text id="text-STR-STR" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">STR</text></g><g class="node" transform="translate

(589.1666666666667,6485.363321799308)"><circle r="4.75" id="circle-ADT-ADT" class="circle-ADT circle-fork-STR"></circle><text id="text-ADT-ADT" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">ADT</text></g><g class="node" transform="translate(707,6485.363321799308)"><circle r="4.5" id="circle-COL-

COL" class="circle-COL circle-fork-ADT"></circle><text id="text-COL-COL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COL</text></g><g 

class="node" transform="translate(707,4742.854671280277)"><circle r="4.5" id="circle-FLS-FLS" class="circle-FLS circle-fork-LTC"></circle><text id="text-FLS-FLS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLS</text></g><g class="node" transform="translate(707,4719.77508650519)"><circle r="4.5" id="circle-

QWC-QWC" class="circle-QWC circle-fork-LTC"></circle><text id="text-QWC-QWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">QWC</text></g><g class="node" transform="translate(707,4696.695501730104)"><circle r="4.5" id="circle-VAG-VAG" class="circle-VAG circle-fork-LTC"></circle><text 

id="text-VAG-VAG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VAG</text></g><g class="node" transform="translate

(707,4673.615916955017)"><circle r="4.5" id="circle-BEST-BEST" class="circle-BEST circle-fork-LTC"></circle><text id="text-BEST-BEST" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BEST</text></g><g class="node" transform="translate(707,4650.536332179931)"><circle r="4.5" id="circle-POK-POK" 

class="circle-POK circle-fork-LTC"></circle><text id="text-POK-POK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">POK</text></g><g 

class="node" transform="translate(707,4627.4567474048445)"><circle r="4.5" id="circle-CYB-CYB" class="circle-CYB circle-fork-LTC"></circle><text id="text-CYB-CYB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CYB</text></g><g class="node" transform="translate(707,4604.377162629758)"><circle r="4.5" id="circle-

AMC-AMC" class="circle-AMC circle-fork-LTC"></circle><text id="text-AMC-AMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AMC</text></g><g 

class="node" transform="translate(707,4581.2975778546715)"><circle r="4.5" id="circle-BOS-BOS" class="circle-BOS circle-fork-LTC"></circle><text id="text-BOS-BOS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOS</text></g><g class="node" transform="translate(707,4558.217993079585)"><circle r="4.5" id="circle-

LOVE-LOVE" class="circle-LOVE circle-fork-LTC"></circle><text id="text-LOVE-LOVE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LOVE</text></g><g class="node" transform="translate(353.5,6523.829296424453)"><circle r="5.25" id="circle-SMC-SMC" class="circle-SMC circle-fork-LTC"></circle><text 

id="text-SMC-SMC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">SMC</text></g><g class="node" transform="translate

(707,6508.442906574394)"><circle r="4.5" id="circle-DNC-DNC" class="circle-DNC circle-fork-SMC"></circle><text id="text-DNC-DNC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DNC</text></g><g class="node" transform="translate(471.33333333333337,6543.062283737025)"><circle r="4.75" id="circle-

SPT-SPT" class="circle-SPT circle-fork-SMC"></circle><text id="text-SPT-SPT" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SPT</text></g><g class="node" transform="translate(589.1666666666667,6543.062283737025)"><circle r="4.75" id="circle-CPR-CPR" class="circle-CPR circle-fork-

SPT"></circle><text id="text-CPR-CPR" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CPR</text></g><g class="node" transform="translate

(707,6543.062283737025)"><circle r="4.5" id="circle-PINGAS-PINGAS" class="circle-PINGAS circle-fork-CPR"></circle><text id="text-PINGAS-PINGAS" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">PINGAS</text></g><g class="node" transform="translate(707,6519.982698961938)"><circle r="4.5" id="circle-GEO-

GEO" class="circle-GEO circle-fork-SMC"></circle><text id="text-GEO-GEO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GEO</text></g><g 

class="node" transform="translate(707,4512.058823529412)"><circle r="4.5" id="circle-LOTTO-LOTTO" class="circle-LOTTO circle-fork-LTC"></circle><text id="text-LOTTO-

LOTTO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOTTO</text></g><g class="node" transform="translate(707,4488.979238754325)"><circle 

r="4.5" id="circle-XIV-XIV" class="circle-XIV circle-fork-LTC"></circle><text id="text-XIV-XIV" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XIV</text></g><g class="node" transform="translate(707,4465.899653979239)"><circle r="4.5" id="circle-LDC-LDC" class="circle-LDC circle-fork-LTC"></circle><text 

id="text-LDC-LDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LDC</text></g><g class="node" transform="translate

(707,4442.820069204152)"><circle r="4.5" id="circle-CHI-CHI" class="circle-CHI circle-fork-LTC"></circle><text id="text-CHI-CHI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHI</text></g><g class="node" transform="translate(707,4419.740484429066)"><circle r="4.5" id="circle-MEOW-MEOW" 

class="circle-MEOW circle-fork-LTC"></circle><text id="text-MEOW-MEOW" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEOW</text></g><g 

class="node" transform="translate(707,4396.660899653979)"><circle r="4.5" id="circle-HTC-HTC" class="circle-HTC circle-fork-LTC"></circle><text id="text-HTC-HTC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HTC</text></g><g class="node" transform="translate(707,4373.581314878893)"><circle r="4.5" id="circle-

NWC-NWC" class="circle-NWC circle-fork-LTC"></circle><text id="text-NWC-NWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">NWC</text></g><g class="node" transform="translate(707,4350.501730103806)"><circle r="4.5" id="circle-HAM-HAM" class="circle-HAM circle-fork-LTC"></circle><text 

id="text-HAM-HAM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HAM</text></g><g class="node" transform="translate

(707,4327.422145328719)"><circle r="4.5" id="circle-VWC-VWC" class="circle-VWC circle-fork-LTC"></circle><text id="text-VWC-VWC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VWC</text></g><g class="node" transform="translate(707,4304.342560553633)"><circle r="4.5" id="circle-MOON-MOON" 

class="circle-MOON circle-fork-LTC"></circle><text id="text-MOON-MOON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOON</text></g><g 

class="node" transform="translate(707,4281.262975778546)"><circle r="4.5" id="circle-TFC-TFC" class="circle-TFC circle-fork-LTC"></circle><text id="text-TFC-TFC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TFC</text></g><g class="node" transform="translate(707,4258.18339100346)"><circle r="4.5" id="circle-

TIPS-TIPS" class="circle-TIPS circle-fork-LTC"></circle><text id="text-TIPS-TIPS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TIPS</text></g><g class="node" transform="translate(707,4235.103806228373)"><circle r="4.5" id="circle-42-42" class="circle-42 circle-fork-LTC"></circle><text id="text-42-

42" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">42</text></g><g class="node" transform="translate(707,4212.024221453287)"><circle r="4.5" 

id="circle-CAGE-CAGE" class="circle-CAGE circle-fork-LTC"></circle><text id="text-CAGE-CAGE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CAGE</text></g><g class="node" transform="translate(707,4188.9446366782)"><circle r="4.5" id="circle-BOS-BOS" class="circle-BOS circle-fork-LTC"></circle><text 

id="text-BOS-BOS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOS</text></g><g class="node" transform="translate

(707,4165.865051903114)"><circle r="4.5" id="circle-VOLT-VOLT" class="circle-VOLT circle-fork-LTC"></circle><text id="text-VOLT-VOLT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VOLT</text></g><g class="node" transform="translate(707,4142.785467128027)"><circle r="4.5" id="circle-MDC-MDC" 

class="circle-MDC circle-fork-LTC"></circle><text id="text-MDC-MDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MDC</text></g><g 

class="node" transform="translate(707,4119.705882352941)"><circle r="4.5" id="circle-BAT-BAT" class="circle-BAT circle-fork-LTC"></circle><text id="text-BAT-BAT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BAT</text></g><g class="node" transform="translate(707,4096.6262975778545)"><circle r="4.5" 

id="circle-SOL-SOL" class="circle-SOL circle-fork-LTC"></circle><text id="text-SOL-SOL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SOL</text></g><g class="node" transform="translate(707,4073.5467128027685)"><circle r="4.5" id="circle-NOBL-NOBL" class="circle-NOBL circle-fork-LTC"></circle><text 

id="text-NOBL-NOBL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NOBL</text></g><g class="node" transform="translate

(707,4050.4671280276816)"><circle r="4.5" id="circle-MOSC-MOSC" class="circle-MOSC circle-fork-LTC"></circle><text id="text-MOSC-MOSC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MOSC</text></g><g class="node" transform="translate(707,4027.3875432525956)"><circle r="4.5" id="circle-SOC-SOC" 

class="circle-SOC circle-fork-LTC"></circle><text id="text-SOC-SOC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SOC</text></g><g 

class="node" transform="translate(707,4004.3079584775087)"><circle r="4.5" id="circle-JUN-JUN" class="circle-JUN circle-fork-LTC"></circle><text id="text-JUN-JUN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JUN</text></g><g class="node" transform="translate(707,3981.2283737024222)"><circle r="4.5" 

id="circle-BEC-BEC" class="circle-BEC circle-fork-LTC"></circle><text id="text-BEC-BEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BEC</text></g><g class="node" transform="translate(707,3958.1487889273358)"><circle r="4.5" id="circle-ALC-ALC" class="circle-ALC circle-fork-LTC"></circle><text 

id="text-ALC-ALC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALC</text></g><g class="node" transform="translate

(707,3935.0692041522493)"><circle r="4.5" id="circle-KARM-KARM" class="circle-KARM circle-fork-LTC"></circle><text id="text-KARM-KARM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KARM</text></g><g class="node" transform="translate(707,3911.9896193771624)"><circle r="4.5" id="circle-HBC-HBC" 

class="circle-HBC circle-fork-LTC"></circle><text id="text-HBC-HBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HBC</text></g><g 

class="node" transform="translate(707,3888.9100346020764)"><circle r="4.5" id="circle-CORG-CORG" class="circle-CORG circle-fork-LTC"></circle><text id="text-CORG-CORG" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CORG</text></g><g class="node" transform="translate(707,3865.8304498269895)"><circle r="4.5" 

id="circle-OLY-OLY" class="circle-OLY circle-fork-LTC"></circle><text id="text-OLY-OLY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">OLY</text></g><g class="node" transform="translate(707,3842.7508650519026)"><circle r="4.5" id="circle-SNP-SNP" class="circle-SNP circle-fork-LTC"></circle><text 

id="text-SNP-SNP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SNP</text></g><g class="node" transform="translate

(707,3819.6712802768166)"><circle r="4.5" id="circle-FLAP-FLAP" class="circle-FLAP circle-fork-LTC"></circle><text id="text-FLAP-FLAP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FLAP</text></g><g class="node" transform="translate(707,3796.5916955017296)"><circle r="4.5" id="circle-DUCK-DUCK" 

class="circle-DUCK circle-fork-LTC"></circle><text id="text-DUCK-DUCK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DUCK</text></g><g 

class="node" transform="translate(707,3727.3529411764707)"><circle r="4.5" id="circle-CCC-CCC" class="circle-CCC circle-fork-LTC"></circle><text id="text-CCC-CCC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCC</text></g><g class="node" transform="translate(707,3692.7335640138413)"><circle r="4.5" 

id="circle-APP-APP" class="circle-APP circle-fork-LTC"></circle><text id="text-APP-APP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">APP</text></g><g class="node" transform="translate(707,3704.273356401384)"><circle r="4.5" id="circle-GMC-GMC" class="circle-GMC circle-fork-LTC"></circle><text 

id="text-GMC-GMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GMC</text></g><g class="node" transform="translate

(707,3715.8131487889273)"><circle r="4.5" id="circle-ENC-ENC" class="circle-ENC circle-fork-LTC"></circle><text id="text-ENC-ENC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ENC</text></g><g class="node" transform="translate(707,6150.7093425605535)"><circle r="4.5" id="circle-RON-RON" 

class="circle-RON circle-fork-LTC"></circle><text id="text-RON-RON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RON</text></g><g 

class="node" transform="translate(589.1666666666667,6294.9567474048445)"><circle r="8" id="circle-PIC-PIC" class="circle-PIC circle-fork-LTC"></circle><text id="text-PIC-PIC" 

dx="-8" dy=".31em" class="btc" transform="translate(-3.5)" style="text-anchor: end;">PIC</text></g><g class="node" transform="translate(707,6219.948096885813)"><circle r="4.5" 

id="circle-BEER-BEER" class="circle-BEER circle-fork-PIC"></circle><text id="text-BEER-BEER" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BEER</text></g><g class="node" transform="translate(707,6346.88581314879)"><circle r="4.5" id="circle-PAS-PAS" class="circle-PAS circle-fork-PIC"></circle><text 

id="text-PAS-PAS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PAS</text></g><g class="node" transform="translate

(707,6277.64705882353)"><circle r="4.5" id="circle-WWW-WWW" class="circle-WWW circle-fork-PIC"></circle><text id="text-WWW-WWW" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">WWW</text></g><g class="node" transform="translate(707,6231.487889273356)"><circle r="4.5" id="circle-FISH-FISH" 

class="circle-FISH circle-fork-PIC"></circle><text id="text-FISH-FISH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FISH</text></g><g 

class="node" transform="translate(707,6243.027681660899)"><circle r="4.5" id="circle-COLA-COLA" class="circle-COLA circle-fork-PIC"></circle><text id="text-COLA-COLA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COLA</text></g><g class="node" transform="translate(707,6254.567474048443)"><circle r="4.5" 

id="circle-TEL-TEL" class="circle-TEL circle-fork-PIC"></circle><text id="text-TEL-TEL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TEL</text></g><g class="node" transform="translate(707,6266.107266435986)"><circle r="4.5" id="circle-VDC-VDC" class="circle-VDC circle-fork-PIC"></circle><text 

id="text-VDC-VDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VDC</text></g><g class="node" transform="translate

(707,6369.965397923876)"><circle r="4.5" id="circle-OIL-OIL" class="circle-OIL circle-fork-PIC"></circle><text id="text-OIL-OIL" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">OIL</text></g><g class="node" transform="translate(707,6289.186851211073)"><circle r="4.5" id="circle-SHOP-SHOP" class="circle-SHOP circle-

fork-PIC"></circle><text id="text-SHOP-SHOP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHOP</text></g><g class="node" 

transform="translate(707,6300.726643598616)"><circle r="4.5" id="circle-HAC-HAC" class="circle-HAC circle-fork-PIC"></circle><text id="text-HAC-HAC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HAC</text></g><g class="node" transform="translate(707,6312.266435986159)"><circle r="4.5" id="circle-HDC-HDC" 

class="circle-HDC circle-fork-PIC"></circle><text id="text-HDC-HDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HDC</text></g><g 

class="node" transform="translate(707,6323.806228373703)"><circle r="4.5" id="circle-LADY-LADY" class="circle-LADY circle-fork-PIC"></circle><text id="text-LADY-LADY" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LADY</text></g><g class="node" transform="translate(707,6335.346020761246)"><circle r="4.5" 

id="circle-MUSC-MUSC" class="circle-MUSC circle-fork-PIC"></circle><text id="text-MUSC-MUSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MUSC</text></g><g class="node" transform="translate(707,6358.425605536332)"><circle r="4.5" id="circle-CIC-CIC" class="circle-CIC circle-fork-PIC"></circle><text 

id="text-CIC-CIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CIC</text></g><g class="node" transform="translate

(707,3750.4325259515567)"><circle r="4.5" id="circle-CHAM-CHAM" class="circle-CHAM circle-fork-LTC"></circle><text id="text-CHAM-CHAM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHAM</text></g><g class="node" transform="translate(707,3761.9723183391)"><circle r="4.5" id="circle-NOTE-NOTE" 

class="circle-NOTE circle-fork-LTC"></circle><text id="text-NOTE-NOTE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NOTE</text></g><g 

class="node" transform="translate(707,3773.5121107266436)"><circle r="4.5" id="circle-FUNK-FUNK" class="circle-FUNK circle-fork-LTC"></circle><text id="text-FUNK-FUNK" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FUNK</text></g><g class="node" transform="translate(707,6173.7889273356395)"><circle r="4.5" 

id="circle-VMP-VMP" class="circle-VMP circle-fork-LTC"></circle><text id="text-VMP-VMP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">VMP</text></g><g class="node" transform="translate(707,3808.131487889273)"><circle r="4.5" id="circle-LYC-LYC" class="circle-LYC circle-fork-LTC"></circle><text 

id="text-LYC-LYC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LYC</text></g><g class="node" transform="translate

(707,3831.21107266436)"><circle r="4.5" id="circle-ZMB-ZMB" class="circle-ZMB circle-fork-LTC"></circle><text id="text-ZMB-ZMB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ZMB</text></g><g class="node" transform="translate(707,3854.290657439446)"><circle r="4.5" id="circle-MVC-MVC" 

class="circle-MVC circle-fork-LTC"></circle><text id="text-MVC-MVC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MVC</text></g><g 

class="node" transform="translate(707,3877.370242214533)"><circle r="4.5" id="circle-RBC-RBC" class="circle-RBC circle-fork-LTC"></circle><text id="text-RBC-RBC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RBC</text></g><g class="node" transform="translate(707,3900.449826989619)"><circle r="4.5" id="circle-

PHI-PHI" class="circle-PHI circle-fork-LTC"></circle><text id="text-PHI-PHI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHI</text></g><g 

class="node" transform="translate(707,3923.529411764706)"><circle r="4.5" id="circle-BLA-BLA" class="circle-BLA circle-fork-LTC"></circle><text id="text-BLA-BLA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BLA</text></g><g class="node" transform="translate(707,3946.6089965397923)"><circle r="4.5" id="circle-

FRY-FRY" class="circle-FRY circle-fork-LTC"></circle><text id="text-FRY-FRY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRY</text></g><g 

class="node" transform="translate(707,3969.688581314879)"><circle r="4.5" id="circle-RPD-RPD" class="circle-RPD circle-fork-LTC"></circle><text id="text-RPD-RPD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RPD</text></g><g class="node" transform="translate(707,3992.7681660899652)"><circle r="4.5" 

id="circle-LMC-LMC" class="circle-LMC circle-fork-LTC"></circle><text id="text-LMC-LMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LMC</text></g><g class="node" transform="translate(707,4015.847750865052)"><circle r="4.5" id="circle-ANT-ANT" class="circle-ANT circle-fork-LTC"></circle><text 

id="text-ANT-ANT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANT</text></g><g class="node" transform="translate

(707,4038.927335640138)"><circle r="4.5" id="circle-BEE-BEE" class="circle-BEE circle-fork-LTC"></circle><text id="text-BEE-BEE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BEE</text></g><g class="node" transform="translate(707,4062.006920415225)"><circle r="4.5" id="circle-CARBON-CARBON" 

class="circle-CARBON circle-fork-LTC"></circle><text id="text-CARBON-CARBON" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CARBON</text></g><g class="node" transform="translate(707,4085.086505190311)"><circle r="4.5" id="circle-SHC-SHC" class="circle-SHC circle-fork-LTC"></circle><text 

id="text-SHC-SHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHC</text></g><g class="node" transform="translate

(707,4108.166089965398)"><circle r="4.5" id="circle-VGC-VGC" class="circle-VGC circle-fork-LTC"></circle><text id="text-VGC-VGC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VGC</text></g><g class="node" transform="translate(707,4131.245674740485)"><circle r="4.5" id="circle-FSC-FSC" 

class="circle-FSC circle-fork-LTC"></circle><text id="text-FSC-FSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FSC</text></g><g class="node" 

transform="translate(707,4154.325259515571)"><circle r="4.5" id="circle-EQB-EQB" class="circle-EQB circle-fork-LTC"></circle><text id="text-EQB-EQB" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">EQB</text></g><g class="node" transform="translate(707,4177.404844290658)"><circle r="4.5" id="circle-PENG-

PENG" class="circle-PENG circle-fork-LTC"></circle><text id="text-PENG-PENG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PENG</text></g><g class="node" transform="translate(707,4200.484429065744)"><circle r="4.5" id="circle-ONI-ONI" class="circle-ONI circle-fork-LTC"></circle><text 

id="text-ONI-ONI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONI</text></g><g class="node" transform="translate

(707,4223.564013840831)"><circle r="4.5" id="circle-PCC-PCC" class="circle-PCC circle-fork-LTC"></circle><text id="text-PCC-PCC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PCC</text></g><g class="node" transform="translate(707,4246.643598615917)"><circle r="4.5" id="circle-VNC-VNC" 

class="circle-VNC circle-fork-LTC"></circle><text id="text-VNC-VNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VNC</text></g><g class="node" 

transform="translate(707,4269.723183391004)"><circle r="4.5" id="circle-TAXI-TAXI" class="circle-TAXI circle-fork-LTC"></circle><text id="text-TAXI-TAXI" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TAXI</text></g><g class="node" transform="translate(707,4292.80276816609)"><circle r="4.5" id="circle-BLL-BLL" 

class="circle-BLL circle-fork-LTC"></circle><text id="text-BLL-BLL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BLL</text></g><g class="node" 

transform="translate(707,4315.882352941177)"><circle r="4.5" id="circle-MCR-MCR" class="circle-MCR circle-fork-LTC"></circle><text id="text-MCR-MCR" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">MCR</text></g><g class="node" transform="translate(707,4338.961937716263)"><circle r="4.5" id="circle-MRS-MRS" 

class="circle-MRS circle-fork-LTC"></circle><text id="text-MRS-MRS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MRS</text></g><g 

class="node" transform="translate(707,4362.0415224913495)"><circle r="4.5" id="circle-LTB-LTB" class="circle-LTB circle-fork-LTC"></circle><text id="text-LTB-LTB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTB</text></g><g class="node" transform="translate(707,4385.1211072664355)"><circle r="4.5" 

id="circle-XXL-XXL" class="circle-XXL circle-fork-LTC"></circle><text id="text-XXL-XXL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XXL</text></g><g class="node" transform="translate(707,4408.200692041522)"><circle r="4.5" id="circle-SDM-SDM" class="circle-SDM circle-fork-LTC"></circle><text 

id="text-SDM-SDM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SDM</text></g><g class="node" transform="translate

(707,4431.280276816608)"><circle r="4.5" id="circle-PAND-PAND" class="circle-PAND circle-fork-LTC"></circle><text id="text-PAND-PAND" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PAND</text></g><g class="node" transform="translate(707,4454.359861591695)"><circle r="4.5" id="circle-RDD-RDD" 

class="circle-RDD circle-fork-LTC"></circle><text id="text-RDD-RDD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RDD</text></g><g 

class="node" transform="translate(707,4477.439446366781)"><circle r="4.5" id="circle-YACC-YACC" class="circle-YACC circle-fork-LTC"></circle><text id="text-YACC-YACC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">YACC</text></g><g class="node" transform="translate(707,4500.519031141868)"><circle r="4.5" 

id="circle-PRC-PRC" class="circle-PRC circle-fork-LTC"></circle><text id="text-PRC-PRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PRC</text></g><g class="node" transform="translate(707,4523.598615916955)"><circle r="4.5" id="circle-SUN-SUN" class="circle-SUN circle-fork-LTC"></circle><text 

id="text-SUN-SUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SUN</text></g><g class="node" transform="translate

(707,4546.678200692041)"><circle r="4.5" id="circle-SOCHI-SOCHI" class="circle-SOCHI circle-fork-LTC"></circle><text id="text-SOCHI-SOCHI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SOCHI</text></g><g class="node" transform="translate(707,4569.757785467128)"><circle r="4.5" id="circle-ZED-ZED" 

class="circle-ZED circle-fork-LTC"></circle><text id="text-ZED-ZED" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZED</text></g><g class="node" 

transform="translate(707,4592.837370242215)"><circle r="4.5" id="circle-TOP-TOP" class="circle-TOP circle-fork-LTC"></circle><text id="text-TOP-TOP" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TOP</text></g><g class="node" transform="translate(707,4615.916955017301)"><circle r="4.5" id="circle-AUR-AUR" 

class="circle-AUR circle-fork-LTC"></circle><text id="text-AUR-AUR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AUR</text></g><g class="node" 

transform="translate(707,4638.996539792388)"><circle r="4.5" id="circle-BELI-BELI" class="circle-BELI circle-fork-LTC"></circle><text id="text-BELI-BELI" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BELI</text></g><g class="node" transform="translate(707,4662.076124567475)"><circle r="4.5" id="circle-BELA-BELA" 

class="circle-BELA circle-fork-LTC"></circle><text id="text-BELA-BELA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BELA</text></g><g 

class="node" transform="translate(707,4685.155709342561)"><circle r="4.5" id="circle-COIN-COIN" class="circle-COIN circle-fork-LTC"></circle><text id="text-COIN-COIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COIN</text></g><g class="node" transform="translate(707,4708.235294117648)"><circle r="4.5" 

id="circle-PIG-PIG" class="circle-PIG circle-fork-LTC"></circle><text id="text-PIG-PIG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PIG</text></g><g class="node" transform="translate(707,4731.314878892734)"><circle r="4.5" id="circle-CCN-CCN" class="circle-CCN circle-fork-LTC"></circle><text 

id="text-CCN-CCN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCN</text></g><g class="node" transform="translate

(707,4754.394463667821)"><circle r="4.5" id="circle-SVC-SVC" class="circle-SVC circle-fork-LTC"></circle><text id="text-SVC-SVC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SVC</text></g><g class="node" transform="translate(707,4777.474048442907)"><circle r="4.5" id="circle-EXE-EXE" class="circle-

EXE circle-fork-LTC"></circle><text id="text-EXE-EXE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXE</text></g><g class="node" 

transform="translate(707,4800.553633217994)"><circle r="4.5" id="circle-JNY-JNY" class="circle-JNY circle-fork-LTC"></circle><text id="text-JNY-JNY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">JNY</text></g><g class="node" transform="translate(707,4823.63321799308)"><circle r="4.5" id="circle-GAM-GAM" class="circle-

GAM circle-fork-LTC"></circle><text id="text-GAM-GAM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GAM</text></g><g class="node" 

transform="translate(707,4846.7128027681665)"><circle r="4.5" id="circle-ISR-ISR" class="circle-ISR circle-fork-LTC"></circle><text id="text-ISR-ISR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ISR</text></g><g class="node" transform="translate(707,4869.7923875432525)"><circle r="4.5" id="circle-YOLO-YOLO" 

class="circle-YOLO circle-fork-LTC"></circle><text id="text-YOLO-YOLO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">YOLO</text></g><g 

class="node" transform="translate(707,4892.871972318339)"><circle r="4.5" id="circle-FREEB-FREEB" class="circle-FREEB circle-fork-LTC"></circle><text id="text-FREEB-

FREEB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FREEB</text></g><g class="node" transform="translate(707,4915.951557093425)"><circle 

r="4.5" id="circle-MXT-MXT" class="circle-MXT circle-fork-LTC"></circle><text id="text-MXT-MXT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MXT</text></g><g class="node" transform="translate(707,4939.031141868512)"><circle r="4.5" id="circle-IDC-IDC" class="circle-IDC circle-fork-LTC"></circle><text id="text-

IDC-IDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">IDC</text></g><g class="node" transform="translate(707,4962.110726643598)"><circle 

r="4.5" id="circle-FUN-FUN" class="circle-FUN circle-fork-LTC"></circle><text id="text-FUN-FUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FUN</text></g><g class="node" transform="translate(707,4985.190311418685)"><circle r="4.5" id="circle-AIM-AIM" class="circle-AIM circle-fork-LTC"></circle><text id="text-

AIM-AIM" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AIM</text></g><g class="node" transform="translate(707,5008.269896193771)"><circle 

r="4.5" id="circle-WFC-WFC" class="circle-WFC circle-fork-LTC"></circle><text id="text-WFC-WFC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">WFC</text></g><g class="node" transform="translate(707,5031.349480968858)"><circle r="4.5" id="circle-CFN-CFN" class="circle-CFN circle-fork-LTC"></circle><text 

id="text-CFN-CFN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CFN</text></g><g class="node" transform="translate

(707,5054.429065743944)"><circle r="4.5" id="circle-G8-G8" class="circle-G8 circle-fork-LTC"></circle><text id="text-G8-G8" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">G8</text></g><g class="node" transform="translate(707,5077.508650519031)"><circle r="4.5" id="circle-XXX-XXX" class="circle-XXX circle-fork-

LTC"></circle><text id="text-XXX-XXX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XXX</text></g><g class="node" transform="translate

(707,5100.588235294117)"><circle r="4.5" id="circle-QTL-QTL" class="circle-QTL circle-fork-LTC"></circle><text id="text-QTL-QTL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">QTL</text></g><g class="node" transform="translate(707,5123.667820069204)"><circle r="4.5" id="circle-FJC-FJC" class="circle-

FJC circle-fork-LTC"></circle><text id="text-FJC-FJC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FJC</text></g><g class="node" 

transform="translate(707,5146.747404844291)"><circle r="4.5" id="circle-AID-AID" class="circle-AID circle-fork-LTC"></circle><text id="text-AID-AID" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">AID</text></g><g class="node" transform="translate(707,5169.826989619377)"><circle r="4.5" id="circle-M.J-M.J" class="circle-M.J 

circle-fork-LTC"></circle><text id="text-M.J-M.J" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">M.J</text></g><g class="node" transform="translate

(707,5192.906574394464)"><circle r="4.5" id="circle-numc-numc" class="circle-numc circle-fork-LTC"></circle><text id="text-numc-numc" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">numc</text></g><g class="node" transform="translate(707,5215.98615916955)"><circle r="4.5" id="circle-RC-RC" class="circle-RC 

circle-fork-LTC"></circle><text id="text-RC-RC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RC</text></g><g class="node" transform="translate

(707,5239.065743944637)"><circle r="4.5" id="circle-CZC-CZC" class="circle-CZC circle-fork-LTC"></circle><text id="text-CZC-CZC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CZC</text></g><g class="node" transform="translate(707,5262.145328719723)"><circle r="4.5" id="circle-Kool-Kool" 

class="circle-Kool circle-fork-LTC"></circle><text id="text-Kool-Kool" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Kool</text></g><g class="node" 

transform="translate(707,5285.22491349481)"><circle r="4.5" id="circle-RSC-RSC" class="circle-RSC circle-fork-LTC"></circle><text id="text-RSC-RSC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">RSC</text></g><g class="node" transform="translate(707,5308.304498269896)"><circle r="4.5" id="circle-LTCD-LTCD" 

class="circle-LTCD circle-fork-LTC"></circle><text id="text-LTCD-LTCD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTCD</text></g><g 

class="node" transform="translate(707,5331.384083044983)"><circle r="4.5" id="circle-CPTL-CPTL" class="circle-CPTL circle-fork-LTC"></circle><text id="text-CPTL-CPTL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CPTL</text></g><g class="node" transform="translate(707,5354.463667820069)"><circle r="4.5" 

id="circle-BMY-BMY" class="circle-BMY circle-fork-LTC"></circle><text id="text-BMY-BMY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BMY</text></g><g class="node" transform="translate(707,5377.5432525951555)"><circle r="4.5" id="circle-LNKC-LNKC" class="circle-LNKC circle-fork-LTC"></circle><text 

id="text-LNKC-LNKC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LNKC</text></g><g class="node" transform="translate

(707,5400.622837370242)"><circle r="4.5" id="circle-BLP-BLP" class="circle-BLP circle-fork-LTC"></circle><text id="text-BLP-BLP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">BLP</text></g><g class="node" transform="translate(707,5423.7024221453285)"><circle r="4.5" id="circle-EVC-EVC" 

class="circle-EVC circle-fork-LTC"></circle><text id="text-EVC-EVC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EVC</text></g><g class="node" 

transform="translate(707,5446.782006920415)"><circle r="4.5" id="circle-GB-GB" class="circle-GB circle-fork-LTC"></circle><text id="text-GB-GB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">GB</text></g><g class="node" transform="translate(707,5469.861591695502)"><circle r="4.5" id="circle-SYS-SYS" class="circle-

SYS circle-fork-LTC"></circle><text id="text-SYS-SYS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SYS</text></g><g class="node" 

transform="translate(707,5492.941176470588)"><circle r="4.5" id="circle-BUY-BUY" class="circle-BUY circle-fork-LTC"></circle><text id="text-BUY-BUY" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BUY</text></g><g class="node" transform="translate(707,5516.020761245675)"><circle r="4.5" id="circle-ROOT-

ROOT" class="circle-ROOT circle-fork-LTC"></circle><text id="text-ROOT-ROOT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ROOT</text></g><g class="node" transform="translate(707,5539.100346020761)"><circle r="4.5" id="circle-TRDR-TRDR" class="circle-TRDR circle-fork-

LTC"></circle><text id="text-TRDR-TRDR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRDR</text></g><g class="node" transform="translate

(707,5562.179930795848)"><circle r="4.5" id="circle-MANA-MANA" class="circle-MANA circle-fork-LTC"></circle><text id="text-MANA-MANA" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MANA</text></g><g class="node" transform="translate(707,5585.259515570934)"><circle r="4.5" id="circle-SHADE-SHADE" 

class="circle-SHADE circle-fork-LTC"></circle><text id="text-SHADE-SHADE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHADE</text></g><g 

class="node" transform="translate(707,5608.339100346021)"><circle r="4.5" id="circle-XBOT-XBOT" class="circle-XBOT circle-fork-LTC"></circle><text id="text-XBOT-XBOT" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XBOT</text></g><g class="node" transform="translate(707,5631.418685121107)"><circle r="4.5" 

id="circle-CGA-CGA" class="circle-CGA circle-fork-LTC"></circle><text id="text-CGA-CGA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CGA</text></g><g class="node" transform="translate(707,5654.498269896194)"><circle r="4.5" id="circle-BTLS-BTLS" class="circle-BTLS circle-fork-LTC"></circle><text 

id="text-BTLS-BTLS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTLS</text></g><g class="node" transform="translate

(707,5677.577854671281)"><circle r="4.5" id="circle-VAC-VAC" class="circle-VAC circle-fork-LTC"></circle><text id="text-VAC-VAC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VAC</text></g><g class="node" transform="translate(707,5700.657439446367)"><circle r="4.5" id="circle-SLK-SLK" class="circle-

SLK circle-fork-LTC"></circle><text id="text-SLK-SLK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SLK</text></g><g class="node" 

transform="translate(707,5723.737024221454)"><circle r="4.5" id="circle-DOLLAR-DOLLAR" class="circle-DOLLAR circle-fork-LTC"></circle><text id="text-DOLLAR-DOLLAR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DOLLAR</text></g><g class="node" transform="translate(707,5746.81660899654)"><circle r="4.5" 

id="circle-SNG-SNG" class="circle-SNG circle-fork-LTC"></circle><text id="text-SNG-SNG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SNG</text></g><g class="node" transform="translate(707,5769.896193771627)"><circle r="4.5" id="circle-DPC-DPC" class="circle-DPC circle-fork-LTC"></circle><text 

id="text-DPC-DPC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DPC</text></g><g class="node" transform="translate

(707,5792.975778546713)"><circle r="4.5" id="circle-MTLMC-MTLMC" class="circle-MTLMC circle-fork-LTC"></circle><text id="text-MTLMC-MTLMC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">MTLMC</text></g><g class="node" transform="translate(707,5816.0553633218)"><circle r="4.5" id="circle-SEED-

SEED" class="circle-SEED circle-fork-LTC"></circle><text id="text-SEED-SEED" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SEED</text></g><g 

class="node" transform="translate(707,5839.134948096886)"><circle r="4.5" id="circle-SMBR-SMBR" class="circle-SMBR circle-fork-LTC"></circle><text id="text-SMBR-SMBR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SMBR</text></g><g class="node" transform="translate(707,5862.214532871973)"><circle r="4.5" 

id="circle-C2-C2" class="circle-C2 circle-fork-LTC"></circle><text id="text-C2-C2" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">C2</text></g><g 

class="node" transform="translate(707,5885.294117647059)"><circle r="4.5" id="circle-ONE-ONE" class="circle-ONE circle-fork-LTC"></circle><text id="text-ONE-ONE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONE</text></g><g class="node" transform="translate(707,5908.3737024221455)"><circle r="4.5" 

id="circle-DBU-DBU" class="circle-DBU circle-fork-LTC"></circle><text id="text-DBU-DBU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">DBU</text></g><g class="node" transform="translate(707,5931.4532871972315)"><circle r="4.5" id="circle-VTR-VTR" class="circle-VTR circle-fork-LTC"></circle><text 

id="text-VTR-VTR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VTR</text></g><g class="node" transform="translate

(707,5954.532871972318)"><circle r="4.5" id="circle-INS-INS" class="circle-INS circle-fork-LTC"></circle><text id="text-INS-INS" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">INS</text></g><g class="node" transform="translate(707,5977.612456747404)"><circle r="4.5" id="circle-DIBS-DIBS" class="circle-DIBS circle-fork-

LTC"></circle><text id="text-DIBS-DIBS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIBS</text></g><g class="node" transform="translate

(707,6000.692041522491)"><circle r="4.5" id="circle-DGMS-DGMS" class="circle-DGMS circle-fork-LTC"></circle><text id="text-DGMS-DGMS" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DGMS</text></g><g class="node" transform="translate(707,6023.771626297577)"><circle r="4.5" id="circle-FSC2-FSC2" 

class="circle-FSC2 circle-fork-LTC"></circle><text id="text-FSC2-FSC2" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FSC2</text></g><g 

class="node" transform="translate(707,6046.851211072664)"><circle r="4.5" id="circle-DIGI-DIGI" class="circle-DIGI circle-fork-LTC"></circle><text id="text-DIGI-DIGI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIGI</text></g><g class="node" transform="translate(707,6069.93079584775)"><circle r="4.5" id="circle-

CARSI-CARSI" class="circle-CARSI circle-fork-LTC"></circle><text id="text-CARSI-CARSI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CARSI</text></g><g class="node" transform="translate(707,6093.010380622837)"><circle r="4.5" id="circle-XTR-XTR" class="circle-XTR circle-fork-LTC"></circle><text 

id="text-XTR-XTR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XTR</text></g><g class="node" transform="translate

(707,6116.089965397923)"><circle r="4.5" id="circle-EMC2-EMC2" class="circle-EMC2 circle-fork-LTC"></circle><text id="text-EMC2-EMC2" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">EMC2</text></g><g class="node" transform="translate(707,6139.16955017301)"><circle r="4.5" id="circle-DDC-DDC" 

class="circle-DDC circle-fork-LTC"></circle><text id="text-DDC-DDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DDC</text></g><g 

class="node" transform="translate(707,3785.051903114187)"><circle r="4.5" id="circle-BRD-BRD" class="circle-BRD circle-fork-LTC"></circle><text id="text-BRD-BRD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BRD</text></g><g class="node" transform="translate(707,3738.892733564014)"><circle r="4.5" id="circle-

EMO-EMO" class="circle-EMO circle-fork-LTC"></circle><text id="text-EMO-EMO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">EMO</text></g><g class="node" transform="translate(707,4535.138408304498)"><circle r="4.5" id="circle-EUC-EUC" class="circle-EUC circle-fork-LTC"></circle><text 

id="text-EUC-EUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EUC</text></g><g class="node" transform="translate

(707,4765.934256055363)"><circle r="4.5" id="circle-KIMO-KIMO" class="circle-KIMO circle-fork-LTC"></circle><text id="text-KIMO-KIMO" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KIMO</text></g><g class="node" transform="translate(707,5273.685121107266)"><circle r="4.5" id="circle-RUP-RUP" 

class="circle-RUP circle-fork-LTC"></circle><text id="text-RUP-RUP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RUP</text></g><g 

class="node" transform="translate(707,5504.480968858132)"><circle r="4.5" id="circle-LEL-LEL" class="circle-LEL circle-fork-LTC"></circle><text id="text-LEL-LEL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LEL</text></g><g class="node" transform="translate(707,5919.913494809689)"><circle r="4.5" id="circle-

GIAR-GIAR" class="circle-GIAR circle-fork-LTC"></circle><text id="text-GIAR-GIAR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GIAR</text></g><g class="node" transform="translate(707,5966.072664359862)"><circle r="4.5" id="circle-FOF-FOF" class="circle-FOF circle-fork-LTC"></circle><text 

id="text-FOF-FOF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FOF</text></g><g class="node" transform="translate

(707,5989.152249134948)"><circle r="4.5" id="circle-NLG-NLG" class="circle-NLG circle-fork-LTC"></circle><text id="text-NLG-NLG" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NLG</text></g><g class="node" transform="translate(707,6162.249134948097)"><circle r="4.5" id="circle-BUN-BUN" 

class="circle-BUN circle-fork-LTC"></circle><text id="text-BUN-BUN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BUN</text></g><g 

class="node" transform="translate(707,3658.114186851211)"><circle r="4.5" id="circle-LQC-LQC" class="circle-LQC circle-fork-TBX"></circle><text id="text-LQC-LQC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LQC</text></g><g class="node" transform="translate(589.1666666666667,1096.2802768166089)"><circle 

r="4.75" id="circle-DVC-DVC" class="circle-DVC circle-fork-BTC"></circle><text id="text-DVC-DVC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">DVC</text></g><g class="node" transform="translate(707,1096.2802768166089)"><circle r="4.5" id="circle-STY-STY" class="circle-STY circle-fork-DVC"></circle><text 

id="text-STY-STY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">STY</text></g><g class="node" transform="translate

(589.1666666666667,1188.5986159169552)"><circle r="4.75" id="circle-FRC-FRC" class="circle-FRC circle-fork-BTC"></circle><text id="text-FRC-FRC" dx="-8" dy=".31em" 

class="btc" transform="translate(-0.25)" style="text-anchor: end;">FRC</text></g><g class="node" transform="translate(707,1188.5986159169552)"><circle r="4.5" id="circle-ZTC-

ZTC" class="circle-ZTC circle-fork-FRC"></circle><text id="text-ZTC-ZTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZTC</text></g><g 

class="node" transform="translate(235.66666666666669,1360.6353828215895)"><circle r="5.25" id="circle-PPC-PPC" class="circle-PPC circle-fork-BTC"></circle><text id="text-

PPC-PPC" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: end;">PPC</text></g><g class="node" transform="translate

(353.5,1485.4528612675367)"><circle r="11.25" id="circle-NVC-NVC" class="circle-NVC circle-fork-PPC"></circle><text id="text-NVC-NVC" dx="-8" dy=".31em" class="btc" 

transform="translate(-6.75)" style="text-anchor: end;">NVC</text></g><g class="node" transform="translate(471.33333333333337,1777.8068389985751)"><circle r="8.75" id="circle-

YAC-YAC" class="circle-YAC circle-fork-NVC"></circle><text id="text-YAC-YAC" dx="-8" dy=".31em" class="btc" transform="translate(-4.25)" style="text-anchor: end;">YAC</text></g><g 

class="node" transform="translate(707,1684.8096885813147)"><circle r="4.5" id="circle-ONC-ONC" class="circle-ONC circle-fork-YAC"></circle><text id="text-ONC-ONC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ONC</text></g><g class="node" transform="translate(707,1834.8269896193772)"><circle r="4.5" 

id="circle-ZCC-ZCC" class="circle-ZCC circle-fork-YAC"></circle><text id="text-ZCC-ZCC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ZCC</text></g><g class="node" transform="translate(707,1811.7474048442907)"><circle r="4.5" id="circle-FRE-FRE" class="circle-FRE circle-fork-YAC"></circle><text 

id="text-FRE-FRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRE</text></g><g class="node" transform="translate

(707,1742.508650519031)"><circle r="4.5" id="circle-CENT-CENT" class="circle-CENT circle-fork-YAC"></circle><text id="text-CENT-CENT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CENT</text></g><g class="node" transform="translate(707,1696.3494809688582)"><circle r="4.5" id="circle-APC-APC" 

class="circle-APC circle-fork-YAC"></circle><text id="text-APC-APC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">APC</text></g><g class="node" 

transform="translate(707,1707.8892733564012)"><circle r="4.5" id="circle-ECO-ECO" class="circle-ECO circle-fork-YAC"></circle><text id="text-ECO-ECO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ECO</text></g><g class="node" transform="translate(707,1719.4290657439446)"><circle r="4.5" id="circle-KING-KING" 

class="circle-KING circle-fork-YAC"></circle><text id="text-KING-KING" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KING</text></g><g 

class="node" transform="translate(707,1730.9688581314877)"><circle r="4.5" id="circle-PGC-PGC" class="circle-PGC circle-fork-YAC"></circle><text id="text-PGC-PGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PGC</text></g><g class="node" transform="translate(707,1857.9065743944636)"><circle r="4.5" 

id="circle-MRC-MRC" class="circle-MRC circle-fork-YAC"></circle><text id="text-MRC-MRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MRC</text></g><g class="node" transform="translate(707,1754.0484429065743)"><circle r="4.5" id="circle-CACH-CACH" class="circle-CACH circle-fork-YAC"></circle><text 

id="text-CACH-CACH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CACH</text></g><g class="node" transform="translate

(589.1666666666667,1880.98615916955)"><circle r="4.75" id="circle-VTC-VTC" class="circle-VTC circle-fork-YAC"></circle><text id="text-VTC-VTC" dx="-8" dy=".31em" class="btc" 

transform="translate(-0.25)" style="text-anchor: end;">VTC</text></g><g class="node" transform="translate(707,1880.98615916955)"><circle r="4.5" id="circle-ALT-ALT" 

class="circle-ALT circle-fork-VTC"></circle><text id="text-ALT-ALT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ALT</text></g><g class="node" 

transform="translate(707,1777.1280276816608)"><circle r="4.5" id="circle-QQC-QQC" class="circle-QQC circle-fork-YAC"></circle><text id="text-QQC-QQC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">QQC</text></g><g class="node" transform="translate(707,1788.6678200692043)"><circle r="4.5" id="circle-JPU-JPU" 

class="circle-JPU circle-fork-YAC"></circle><text id="text-JPU-JPU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">JPU</text></g><g class="node" 

transform="translate(707,1800.2076124567475)"><circle r="4.5" id="circle-null-null" class="circle-null circle-fork-YAC"></circle><text id="text-null-null" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;"></text></g><g class="node" transform="translate(707,1823.2871972318342)"><circle r="4.5" id="circle-FATE-FATE" class="circle-

FATE circle-fork-YAC"></circle><text id="text-FATE-FATE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FATE</text></g><g class="node" 

transform="translate(707,1765.5882352941176)"><circle r="4.5" id="circle-HRC-HRC" class="circle-HRC circle-fork-YAC"></circle><text id="text-HRC-HRC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HRC</text></g><g class="node" transform="translate(707,1846.3667820069206)"><circle r="4.5" id="circle-MCC-MCC" 

class="circle-MCC circle-fork-YAC"></circle><text id="text-MCC-MCC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MCC</text></g><g 

class="node" transform="translate(707,1396.3148788927335)"><circle r="4.5" id="circle-BTG-BTG" class="circle-BTG circle-fork-NVC"></circle><text id="text-BTG-BTG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTG</text></g><g class="node" transform="translate(707,1546.3321799307957)"><circle r="4.5" 

id="circle-BITB-BITB" class="circle-BITB circle-fork-NVC"></circle><text id="text-BITB-BITB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BITB</text></g><g class="node" transform="translate(707,1523.2525951557093)"><circle r="4.5" id="circle-PHS-PHS" class="circle-PHS circle-fork-NVC"></circle><text 

id="text-PHS-PHS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHS</text></g><g class="node" transform="translate

(707,1500.1730103806228)"><circle r="4.5" id="circle-CGB-CGB" class="circle-CGB circle-fork-NVC"></circle><text id="text-CGB-CGB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CGB</text></g><g class="node" transform="translate(589.1666666666667,1655.9602076124568)"><circle r="5" id="circle-DMD-

DMD" class="circle-DMD circle-fork-NVC"></circle><text id="text-DMD-DMD" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: end;">DMD</text></g><g 

class="node" transform="translate(707,1650.190311418685)"><circle r="4.5" id="circle-GRW-GRW" class="circle-GRW circle-fork-DMD"></circle><text id="text-GRW-GRW" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRW</text></g><g class="node" transform="translate(707,1661.7301038062283)"><circle r="4.5" 

id="circle-BAC-BAC" class="circle-BAC circle-fork-DMD"></circle><text id="text-BAC-BAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BAC</text></g><g class="node" transform="translate(589.1666666666667,1627.1107266435986)"><circle r="4.75" id="circle-CAP-CAP" class="circle-CAP circle-fork-

NVC"></circle><text id="text-CAP-CAP" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CAP</text></g><g class="node" transform="translate

(707,1627.1107266435986)"><circle r="4.5" id="circle-LBW-LBW" class="circle-LBW circle-fork-CAP"></circle><text id="text-LBW-LBW" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LBW</text></g><g class="node" transform="translate(707,1384.7750865051903)"><circle r="4.5" id="circle-HBN-HBN" 

class="circle-HBN circle-fork-NVC"></circle><text id="text-HBN-HBN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HBN</text></g><g 

class="node" transform="translate(589.1666666666667,1604.0311418685121)"><circle r="4.75" id="circle-CMC-CMC" class="circle-CMC circle-fork-NVC"></circle><text id="text-

CMC-CMC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">CMC</text></g><g class="node" transform="translate

(707,1604.0311418685121)"><circle r="4.5" id="circle-PYC-PYC" class="circle-PYC circle-fork-CMC"></circle><text id="text-PYC-PYC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PYC</text></g><g class="node" transform="translate(707,1350.1557093425606)"><circle r="4.5" id="circle-CDC-CDC" 

class="circle-CDC circle-fork-NVC"></circle><text id="text-CDC-CDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CDC</text></g><g 

class="node" transform="translate(707,1361.6955017301038)"><circle r="4.5" id="circle-GLX-GLX" class="circle-GLX circle-fork-NVC"></circle><text id="text-GLX-GLX" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLX</text></g><g class="node" transform="translate(707,1373.235294117647)"><circle r="4.5" id="circle-

NEC-NEC" class="circle-NEC circle-fork-NVC"></circle><text id="text-NEC-NEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NEC</text></g><g 

class="node" transform="translate(707,1569.4117647058824)"><circle r="4.5" id="circle-TAG-TAG" class="circle-TAG circle-fork-NVC"></circle><text id="text-TAG-TAG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TAG</text></g><g class="node" transform="translate(707,1580.9515570934257)"><circle r="4.5" 

id="circle-LK7-LK7" class="circle-LK7 circle-fork-NVC"></circle><text id="text-LK7-LK7" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LK7</text></g><g class="node" transform="translate(707,1407.8546712802768)"><circle r="4.5" id="circle-SAV-SAV" class="circle-SAV circle-fork-NVC"></circle><text 

id="text-SAV-SAV" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SAV</text></g><g class="node" transform="translate

(707,1419.3944636678202)"><circle r="4.5" id="circle-PPL-PPL" class="circle-PPL circle-fork-NVC"></circle><text id="text-PPL-PPL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PPL</text></g><g class="node" transform="translate(707,1430.9342560553634)"><circle r="4.5" id="circle-SHT-SHT" 

class="circle-SHT circle-fork-NVC"></circle><text id="text-SHT-SHT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SHT</text></g><g 

class="node" transform="translate(707,1442.4740484429067)"><circle r="4.5" id="circle-CIN-CIN" class="circle-CIN circle-fork-NVC"></circle><text id="text-CIN-CIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CIN</text></g><g class="node" transform="translate(707,1465.5536332179931)"><circle r="4.5" id="circle-

BOC-BOC" class="circle-BOC circle-fork-NVC"></circle><text id="text-BOC-BOC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOC</text></g><g 

class="node" transform="translate(707,1488.6332179930796)"><circle r="4.5" id="circle-TEK-TEK" class="circle-TEK circle-fork-NVC"></circle><text id="text-TEK-TEK" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEK</text></g><g class="node" transform="translate(707,1511.712802768166)"><circle r="4.5" id="circle-

NIG-NIG" class="circle-NIG circle-fork-NVC"></circle><text id="text-NIG-NIG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NIG</text></g><g 

class="node" transform="translate(707,1534.7923875432525)"><circle r="4.5" id="circle-GRA-GRA" class="circle-GRA circle-fork-NVC"></circle><text id="text-GRA-GRA" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRA</text></g><g class="node" transform="translate(707,1557.871972318339)"><circle r="4.5" id="circle-

UFC-UFC" class="circle-UFC circle-fork-NVC"></circle><text id="text-UFC-UFC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">UFC</text></g><g 

class="node" transform="translate(707,1338.6159169550172)"><circle r="4.5" id="circle-XMAS-XMAS" class="circle-XMAS circle-fork-NVC"></circle><text id="text-XMAS-XMAS" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XMAS</text></g><g class="node" transform="translate(707,1454.01384083045)"><circle r="4.5" 

id="circle-MINT-MINT" class="circle-MINT circle-fork-NVC"></circle><text id="text-MINT-MINT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MINT</text></g><g class="node" transform="translate(707,1477.0934256055364)"><circle r="4.5" id="circle-BC-BC" class="circle-BC circle-fork-NVC"></circle><text 

id="text-BC-BC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BC</text></g><g class="node" transform="translate

(707,1327.076124567474)"><circle r="4.5" id="circle-ZEIT-ZEIT" class="circle-ZEIT circle-fork-NVC"></circle><text id="text-ZEIT-ZEIT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ZEIT</text></g><g class="node" transform="translate(707,1292.4567474048442)"><circle r="4.5" id="circle-QBT-QBT" 

class="circle-QBT circle-fork-PPC"></circle><text id="text-QBT-QBT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">QBT</text></g><g 

class="node" transform="translate(707,1303.9965397923875)"><circle r="4.5" id="circle-FLT-FLT" class="circle-FLT circle-fork-PPC"></circle><text id="text-FLT-FLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLT</text></g><g class="node" transform="translate(707,773.1660899653979)"><circle r="4.5" id="circle-

TRC-TRC" class="circle-TRC circle-fork-BTC"></circle><text id="text-TRC-TRC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRC</text></g><g 

class="node" transform="translate(707,750.0865051903114)"><circle r="4.5" id="circle-BTE-BTE" class="circle-BTE circle-fork-BTC"></circle><text id="text-BTE-BTE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTE</text></g><g class="node" transform="translate(589.1666666666667,1153.9792387543253)"><circle 

r="5.25" id="circle-XPM-XPM" class="circle-XPM circle-fork-BTC"></circle><text id="text-XPM-XPM" dx="-8" dy=".31em" class="btc" transform="translate(-0.75)" style="text-anchor: 

end;">XPM</text></g><g class="node" transform="translate(707,1142.439446366782)"><circle r="4.5" id="circle-DTC-DTC" class="circle-DTC circle-fork-XPM"></circle><text 

id="text-DTC-DTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DTC</text></g><g class="node" transform="translate

(707,1153.9792387543253)"><circle r="4.5" id="circle-CDN-CDN" class="circle-CDN circle-fork-XPM"></circle><text id="text-CDN-CDN" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CDN</text></g><g class="node" transform="translate(707,1165.5190311418687)"><circle r="4.5" id="circle-FTW-FTW" 

class="circle-FTW circle-fork-XPM"></circle><text id="text-FTW-FTW" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FTW</text></g><g 

class="node" transform="translate(707,703.9273356401384)"><circle r="4.5" id="circle-MEG-MEG" class="circle-MEG circle-fork-BTC"></circle><text id="text-MEG-MEG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MEG</text></g><g class="node" transform="translate(589.1666666666667,1252.0674740484428)"><circle 

r="5.5" id="circle-ZET-ZET" class="circle-ZET circle-fork-BTC"></circle><text id="text-ZET-ZET" dx="-8" dy=".31em" class="btc" transform="translate(-1)" style="text-anchor: 

end;">ZET</text></g><g class="node" transform="translate(707,1234.757785467128)"><circle r="4.5" id="circle-TEA-TEA" class="circle-TEA circle-fork-ZET"></circle><text 

id="text-TEA-TEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEA</text></g><g class="node" transform="translate

(707,1246.2975778546713)"><circle r="4.5" id="circle-MYR-MYR" class="circle-MYR circle-fork-ZET"></circle><text id="text-MYR-MYR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MYR</text></g><g class="node" transform="translate(707,1257.8373702422145)"><circle r="4.5" id="circle-CHC-CHC" 

class="circle-CHC circle-fork-ZET"></circle><text id="text-CHC-CHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CHC</text></g><g 

class="node" transform="translate(707,1269.3771626297578)"><circle r="4.5" id="circle-MZC-MZC" class="circle-MZC circle-fork-ZET"></circle><text id="text-MZC-MZC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MZC</text></g><g class="node" transform="translate(235.66666666666669,2056.176121072315)"><circle 

r="4.75" id="circle-SIC-SIC" class="circle-SIC circle-fork-BTC"></circle><text id="text-SIC-SIC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SIC</text></g><g class="node" transform="translate(353.5,2056.176121072315)"><circle r="10.25" id="circle-QRK-QRK" class="circle-QRK circle-fork-SIC"></circle><text 

id="text-QRK-QRK" dx="-8" dy=".31em" class="btc" transform="translate(-5.75)" style="text-anchor: end;">QRK</text></g><g class="node" transform="translate

(707,1904.0657439446366)"><circle r="4.5" id="circle-OBC-OBC" class="circle-OBC circle-fork-QRK"></circle><text id="text-OBC-OBC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">OBC</text></g><g class="node" transform="translate(707,2123.3217993079584)"><circle r="4.5" id="circle-RVD-RVD" 

class="circle-RVD circle-fork-QRK"></circle><text id="text-RVD-RVD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RVD</text></g><g class="node" 

transform="translate(707,2100.242214532872)"><circle r="4.5" id="circle-FZ-FZ" class="circle-FZ circle-fork-QRK"></circle><text id="text-FZ-FZ" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FZ</text></g><g class="node" transform="translate(707,2077.1626297577855)"><circle r="4.5" id="circle-ATO-ATO" 

class="circle-ATO circle-fork-QRK"></circle><text id="text-ATO-ATO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ATO</text></g><g 

class="node" transform="translate(707,2054.083044982699)"><circle r="4.5" id="circle-MOL-MOL" class="circle-MOL circle-fork-QRK"></circle><text id="text-MOL-MOL" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOL</text></g><g class="node" transform="translate(707,2031.0034602076125)"><circle r="4.5" 

id="circle-SEC-SEC" class="circle-SEC circle-fork-QRK"></circle><text id="text-SEC-SEC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SEC</text></g><g class="node" transform="translate(471.33333333333337,2736.912376358743)"><circle r="29.25" id="circle-DRK-DRK" class="circle-DRK circle-fork-

QRK"></circle><text id="text-DRK-DRK" dx="-8" dy=".31em" class="btc" transform="translate(-24.75)" style="text-anchor: end;">DRK</text></g><g class="node" transform="translate

(707,2169.4809688581313)"><circle r="4.5" id="circle-CC-CC" class="circle-CC circle-fork-DRK"></circle><text id="text-CC-CC" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">CC</text></g><g class="node" transform="translate(707,2227.1799307958477)"><circle r="4.5" id="circle-Sync-Sync" class="circle-Sync circle-fork-

DRK"></circle><text id="text-Sync-Sync" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Sync</text></g><g class="node" transform="translate

(707,3231.1418685121107)"><circle r="4.5" id="circle-RTC-RTC" class="circle-RTC circle-fork-DRK"></circle><text id="text-RTC-RTC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RTC</text></g><g class="node" transform="translate(707,3208.0622837370242)"><circle r="4.5" id="circle-MLGB-MLGB" 

class="circle-MLGB circle-fork-DRK"></circle><text id="text-MLGB-MLGB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MLGB</text></g><g 

class="node" transform="translate(707,3184.982698961938)"><circle r="4.5" id="circle-ACC-ACC" class="circle-ACC circle-fork-DRK"></circle><text id="text-ACC-ACC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ACC</text></g><g class="node" transform="translate(707,3161.9031141868513)"><circle r="4.5" 

id="circle-KRYP-KRYP" class="circle-KRYP circle-fork-DRK"></circle><text id="text-KRYP-KRYP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">KRYP</text></g><g class="node" transform="translate(707,3138.823529411765)"><circle r="4.5" id="circle-GRN-GRN" class="circle-GRN circle-fork-DRK"></circle><text 

id="text-GRN-GRN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRN</text></g><g class="node" transform="translate

(707,3115.743944636678)"><circle r="4.5" id="circle-PURE-PURE" class="circle-PURE circle-fork-DRK"></circle><text id="text-PURE-PURE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PURE</text></g><g class="node" transform="translate(707,3092.6643598615915)"><circle r="4.5" id="circle-NAC-NAC" 

class="circle-NAC circle-fork-DRK"></circle><text id="text-NAC-NAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NAC</text></g><g class="node" 

transform="translate(707,3069.584775086505)"><circle r="4.5" id="circle-HPC-HPC" class="circle-HPC circle-fork-DRK"></circle><text id="text-HPC-HPC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">HPC</text></g><g class="node" transform="translate(707,3046.5051903114186)"><circle r="4.5" id="circle-suc-suc" 

class="circle-suc circle-fork-DRK"></circle><text id="text-suc-suc" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">suc</text></g><g class="node" 

transform="translate(707,3023.425605536332)"><circle r="4.5" id="circle-NL-NL" class="circle-NL circle-fork-DRK"></circle><text id="text-NL-NL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NL</text></g><g class="node" transform="translate(707,3000.3460207612457)"><circle r="4.5" id="circle-LTCX-LTCX" 

class="circle-LTCX circle-fork-DRK"></circle><text id="text-LTCX-LTCX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LTCX</text></g><g 

class="node" transform="translate(707,2977.266435986159)"><circle r="4.5" id="circle-Iaura-Iaura" class="circle-Iaura circle-fork-DRK"></circle><text id="text-Iaura-Iaura" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Iaura</text></g><g class="node" transform="translate(707,2954.1868512110727)"><circle r="4.5" 

id="circle-BS-BS" class="circle-BS circle-fork-DRK"></circle><text id="text-BS-BS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BS</text></g><g 

class="node" transform="translate(707,2931.1072664359863)"><circle r="4.5" id="circle-Voot-Voot" class="circle-Voot circle-fork-DRK"></circle><text id="text-Voot-Voot" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">Voot</text></g><g class="node" transform="translate(707,2908.0276816609)"><circle r="4.5" id="circle-

LIMX-LIMX" class="circle-LIMX circle-fork-DRK"></circle><text id="text-LIMX-LIMX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LIMX</text></g><g class="node" transform="translate(707,2884.9480968858134)"><circle r="4.5" id="circle-GRE-GRE" class="circle-GRE circle-fork-DRK"></circle><text 

id="text-GRE-GRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRE</text></g><g class="node" transform="translate

(707,2861.868512110727)"><circle r="4.5" id="circle-WCC-WCC" class="circle-WCC circle-fork-DRK"></circle><text id="text-WCC-WCC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">WCC</text></g><g class="node" transform="translate(707,2838.7889273356404)"><circle r="4.5" id="circle-MIN-MIN" 

class="circle-MIN circle-fork-DRK"></circle><text id="text-MIN-MIN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MIN</text></g><g class="node" 

transform="translate(707,2815.7093425605535)"><circle r="4.5" id="circle-TRS-TRS" class="circle-TRS circle-fork-DRK"></circle><text id="text-TRS-TRS" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">TRS</text></g><g class="node" transform="translate(707,2792.629757785467)"><circle r="4.5" id="circle-KiB-KiB" 

class="circle-KiB circle-fork-DRK"></circle><text id="text-KiB-KiB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">KiB</text></g><g class="node" 

transform="translate(707,2769.5501730103806)"><circle r="4.5" id="circle-LIT-LIT" class="circle-LIT circle-fork-DRK"></circle><text id="text-LIT-LIT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LIT</text></g><g class="node" transform="translate(707,2746.470588235294)"><circle r="4.5" id="circle-FRAC-FRAC" 

class="circle-FRAC circle-fork-DRK"></circle><text id="text-FRAC-FRAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FRAC</text></g><g 

class="node" transform="translate(707,2723.3910034602077)"><circle r="4.5" id="circle-WVS-WVS" class="circle-WVS circle-fork-DRK"></circle><text id="text-WVS-WVS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WVS</text></g><g class="node" transform="translate(707,2700.311418685121)"><circle r="4.5" id="circle-

gue-gue" class="circle-gue circle-fork-DRK"></circle><text id="text-gue-gue" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">gue</text></g><g 

class="node" transform="translate(707,2677.2318339100343)"><circle r="4.5" id="circle-NeWO-NeWO" class="circle-NeWO circle-fork-DRK"></circle><text id="text-NeWO-NeWO" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NeWO</text></g><g class="node" transform="translate(707,2654.152249134948)"><circle r="4.5" 

id="circle-GOD-GOD" class="circle-GOD circle-fork-DRK"></circle><text id="text-GOD-GOD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GOD</text></g><g class="node" transform="translate(707,2631.0726643598614)"><circle r="4.5" id="circle-HODOR-HODOR" class="circle-HODOR circle-fork-

DRK"></circle><text id="text-HODOR-HODOR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HODOR</text></g><g class="node" 

transform="translate(707,2607.993079584775)"><circle r="4.5" id="circle-SPCC-SPCC" class="circle-SPCC circle-fork-DRK"></circle><text id="text-SPCC-SPCC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">SPCC</text></g><g class="node" transform="translate(707,2584.9134948096885)"><circle r="4.5" id="circle-BULBA-

BULBA" class="circle-BULBA circle-fork-DRK"></circle><text id="text-BULBA-BULBA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BULBA</text></g><g class="node" transform="translate(707,2561.833910034602)"><circle r="4.5" id="circle-TRUST-TRUST" class="circle-TRUST circle-fork-

DRK"></circle><text id="text-TRUST-TRUST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TRUST</text></g><g class="node" 

transform="translate(707,2538.7543252595156)"><circle r="4.5" id="circle-PP-PP" class="circle-PP circle-fork-DRK"></circle><text id="text-PP-PP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PP</text></g><g class="node" transform="translate(707,2515.674740484429)"><circle r="4.5" id="circle-CSO-CSO" class="circle-

CSO circle-fork-DRK"></circle><text id="text-CSO-CSO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CSO</text></g><g class="node" 

transform="translate(707,2492.5951557093426)"><circle r="4.5" id="circle-MHYC-MHYC" class="circle-MHYC circle-fork-DRK"></circle><text id="text-MHYC-MHYC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MHYC</text></g><g class="node" transform="translate(707,2469.515570934256)"><circle r="4.5" 

id="circle-LOL-LOL" class="circle-LOL circle-fork-DRK"></circle><text id="text-LOL-LOL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LOL</text></g><g class="node" transform="translate(707,2446.4359861591697)"><circle r="4.5" id="circle-MIL-MIL" class="circle-MIL circle-fork-DRK"></circle><text 

id="text-MIL-MIL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MIL</text></g><g class="node" transform="translate

(707,2423.3564013840833)"><circle r="4.5" id="circle-PIGGY-PIGGY" class="circle-PIGGY circle-fork-DRK"></circle><text id="text-PIGGY-PIGGY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PIGGY</text></g><g class="node" transform="translate(707,2400.276816608997)"><circle r="4.5" id="circle-BOOTY-BOOTY" 

class="circle-BOOTY circle-fork-DRK"></circle><text id="text-BOOTY-BOOTY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BOOTY</text></g><g 

class="node" transform="translate(707,2377.1972318339103)"><circle r="4.5" id="circle-LIN-LIN" class="circle-LIN circle-fork-DRK"></circle><text id="text-LIN-LIN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LIN</text></g><g class="node" transform="translate(707,2354.117647058824)"><circle r="4.5" id="circle-

SND-SND" class="circle-SND circle-fork-DRK"></circle><text id="text-SND-SND" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SND</text></g><g 

class="node" transform="translate(589.1666666666667,3479.247404844291)"><circle r="11" id="circle-BBL-BBL" class="circle-BBL circle-fork-DRK"></circle><text id="text-BBL-

BBL" dx="-8" dy=".31em" class="btc" transform="translate(-6.5)" style="text-anchor: end;">BBL</text></g><g class="node" transform="translate(707,3335)"><circle r="4.5" id="circle-

FIRE-FIRE" class="circle-FIRE circle-fork-BBL"></circle><text id="text-FIRE-FIRE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FIRE</text></g><g 

class="node" transform="translate(707,3600.415224913495)"><circle r="4.5" id="circle-CORE-CORE" class="circle-CORE circle-fork-BBL"></circle><text id="text-CORE-CORE" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CORE</text></g><g class="node" transform="translate(707,3577.3356401384085)"><circle r="4.5" 

id="circle-ALEA-ALEA" class="circle-ALEA circle-fork-BBL"></circle><text id="text-ALEA-ALEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ALEA</text></g><g class="node" transform="translate(707,3554.2560553633216)"><circle r="4.5" id="circle-ISIS-ISIS" class="circle-ISIS circle-fork-BBL"></circle><text 

id="text-ISIS-ISIS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ISIS</text></g><g class="node" transform="translate

(707,3531.176470588235)"><circle r="4.5" id="circle-Dino-Dino" class="circle-Dino circle-fork-BBL"></circle><text id="text-Dino-Dino" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Dino</text></g><g class="node" transform="translate(707,3508.0968858131487)"><circle r="4.5" id="circle-POS-POS" 

class="circle-POS circle-fork-BBL"></circle><text id="text-POS-POS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">POS</text></g><g class="node" 

transform="translate(707,3485.017301038062)"><circle r="4.5" id="circle-ANG-ANG" class="circle-ANG circle-fork-BBL"></circle><text id="text-ANG-ANG" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ANG</text></g><g class="node" transform="translate(707,3461.9377162629753)"><circle r="4.5" id="circle-COF-COF" 

class="circle-COF circle-fork-BBL"></circle><text id="text-COF-COF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">COF</text></g><g 

class="node" transform="translate(707,3392.6989619377164)"><circle r="4.5" id="circle-SPATA-SPATA" class="circle-SPATA circle-fork-BBL"></circle><text id="text-SPATA-SPATA" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPATA</text></g><g class="node" transform="translate(707,3346.5397923875435)"><circle r="4.5" 

id="circle-BACK-BACK" class="circle-BACK circle-fork-BBL"></circle><text id="text-BACK-BACK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">BACK</text></g><g class="node" transform="translate(707,3358.079584775087)"><circle r="4.5" id="circle-MInC-MInC" class="circle-MInC circle-fork-BBL"></circle><text 

id="text-MInC-MInC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MInC</text></g><g class="node" transform="translate

(707,3369.6193771626295)"><circle r="4.5" id="circle-LIZE-LIZE" class="circle-LIZE circle-fork-BBL"></circle><text id="text-LIZE-LIZE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">LIZE</text></g><g class="node" transform="translate(707,3381.159169550173)"><circle r="4.5" id="circle-NHC-NHC" 

class="circle-NHC circle-fork-BBL"></circle><text id="text-NHC-NHC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NHC</text></g><g 

class="node" transform="translate(707,3623.4948096885814)"><circle r="4.5" id="circle-City-City" class="circle-City circle-fork-BBL"></circle><text id="text-City-City" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">City</text></g><g class="node" transform="translate(707,3404.23875432526)"><circle r="4.5" id="circle-

FBIT-FBIT" class="circle-FBIT circle-fork-BBL"></circle><text id="text-FBIT-FBIT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FBIT</text></g><g 

class="node" transform="translate(707,3415.7785467128024)"><circle r="4.5" id="circle-LIMI-LIMI" class="circle-LIMI circle-fork-BBL"></circle><text id="text-LIMI-LIMI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LIMI</text></g><g class="node" transform="translate(707,3427.318339100346)"><circle r="4.5" id="circle-

CRYSTAL-CRYSTAL" class="circle-CRYSTAL circle-fork-BBL"></circle><text id="text-CRYSTAL-CRYSTAL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CRYSTAL</text></g><g class="node" transform="translate(707,3438.8581314878893)"><circle r="4.5" id="circle-BBC-BBC" class="circle-BBC circle-fork-BBL"></circle><text 

id="text-BBC-BBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BBC</text></g><g class="node" transform="translate

(707,3450.3979238754328)"><circle r="4.5" id="circle-OT-OT" class="circle-OT circle-fork-BBL"></circle><text id="text-OT-OT" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">OT</text></g><g class="node" transform="translate(707,3473.4775086505188)"><circle r="4.5" id="circle-XDE-XDE" class="circle-XDE circle-fork-

BBL"></circle><text id="text-XDE-XDE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XDE</text></g><g class="node" transform="translate

(707,3496.5570934256057)"><circle r="4.5" id="circle-NMB-NMB" class="circle-NMB circle-fork-BBL"></circle><text id="text-NMB-NMB" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NMB</text></g><g class="node" transform="translate(707,3519.636678200692)"><circle r="4.5" id="circle-GRYF-GRYF" 

class="circle-GRYF circle-fork-BBL"></circle><text id="text-GRYF-GRYF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRYF</text></g><g 

class="node" transform="translate(707,3542.7162629757786)"><circle r="4.5" id="circle-VLT-VLT" class="circle-VLT circle-fork-BBL"></circle><text id="text-VLT-VLT" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VLT</text></g><g class="node" transform="translate(707,3565.795847750865)"><circle r="4.5" id="circle-

HTML5-HTML5" class="circle-HTML5 circle-fork-BBL"></circle><text id="text-HTML5-HTML5" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">HTML5</text></g><g class="node" transform="translate(707,3588.875432525952)"><circle r="4.5" id="circle-B1bl3-B1bl3" class="circle-B1bl3 circle-fork-BBL"></circle><text 

id="text-B1bl3-B1bl3" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">B1bl3</text></g><g class="node" transform="translate

(707,3611.955017301038)"><circle r="4.5" id="circle-U-U" class="circle-U circle-fork-BBL"></circle><text id="text-U-U" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">U</text></g><g class="node" transform="translate(707,2307.9584775086505)"><circle r="4.5" id="circle-SRZ-SRZ" class="circle-SRZ circle-fork-

DRK"></circle><text id="text-SRZ-SRZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SRZ</text></g><g class="node" transform="translate

(707,2284.878892733564)"><circle r="4.5" id="circle-RW-RW" class="circle-RW circle-fork-DRK"></circle><text id="text-RW-RW" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">RW</text></g><g class="node" transform="translate(707,2215.640138408304)"><circle r="4.5" id="circle-XAN-XAN" class="circle-XAN circle-fork-

DRK"></circle><text id="text-XAN-XAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XAN</text></g><g class="node" transform="translate

(707,2181.0207612456747)"><circle r="4.5" id="circle-FVZ-FVZ" class="circle-FVZ circle-fork-DRK"></circle><text id="text-FVZ-FVZ" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">FVZ</text></g><g class="node" transform="translate(707,2192.5605536332178)"><circle r="4.5" id="circle-ELTC-ELTC" 

class="circle-ELTC circle-fork-DRK"></circle><text id="text-ELTC-ELTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ELTC</text></g><g 

class="node" transform="translate(707,2204.100346020761)"><circle r="4.5" id="circle-ESC-ESC" class="circle-ESC circle-fork-DRK"></circle><text id="text-ESC-ESC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ESC</text></g><g class="node" transform="translate(707,3254.221453287197)"><circle r="4.5" id="circle-

TEX-TEX" class="circle-TEX circle-fork-DRK"></circle><text id="text-TEX-TEX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TEX</text></g><g 

class="node" transform="translate(707,3277.3010380622836)"><circle r="4.5" id="circle-MC-MC" class="circle-MC circle-fork-DRK"></circle><text id="text-MC-MC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MC</text></g><g class="node" transform="translate(707,2238.7197231833907)"><circle r="4.5" id="circle-

FUSE-FUSE" class="circle-FUSE circle-fork-DRK"></circle><text id="text-FUSE-FUSE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FUSE</text></g><g class="node" transform="translate(707,2250.259515570934)"><circle r="4.5" id="circle-WITCH-WITCH" class="circle-WITCH circle-fork-

DRK"></circle><text id="text-WITCH-WITCH" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WITCH</text></g><g class="node" 

transform="translate(707,2261.7993079584776)"><circle r="4.5" id="circle-ZEB-ZEB" class="circle-ZEB circle-fork-DRK"></circle><text id="text-ZEB-ZEB" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ZEB</text></g><g class="node" transform="translate(707,2273.3391003460206)"><circle r="4.5" id="circle-CLD-CLD" 

class="circle-CLD circle-fork-DRK"></circle><text id="text-CLD-CLD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CLD</text></g><g class="node" 

transform="translate(707,2296.4186851211075)"><circle r="4.5" id="circle-BTO-BTO" class="circle-BTO circle-fork-DRK"></circle><text id="text-BTO-BTO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BTO</text></g><g class="node" transform="translate(707,2319.498269896194)"><circle r="4.5" id="circle-BIZ-BIZ" 

class="circle-BIZ circle-fork-DRK"></circle><text id="text-BIZ-BIZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BIZ</text></g><g class="node" 

transform="translate(707,2342.5778546712804)"><circle r="4.5" id="circle-Pal-Pal" class="circle-Pal circle-fork-DRK"></circle><text id="text-Pal-Pal" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Pal</text></g><g class="node" transform="translate(707,2365.657439446367)"><circle r="4.5" id="circle-MWC-MWC" 

class="circle-MWC circle-fork-DRK"></circle><text id="text-MWC-MWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MWC</text></g><g 

class="node" transform="translate(707,2388.7370242214533)"><circle r="4.5" id="circle-DSV-DSV" class="circle-DSV circle-fork-DRK"></circle><text id="text-DSV-DSV" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DSV</text></g><g class="node" transform="translate(707,2411.81660899654)"><circle r="4.5" id="circle-

MTS-MTS" class="circle-MTS circle-fork-DRK"></circle><text id="text-MTS-MTS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">MTS</text></g><g class="node" transform="translate(707,2434.8961937716263)"><circle r="4.5" id="circle-MAG-MAG" class="circle-MAG circle-fork-DRK"></circle><text 

id="text-MAG-MAG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MAG</text></g><g class="node" transform="translate

(707,2457.9757785467127)"><circle r="4.5" id="circle-VMINE-VMINE" class="circle-VMINE circle-fork-DRK"></circle><text id="text-VMINE-VMINE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">VMINE</text></g><g class="node" transform="translate(707,2481.055363321799)"><circle r="4.5" id="circle-DEPO-GBP-DEPO-

GBP" class="circle-DEPO-GBP circle-fork-DRK"></circle><text id="text-DEPO-GBP-DEPO-GBP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">DEPO-GBP</text></g><g class="node" transform="translate(707,2504.1349480968856)"><circle r="4.5" id="circle-XCR-XCR" class="circle-XCR circle-fork-

DRK"></circle><text id="text-XCR-XCR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XCR</text></g><g class="node" transform="translate

(589.1666666666667,3306.150519031142)"><circle r="5" id="circle-X14-X14" class="circle-X14 circle-fork-DRK"></circle><text id="text-X14-X14" dx="-8" dy=".31em" class="btc" 

transform="translate(-0.5)" style="text-anchor: end;">X14</text></g><g class="node" transform="translate(707,3300.38062283737)"><circle r="4.5" id="circle-SOLE-SOLE" 

class="circle-SOLE circle-fork-X14"></circle><text id="text-SOLE-SOLE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SOLE</text></g><g 

class="node" transform="translate(707,3311.9204152249135)"><circle r="4.5" id="circle-BCSH-BCSH" class="circle-BCSH circle-fork-X14"></circle><text id="text-BCSH-BCSH" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BCSH</text></g><g class="node" transform="translate(707,2550.2941176470586)"><circle r="4.5" 

id="circle-CYX-CYX" class="circle-CYX circle-fork-DRK"></circle><text id="text-CYX-CYX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">CYX</text></g><g class="node" transform="translate(707,2573.3737024221455)"><circle r="4.5" id="circle-TMC-TMC" class="circle-TMC circle-fork-DRK"></circle><text 

id="text-TMC-TMC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TMC</text></g><g class="node" transform="translate

(707,2596.453287197232)"><circle r="4.5" id="circle-RACE-RACE" class="circle-RACE circle-fork-DRK"></circle><text id="text-RACE-RACE" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">RACE</text></g><g class="node" transform="translate(707,2619.5328719723184)"><circle r="4.5" id="circle-AZC-AZC" 

class="circle-AZC circle-fork-DRK"></circle><text id="text-AZC-AZC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AZC</text></g><g class="node" 

transform="translate(707,2642.612456747405)"><circle r="4.5" id="circle-AMBER-AMBER" class="circle-AMBER circle-fork-DRK"></circle><text id="text-AMBER-AMBER" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AMBER</text></g><g class="node" transform="translate(707,2665.6920415224913)"><circle r="4.5" 

id="circle-LMR-LMR" class="circle-LMR circle-fork-DRK"></circle><text id="text-LMR-LMR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">LMR</text></g><g class="node" transform="translate(707,2688.7716262975778)"><circle r="4.5" id="circle-CryptoXTC-CryptoXTC" class="circle-CryptoXTC circle-fork-

DRK"></circle><text id="text-CryptoXTC-CryptoXTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CryptoXTC</text></g><g class="node" 

transform="translate(707,2711.8512110726642)"><circle r="4.5" id="circle-XURO-XURO" class="circle-XURO circle-fork-DRK"></circle><text id="text-XURO-XURO" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XURO</text></g><g class="node" transform="translate(707,2734.930795847751)"><circle r="4.5" 

id="circle-GLY-GLY" class="circle-GLY circle-fork-DRK"></circle><text id="text-GLY-GLY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GLY</text></g><g class="node" transform="translate(707,2758.0103806228376)"><circle r="4.5" id="circle-MWC-MWC" class="circle-MWC circle-fork-DRK"></circle><text 

id="text-MWC-MWC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MWC</text></g><g class="node" transform="translate

(707,2781.089965397924)"><circle r="4.5" id="circle-Neos-Neos" class="circle-Neos circle-fork-DRK"></circle><text id="text-Neos-Neos" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">Neos</text></g><g class="node" transform="translate(707,2804.1695501730105)"><circle r="4.5" id="circle-EQX-EQX" 

class="circle-EQX circle-fork-DRK"></circle><text id="text-EQX-EQX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EQX</text></g><g 

class="node" transform="translate(707,2827.249134948097)"><circle r="4.5" id="circle-CCB-CCB" class="circle-CCB circle-fork-DRK"></circle><text id="text-CCB-CCB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CCB</text></g><g class="node" transform="translate(707,2850.3287197231834)"><circle r="4.5" 

id="circle-TNZ-TNZ" class="circle-TNZ circle-fork-DRK"></circle><text id="text-TNZ-TNZ" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TNZ</text></g><g class="node" transform="translate(707,2873.40830449827)"><circle r="4.5" id="circle-CRCK-CRCK" class="circle-CRCK circle-fork-DRK"></circle><text 

id="text-CRCK-CRCK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CRCK</text></g><g class="node" transform="translate

(707,2896.4878892733564)"><circle r="4.5" id="circle-CHILD-CHILD" class="circle-CHILD circle-fork-DRK"></circle><text id="text-CHILD-CHILD" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CHILD</text></g><g class="node" transform="translate(707,2919.567474048443)"><circle r="4.5" id="circle-ROS-ROS" 

class="circle-ROS circle-fork-DRK"></circle><text id="text-ROS-ROS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ROS</text></g><g 

class="node" transform="translate(707,2942.6470588235293)"><circle r="4.5" id="circle-STC-STC" class="circle-STC circle-fork-DRK"></circle><text id="text-STC-STC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">STC</text></g><g class="node" transform="translate(707,2965.7266435986157)"><circle r="4.5" 

id="circle-Envy-Envy" class="circle-Envy circle-fork-DRK"></circle><text id="text-Envy-Envy" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">Envy</text></g><g class="node" transform="translate(707,2988.806228373702)"><circle r="4.5" id="circle-EXCL-EXCL" class="circle-EXCL circle-fork-DRK"></circle><text 

id="text-EXCL-EXCL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EXCL</text></g><g class="node" transform="translate

(707,3011.8858131487887)"><circle r="4.5" id="circle-DP-DP" class="circle-DP circle-fork-DRK"></circle><text id="text-DP-DP" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">DP</text></g><g class="node" transform="translate(707,3034.965397923875)"><circle r="4.5" id="circle-MTC-MTC" class="circle-MTC circle-fork-

DRK"></circle><text id="text-MTC-MTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTC</text></g><g class="node" transform="translate

(707,3058.0449826989616)"><circle r="4.5" id="circle-METAL-METAL" class="circle-METAL circle-fork-DRK"></circle><text id="text-METAL-METAL" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">METAL</text></g><g class="node" transform="translate(707,3081.1245674740485)"><circle r="4.5" id="circle-GHOST-GHOST" 

class="circle-GHOST circle-fork-DRK"></circle><text id="text-GHOST-GHOST" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">GHOST</text></g><g class="node" transform="translate(707,3104.204152249135)"><circle r="4.5" id="circle-WSTL-WSTL" class="circle-WSTL circle-fork-

DRK"></circle><text id="text-WSTL-WSTL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WSTL</text></g><g class="node" transform="translate

(707,3127.2837370242214)"><circle r="4.5" id="circle-SPARK-SPARK" class="circle-SPARK circle-fork-DRK"></circle><text id="text-SPARK-SPARK" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SPARK</text></g><g class="node" transform="translate(707,3150.363321799308)"><circle r="4.5" id="circle-OPTI-OPTI" 

class="circle-OPTI circle-fork-DRK"></circle><text id="text-OPTI-OPTI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">OPTI</text></g><g 

class="node" transform="translate(707,3173.442906574395)"><circle r="4.5" id="circle-MOB-MOB" class="circle-MOB circle-fork-DRK"></circle><text id="text-MOB-MOB" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MOB</text></g><g class="node" transform="translate(707,3196.5224913494812)"><circle r="4.5" 

id="circle-NKT-NKT" class="circle-NKT circle-fork-DRK"></circle><text id="text-NKT-NKT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">NKT</text></g><g class="node" transform="translate(707,3219.6020761245677)"><circle r="4.5" id="circle-LFTC-LFTC" class="circle-LFTC circle-fork-DRK"></circle><text 

id="text-LFTC-LFTC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LFTC</text></g><g class="node" transform="translate

(707,3242.681660899654)"><circle r="4.5" id="circle-CBR-CBR" class="circle-CBR circle-fork-DRK"></circle><text id="text-CBR-CBR" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">CBR</text></g><g class="node" transform="translate(707,2527.214532871972)"><circle r="4.5" id="circle-WeTk-WeTk" 

class="circle-WeTk circle-fork-DRK"></circle><text id="text-WeTk-WeTk" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WeTk</text></g><g 

class="node" transform="translate(707,2331.0380622837374)"><circle r="4.5" id="circle-DGORE-DGORE" class="circle-DGORE circle-fork-DRK"></circle><text id="text-DGORE-

DGORE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DGORE</text></g><g class="node" transform="translate

(707,3265.7612456747406)"><circle r="4.5" id="circle-SMAC-SMAC" class="circle-SMAC circle-fork-DRK"></circle><text id="text-SMAC-SMAC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SMAC</text></g><g class="node" transform="translate(707,1915.60553633218)"><circle r="4.5" id="circle-ZUR-ZUR" 

class="circle-ZUR circle-fork-QRK"></circle><text id="text-ZUR-ZUR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ZUR</text></g><g 

class="node" transform="translate(707,1927.145328719723)"><circle r="4.5" id="circle-VLD-VLD" class="circle-VLD circle-fork-QRK"></circle><text id="text-VLD-VLD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">VLD</text></g><g class="node" transform="translate(707,1938.6851211072665)"><circle r="4.5" id="circle-

ANI-ANI" class="circle-ANI circle-fork-QRK"></circle><text id="text-ANI-ANI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ANI</text></g><g 

class="node" transform="translate(707,1950.2249134948095)"><circle r="4.5" id="circle-WIKI-WIKI" class="circle-WIKI circle-fork-QRK"></circle><text id="text-WIKI-WIKI" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WIKI</text></g><g class="node" transform="translate(707,2146.401384083045)"><circle r="4.5" id="circle-

UNC-UNC" class="circle-UNC circle-fork-QRK"></circle><text id="text-UNC-UNC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">UNC</text></g><g 

class="node" transform="translate(707,1973.3044982698962)"><circle r="4.5" id="circle-MTS-MTS" class="circle-MTS circle-fork-QRK"></circle><text id="text-MTS-MTS" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTS</text></g><g class="node" transform="translate(707,1984.8442906574394)"><circle r="4.5" 

id="circle-OFF-OFF" class="circle-OFF circle-fork-QRK"></circle><text id="text-OFF-OFF" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">OFF</text></g><g class="node" transform="translate(707,1996.3840830449826)"><circle r="4.5" id="circle-TBC-TBC" class="circle-TBC circle-fork-QRK"></circle><text 

id="text-TBC-TBC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TBC</text></g><g class="node" transform="translate

(707,2007.923875432526)"><circle r="4.5" id="circle-PRT-PRT" class="circle-PRT circle-fork-QRK"></circle><text id="text-PRT-PRT" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PRT</text></g><g class="node" transform="translate(707,2019.463667820069)"><circle r="4.5" id="circle-DOUG-DOUG" 

class="circle-DOUG circle-fork-QRK"></circle><text id="text-DOUG-DOUG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DOUG</text></g><g 

class="node" transform="translate(707,2042.5432525951555)"><circle r="4.5" id="circle-MET-MET" class="circle-MET circle-fork-QRK"></circle><text id="text-MET-MET" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MET</text></g><g class="node" transform="translate(707,2065.6228373702425)"><circle r="4.5" 

id="circle-SOMA-SOMA" class="circle-SOMA circle-fork-QRK"></circle><text id="text-SOMA-SOMA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SOMA</text></g><g class="node" transform="translate(707,2088.702422145329)"><circle r="4.5" id="circle-QB-QB" class="circle-QB circle-fork-QRK"></circle><text 

id="text-QB-QB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">QB</text></g><g class="node" transform="translate

(707,2111.7820069204154)"><circle r="4.5" id="circle-SRC-SRC" class="circle-SRC circle-fork-QRK"></circle><text id="text-SRC-SRC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SRC</text></g><g class="node" transform="translate(707,1961.764705882353)"><circle r="4.5" id="circle-DIME-DIME" 

class="circle-DIME circle-fork-QRK"></circle><text id="text-DIME-DIME" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DIME</text></g><g 

class="node" transform="translate(707,2134.861591695502)"><circle r="4.5" id="circle-MUE-MUE" class="circle-MUE circle-fork-QRK"></circle><text id="text-MUE-MUE" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MUE</text></g><g class="node" transform="translate(589.1666666666667,1067.430795847751)"><circle 

r="5" id="circle-CL-CL" class="circle-CL circle-fork-BTC"></circle><text id="text-CL-CL" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: 

end;">CL</text></g><g class="node" transform="translate(707,1061.6608996539792)"><circle r="4.5" id="circle-ECN-ECN" class="circle-ECN circle-fork-CL"></circle><text 

id="text-ECN-ECN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ECN</text></g><g class="node" transform="translate

(707,1073.2006920415224)"><circle r="4.5" id="circle-MAX-MAX" class="circle-MAX circle-fork-CL"></circle><text id="text-MAX-MAX" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MAX</text></g><g class="node" transform="translate(707,611.6089965397924)"><circle r="4.5" id="circle-GRD-GRD" 

class="circle-GRD circle-fork-BTC"></circle><text id="text-GRD-GRD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GRD</text></g><g 

class="node" transform="translate(707,588.529411764706)"><circle r="4.5" id="circle-TGC-TGC" class="circle-TGC circle-fork-BTC"></circle><text id="text-TGC-TGC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TGC</text></g><g class="node" transform="translate(589.1666666666667,1038.5813148788927)"><circle 

r="4.75" id="circle-SKC-SKC" class="circle-SKC circle-fork-BTC"></circle><text id="text-SKC-SKC" dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: 

end;">SKC</text></g><g class="node" transform="translate(707,1038.5813148788927)"><circle r="4.5" id="circle-XDC-XDC" class="circle-XDC circle-fork-SKC"></circle><text 

id="text-XDC-XDC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">XDC</text></g><g class="node" transform="translate

(707,542.3702422145328)"><circle r="4.5" id="circle-ASC-ASC" class="circle-ASC circle-fork-BTC"></circle><text id="text-ASC-ASC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ASC</text></g><g class="node" transform="translate(707,519.2906574394464)"><circle r="4.5" id="circle-BET-BET" 

class="circle-BET circle-fork-BTC"></circle><text id="text-BET-BET" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BET</text></g><g class="node" 

transform="translate(589.1666666666667,1015.5017301038063)"><circle r="4.75" id="circle-UNO-UNO" class="circle-UNO circle-fork-BTC"></circle><text id="text-UNO-UNO" 

dx="-8" dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">UNO</text></g><g class="node" transform="translate(707,1015.5017301038063)"><circle r="4.5" 

id="circle-AMK-AMK" class="circle-AMK circle-fork-UNO"></circle><text id="text-AMK-AMK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">AMK</text></g><g class="node" transform="translate(707,473.1314878892734)"><circle r="4.5" id="circle-RKC-RKC" class="circle-RKC circle-fork-BTC"></circle><text 

id="text-RKC-RKC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RKC</text></g><g class="node" transform="translate

(707,450.05190311418687)"><circle r="4.5" id="circle-NYM-NYM" class="circle-NYM circle-fork-BTC"></circle><text id="text-NYM-NYM" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">NYM</text></g><g class="node" transform="translate(707,426.9723183391003)"><circle r="4.5" id="circle-Curecoin-Curecoin" 

class="circle-Curecoin circle-fork-BTC"></circle><text id="text-Curecoin-Curecoin" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">Curecoin</text></g><g class="node" transform="translate(707,403.89273356401384)"><circle r="4.5" id="circle-HUC-HUC" class="circle-HUC circle-fork-BTC"></circle><text 

id="text-HUC-HUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HUC</text></g><g class="node" transform="translate

(707,380.8131487889273)"><circle r="4.5" id="circle-KMC-KMC" class="circle-KMC circle-fork-BTC"></circle><text id="text-KMC-KMC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">KMC</text></g><g class="node" transform="translate(707,357.73356401384086)"><circle r="4.5" id="circle-GLB-GLB" 

class="circle-GLB circle-fork-BTC"></circle><text id="text-GLB-GLB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GLB</text></g><g class="node" 

transform="translate(707,334.6539792387543)"><circle r="4.5" id="circle-SNC-SNC" class="circle-SNC circle-fork-BTC"></circle><text id="text-SNC-SNC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">SNC</text></g><g class="node" transform="translate(707,311.57439446366783)"><circle r="4.5" id="circle-SSC-SSC" 

class="circle-SSC circle-fork-BTC"></circle><text id="text-SSC-SSC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SSC</text></g><g class="node" 

transform="translate(707,288.4948096885813)"><circle r="4.5" id="circle-AAC-AAC" class="circle-AAC circle-fork-BTC"></circle><text id="text-AAC-AAC" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">AAC</text></g><g class="node" transform="translate(589.1666666666667,986.6522491349481)"><circle r="5" 

id="circle-BLC-BLC" class="circle-BLC circle-fork-BTC"></circle><text id="text-BLC-BLC" dx="-8" dy=".31em" class="btc" transform="translate(-0.5)" style="text-anchor: 

end;">BLC</text></g><g class="node" transform="translate(707,980.8823529411765)"><circle r="4.5" id="circle-PHO-PHO" class="circle-PHO circle-fork-BLC"></circle><text 

id="text-PHO-PHO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHO</text></g><g class="node" transform="translate

(707,992.4221453287197)"><circle r="4.5" id="circle-365-365" class="circle-365 circle-fork-BLC"></circle><text id="text-365-365" dx="8" dy=".31em" class="btc" transform="translate

(0)" style="text-anchor: start;">365</text></g><g class="node" transform="translate(707,242.3356401384083)"><circle r="4.5" id="circle-SPICE-SPICE" class="circle-SPICE circle-

fork-BTC"></circle><text id="text-SPICE-SPICE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SPICE</text></g><g class="node" 

transform="translate(707,219.2560553633218)"><circle r="4.5" id="circle-INK-INK" class="circle-INK circle-fork-BTC"></circle><text id="text-INK-INK" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">INK</text></g><g class="node" transform="translate(707,196.1764705882353)"><circle r="4.5" id="circle-LGBT-LGBT" 

class="circle-LGBT circle-fork-BTC"></circle><text id="text-LGBT-LGBT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LGBT</text></g><g 

class="node" transform="translate(707,173.0968858131488)"><circle r="4.5" id="circle-LOOT-LOOT" class="circle-LOOT circle-fork-BTC"></circle><text id="text-LOOT-LOOT" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOOT</text></g><g class="node" transform="translate(707,150.0173010380623)"><circle r="4.5" 

id="circle-TAK-TAK" class="circle-TAK circle-fork-BTC"></circle><text id="text-TAK-TAK" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">TAK</text></g><g class="node" transform="translate(707,126.93771626297578)"><circle r="4.5" id="circle-RIC-RIC" class="circle-RIC circle-fork-BTC"></circle><text 

id="text-RIC-RIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">RIC</text></g><g class="node" transform="translate

(707,57.69896193771627)"><circle r="4.5" id="circle-PWNY-PWNY" class="circle-PWNY circle-fork-BTC"></circle><text id="text-PWNY-PWNY" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PWNY</text></g><g class="node" transform="translate(707,23.079584775086506)"><circle r="4.5" id="circle-LUC-LUC" 

class="circle-LUC circle-fork-BTC"></circle><text id="text-LUC-LUC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LUC</text></g><g class="node" 

transform="translate(707,34.61937716262975)"><circle r="4.5" id="circle-POD-POD" class="circle-POD circle-fork-BTC"></circle><text id="text-POD-POD" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">POD</text></g><g class="node" transform="translate(707,934.7231833910035)"><circle r="4.5" id="circle-CKE-CKE" 

class="circle-CKE circle-fork-BTC"></circle><text id="text-CKE-CKE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CKE</text></g><g class="node" 

transform="translate(707,69.2387543252595)"><circle r="4.5" id="circle-ORO-ORO" class="circle-ORO circle-fork-BTC"></circle><text id="text-ORO-ORO" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">ORO</text></g><g class="node" transform="translate(707,80.77854671280276)"><circle r="4.5" id="circle-ATC-ATC" 

class="circle-ATC circle-fork-BTC"></circle><text id="text-ATC-ATC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ATC</text></g><g class="node" 

transform="translate(707,92.31833910034602)"><circle r="4.5" id="circle-BEN-BEN" class="circle-BEN circle-fork-BTC"></circle><text id="text-BEN-BEN" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">BEN</text></g><g class="node" transform="translate(707,103.85813148788927)"><circle r="4.5" id="circle-HXC-HXC" 

class="circle-HXC circle-fork-BTC"></circle><text id="text-HXC-HXC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">HXC</text></g><g 

class="node" transform="translate(707,115.39792387543254)"><circle r="4.5" id="circle-CTD-CTD" class="circle-CTD circle-fork-BTC"></circle><text id="text-CTD-CTD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CTD</text></g><g class="node" transform="translate(707,138.477508650519)"><circle r="4.5" id="circle-

ARS-ARS" class="circle-ARS circle-fork-BTC"></circle><text id="text-ARS-ARS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ARS</text></g><g 

class="node" transform="translate(707,957.80276816609)"><circle r="4.5" id="circle-BTN-BTN" class="circle-BTN circle-fork-BTC"></circle><text id="text-BTN-BTN" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTN</text></g><g class="node" transform="translate(707,184.63667820069205)"><circle r="4.5" 

id="circle-CX-CX" class="circle-CX circle-fork-BTC"></circle><text id="text-CX-CX" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">CX</text></g><g 

class="node" transform="translate(707,207.71626297577853)"><circle r="4.5" id="circle-ABC-ABC" class="circle-ABC circle-fork-BTC"></circle><text id="text-ABC-ABC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ABC</text></g><g class="node" transform="translate(707,230.79584775086508)"><circle r="4.5" 

id="circle-PRO-PRO" class="circle-PRO circle-fork-BTC"></circle><text id="text-PRO-PRO" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PRO</text></g><g class="node" transform="translate(707,253.87543252595157)"><circle r="4.5" id="circle-EIC-EIC" class="circle-EIC circle-fork-BTC"></circle><text 

id="text-EIC-EIC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">EIC</text></g><g class="node" transform="translate

(707,276.955017301038)"><circle r="4.5" id="circle-ChC-ChC" class="circle-ChC circle-fork-BTC"></circle><text id="text-ChC-ChC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">ChC</text></g><g class="node" transform="translate(707,300.0346020761246)"><circle r="4.5" id="circle-BULL-BULL" 

class="circle-BULL circle-fork-BTC"></circle><text id="text-BULL-BULL" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BULL</text></g><g 

class="node" transform="translate(707,323.11418685121106)"><circle r="4.5" id="circle-GSY-GSY" class="circle-GSY circle-fork-BTC"></circle><text id="text-GSY-GSY" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GSY</text></g><g class="node" transform="translate(707,346.1937716262976)"><circle r="4.5" id="circle-

ODNT-ODNT" class="circle-ODNT circle-fork-BTC"></circle><text id="text-ODNT-ODNT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ODNT</text></g><g class="node" transform="translate(707,369.2733564013841)"><circle r="4.5" id="circle-PHR-PHR" class="circle-PHR circle-fork-BTC"></circle><text 

id="text-PHR-PHR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PHR</text></g><g class="node" transform="translate

(707,392.3529411764706)"><circle r="4.5" id="circle-STEPS-STEPS" class="circle-STEPS circle-fork-BTC"></circle><text id="text-STEPS-STEPS" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">STEPS</text></g><g class="node" transform="translate(707,415.43252595155707)"><circle r="4.5" id="circle-LOG-LOG" 

class="circle-LOG circle-fork-BTC"></circle><text id="text-LOG-LOG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">LOG</text></g><g 

class="node" transform="translate(707,438.5121107266436)"><circle r="4.5" id="circle-GUINEA-GUINEA" class="circle-GUINEA circle-fork-BTC"></circle><text id="text-GUINEA-

GUINEA" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">GUINEA</text></g><g class="node" transform="translate

(707,461.59169550173016)"><circle r="4.5" id="circle-SOV-SOV" class="circle-SOV circle-fork-BTC"></circle><text id="text-SOV-SOV" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">SOV</text></g><g class="node" transform="translate(707,484.6712802768166)"><circle r="4.5" id="circle-eTaler-eTaler" 

class="circle-eTaler circle-fork-BTC"></circle><text id="text-eTaler-eTaler" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">eTaler</text></g><g 

class="node" transform="translate(707,507.75086505190313)"><circle r="4.5" id="circle-BTCD-BTCD" class="circle-BTCD circle-fork-BTC"></circle><text id="text-BTCD-BTCD" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTCD</text></g><g class="node" transform="translate(707,530.8304498269896)"><circle r="4.5" 

id="circle-ACOIN-ACOIN" class="circle-ACOIN circle-fork-BTC"></circle><text id="text-ACOIN-ACOIN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">ACOIN</text></g><g class="node" transform="translate(707,553.910034602076)"><circle r="4.5" id="circle-TTY-TTY" class="circle-TTY circle-fork-BTC"></circle><text 

id="text-TTY-TTY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">TTY</text></g><g class="node" transform="translate

(707,576.9896193771626)"><circle r="4.5" id="circle-UBTC-UBTC" class="circle-UBTC circle-fork-BTC"></circle><text id="text-UBTC-UBTC" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">UBTC</text></g><g class="node" transform="translate(707,600.0692041522492)"><circle r="4.5" id="circle-BTI-BTI" 

class="circle-BTI circle-fork-BTC"></circle><text id="text-BTI-BTI" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BTI</text></g><g class="node" 

transform="translate(589.1666666666667,1211.6782006920416)"><circle r="4.75" id="circle-YLC-YLC" class="circle-YLC circle-fork-BTC"></circle><text id="text-YLC-YLC" dx="-8" 

dy=".31em" class="btc" transform="translate(-0.25)" style="text-anchor: end;">YLC</text></g><g class="node" transform="translate(707,1211.6782006920416)"><circle r="4.5" 

id="circle-PAC-PAC" class="circle-PAC circle-fork-YLC"></circle><text id="text-PAC-PAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PAC</text></g><g class="node" transform="translate(707,646.2283737024221)"><circle r="4.5" id="circle-SSD-SSD" class="circle-SSD circle-fork-BTC"></circle><text 

id="text-SSD-SSD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">SSD</text></g><g class="node" transform="translate

(707,669.3079584775086)"><circle r="4.5" id="circle-DRX-DRX" class="circle-DRX circle-fork-BTC"></circle><text id="text-DRX-DRX" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">DRX</text></g><g class="node" transform="translate(707,692.3875432525952)"><circle r="4.5" id="circle-NEOS-NEOS" 

class="circle-NEOS circle-fork-BTC"></circle><text id="text-NEOS-NEOS" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NEOS</text></g><g 

class="node" transform="translate(707,715.4671280276817)"><circle r="4.5" id="circle-ASD-ASD" class="circle-ASD circle-fork-BTC"></circle><text id="text-ASD-ASD" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">ASD</text></g><g class="node" transform="translate(707,738.5467128027682)"><circle r="4.5" id="circle-

REB-REB" class="circle-REB circle-fork-BTC"></circle><text id="text-REB-REB" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">REB</text></g><g 

class="node" transform="translate(707,761.6262975778546)"><circle r="4.5" id="circle-BIG-BIG" class="circle-BIG circle-fork-BTC"></circle><text id="text-BIG-BIG" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">BIG</text></g><g class="node" transform="translate(707,784.7058823529412)"><circle r="4.5" id="circle-

XMG-XMG" class="circle-XMG circle-fork-BTC"></circle><text id="text-XMG-XMG" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">XMG</text></g><g class="node" transform="translate(707,807.7854671280277)"><circle r="4.5" id="circle-AXR-AXR" class="circle-AXR circle-fork-BTC"></circle><text 

id="text-AXR-AXR" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AXR</text></g><g class="node" transform="translate

(707,830.8650519031141)"><circle r="4.5" id="circle-MOBI-MOBI" class="circle-MOBI circle-fork-BTC"></circle><text id="text-MOBI-MOBI" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">MOBI</text></g><g class="node" transform="translate(707,853.9446366782006)"><circle r="4.5" id="circle-NODE-NODE" 

class="circle-NODE circle-fork-BTC"></circle><text id="text-NODE-NODE" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">NODE</text></g><g 

class="node" transform="translate(707,877.0242214532872)"><circle r="4.5" id="circle-WWC-WWC" class="circle-WWC circle-fork-BTC"></circle><text id="text-WWC-WWC" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">WWC</text></g><g class="node" transform="translate(707,900.1038062283737)"><circle r="4.5" id="circle-

AU-AU" class="circle-AU circle-fork-BTC"></circle><text id="text-AU-AU" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">AU</text></g><g 

class="node" transform="translate(707,923.1833910034603)"><circle r="4.5" id="circle-PPCD-PPCD" class="circle-PPCD circle-fork-BTC"></circle><text id="text-PPCD-PPCD" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PPCD</text></g><g class="node" transform="translate(707,623.1487889273357)"><circle r="4.5" 

id="circle-DOGEBC-DOGEBC" class="circle-DOGEBC circle-fork-BTC"></circle><text id="text-DOGEBC-DOGEBC" dx="8" dy=".31em" class="btc" transform="translate(0)" 

style="text-anchor: start;">DOGEBC</text></g><g class="node" transform="translate(707,161.55709342560553)"><circle r="4.5" id="circle-PPCD-PPCD" class="circle-PPCD circle-

fork-BTC"></circle><text id="text-PPCD-PPCD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">PPCD</text></g><g class="node" 

transform="translate(707,265.4152249134948)"><circle r="4.5" id="circle-FUD-FUD" class="circle-FUD circle-fork-BTC"></circle><text id="text-FUD-FUD" dx="8" dy=".31em" 

class="btc" transform="translate(0)" style="text-anchor: start;">FUD</text></g><g class="node" transform="translate(707,496.21107266435985)"><circle r="4.5" id="circle-FLIRT-

FLIRT" class="circle-FLIRT circle-fork-BTC"></circle><text id="text-FLIRT-FLIRT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">FLIRT</text></g><g class="node" transform="translate(707,565.4498269896194)"><circle r="4.5" id="circle-URAN-URAN" class="circle-URAN circle-fork-BTC"></circle><text 

id="text-URAN-URAN" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">URAN</text></g><g class="node" transform="translate

(707,634.6885813148789)"><circle r="4.5" id="circle-PIMP-PIMP" class="circle-PIMP circle-fork-BTC"></circle><text id="text-PIMP-PIMP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">PIMP</text></g><g class="node" transform="translate(707,657.7681660899653)"><circle r="4.5" id="circle-FLIRT-FLIRT" 

class="circle-FLIRT circle-fork-BTC"></circle><text id="text-FLIRT-FLIRT" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">FLIRT</text></g><g 

class="node" transform="translate(707,680.8477508650519)"><circle r="4.5" id="circle-DECR-DECR" class="circle-DECR circle-fork-BTC"></circle><text id="text-DECR-DECR" 

dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">DECR</text></g><g class="node" transform="translate(707,727.006920415225)"><circle r="4.5" 

id="circle-PAYER-PAYER" class="circle-PAYER circle-fork-BTC"></circle><text id="text-PAYER-PAYER" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">PAYER</text></g><g class="node" transform="translate(707,796.2456747404844)"><circle r="4.5" id="circle-IQD-IQD" class="circle-IQD circle-fork-BTC"></circle><text 

id="text-IQD-IQD" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">IQD</text></g><g class="node" transform="translate

(707,819.3252595155709)"><circle r="4.5" id="circle-IMP-IMP" class="circle-IMP circle-fork-BTC"></circle><text id="text-IMP-IMP" dx="8" dy=".31em" class="btc" 

transform="translate(0)" style="text-anchor: start;">IMP</text></g><g class="node" transform="translate(707,842.4048442906574)"><circle r="4.5" id="circle-OAC-OAC" 

class="circle-OAC circle-fork-BTC"></circle><text id="text-OAC-OAC" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">OAC</text></g><g 

class="node" transform="translate(707,865.4844290657438)"><circle r="4.5" id="circle-MTX-MTX" class="circle-MTX circle-fork-BTC"></circle><text id="text-MTX-MTX" dx="8" 

dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start;">MTX</text></g><g class="node" transform="translate(707,946.2629757785468)"><circle r="4.5" id="circle-

SUP-SUP" class="circle-SUP circle-fork-BTC"></circle><text id="text-SUP-SUP" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: 

start;">SUP</text></g><path class="link" id="link-GAY-GAY" d="M0,613.2488781196508C353.5,613.2488781196508 353.5,46.15916955017301 707,46.15916955017301" 

style="opacity: 0.5; stroke: rgb(136, 136, 136); stroke-width: 2px;"></path><g class="node" transform="translate(707,46.15916955017301)"><circle r="4.5" id="circle-GAY-GAY" 

class="circle-GAY circle-fork-BTC" style="fill: rgb(255, 255, 255);"></circle><text id="text-GAY-GAY" dx="8" dy=".31em" class="btc" transform="translate(0)" style="text-anchor: start; 

font-size: 10px;">GAY</text></g><g class="node" transform="translate(0,613.2488781196508)"><circle r="49.875" id="circle-BTC-BTC" class="circle-BTC circle-fork-"></circle><text 

id="text-BTC-BTC" dx="-8" dy=".31em" class="btc" transform="translate(-49.92)" style="text-anchor: end;">BTC</text></g></g></svg>

Sent: Thursday, September 13, 2018 at 6:41 PM
From: "Mass Mason" <1st@musician.org>
To: 1st@musician.org
Subject: Cryptonote @musicore
@cryptonotefoundation
cryptonotefoundation Merge remote-tracking branch 'bytecoin/master'
 1
Latest commit 8edd998 on Jan 18, 2016
 	external	Issue #57. Add missing 'override' keyword	3 years ago
 	include	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	src	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	tests	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	.gitattributes	moved all stuff to github	5 years ago
 	.gitignore	IWallet implementation improvements	3 years ago
 	CMakeLists.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	CTestCustom.cmake	Bytecoin v.1.0.7 release	3 years ago
 	Makefile	moved all stuff to github	5 years ago
 	README.md	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 	ReleaseNotes.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 README.md
This is the reference code for CryptoNote cryptocurrency protocol.

Launch your own CryptoNote currency: CryptoNote Starter
CryptoNote reference implementation: CryptoNoteCoin
Discussion board and support: CryptoNote Forum
CryptoNote forking how-to
Preparation
Create an account on GitHub.com
Fork CryptoNote repository
Buy one or two Ubuntu-based dedicated servers (at least 2Gb of RAM) for seed nodes.
First step. Give a name to your coin
Good name must be unique. Check uniqueness with google and Map of Coins or any other similar service.

Name must be specified twice:

1. in file src/CryptoNoteConfig.h - CRYPTONOTE_NAME constant

Example:

const char CRYPTONOTE_NAME[] = "furiouscoin";
2. in src/CMakeList.txt file - set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")

Example:

set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change a repository name.

Second step. Emission logic
1. Total money supply (src/CryptoNoteConfig.h)

Total amount of coins to be emitted. Most of CryptoNote based coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example 

UINT64_C(858986905600000000)).

Example:

const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
2. Emission curve (src/CryptoNoteConfig.h)

Be default CryptoNote provides emission formula with slight decrease of block reward with each block. This is different from Bitcoin where block reward halves every 4 years.

EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.

Example:

const unsigned EMISSION_SPEED_FACTOR = 18;
3. Difficulty target (src/CryptoNoteConfig.h)

Difficulty target is an ideal time period between blocks. In case an average time between blocks becomes less than difficulty target, the difficulty increases. Difficulty target is measured 

in seconds.

Difficulty target directly influences several aspects of coin's behavior:

transaction confirmation speed: the longer the time between the blocks is, the slower transaction confirmation is
emission speed: the longer the time between the blocks is the slower the emission process is
orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.

Example:

const uint64_t DIFFICULTY_TARGET = 120;
4. Block reward formula

In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in src/CryptoNoteCore/Currency.cpp:

bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, int64_t& emissionChange) const
This function has two parts:

basic block reward calculation: uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> m_emissionSpeedFactor;
big block penalty calculation: this is the way CryptoNote protects the block chain from transaction flooding attacks and preserves opportunities for organic network growth at the same 

time.
Only the first part of this function is directly related to the emission logic. You can change it the way you want. See MonetaVerde and DuckNote as the examples where this function is 

modified.

Third step. Networking
1. Default ports for P2P and RPC networking (src/CryptoNoteConfig.h)

P2P port is used by daemons to talk to each other through P2P protocol. RPC port is used by wallet and other programs to talk to daemon.

It's better to choose ports that aren't used by other software or coins. See known TCP ports lists:

http://www.speedguide.net/ports.php
http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
http://keir.net/portlist.html
Example:

const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;
2. Network identifier (src/P2p/P2pNetworks.h)

This identifier is used in network packages in order not to mix two different cryptocoin networks. Change all the bytes to random values for your network:

const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
3. Seed nodes (src/CryptoNoteConfig.h)

Add IP addresses of your seed nodes.

Example:

const std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Fourth step. Transaction fee and related parameters
1. Minimum transaction fee (src/CryptoNoteConfig.h)

Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is 

usually enough.

Example:

const uint64_t MINIMUM_FEE = 100000;
2. Penalty free block size (src/CryptoNoteConfig.h)

CryptoNote protects chain from tx flooding by reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.

Example:

const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Fifth step. Address prefix
You may choose a letter (in some cases several letters) all the coin's public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. 

Since the rules for address prefixes are nontrivial you may use the prefix generator tool.

Example:

const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Sixth step. Genesis block
1. Build the binaries with blank genesis tx hex (src/CryptoNoteConfig.h)

You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.

Example:

const char GENESIS_COINBASE_TX_HEX[] = "";
2. Start the daemon to print out the genesis block

Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.

Example:

furiouscoind --print-genesis-tx
3. Copy the printed transaction hash (src/CryptoNoteConfig.h)

Copy the tx hash that has been printed by the daemon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h

Example:

const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
4. Recompile the binaries

Recompile everything again. Your coin code is ready now. Make an announcement for the potential users and enjoy!

Building CryptoNote
On *nix
Dependencies: GCC 4.7.3 or later, CMake 2.8.6 or later, and Boost 1.55.

You may download them from:

http://gcc.gnu.org/
http://www.cmake.org/
http://www.boost.org/
Alternatively, it may be possible to install them using a package manager.
To build, change to a directory where this file is located, and run make. The resulting executables can be found in build/release/src.

Advanced options:

Parallel build: run make -j<number of threads> instead of make.
Debug build: run make build-debug.
Test suite: run make test-release to run tests in addition to building. Running make test-debug will do the same to the debug version.
Building with Clang: it may be possible to use Clang instead of GCC, but this may not work everywhere. To build, run export CC=clang CXX=clang++ before running make.
On Windows
Dependencies: MSVC 2013 or later, CMake 2.8.6 or later, and Boost 1.55. You may download them from:

http://www.microsoft.com/
http://www.cmake.org/
http://www.boost.org/
To build, change to a directory where this file is located, and run theas commands:

mkdir build
cd build
cmake -G "Visual Studio 12 Win64" ..
And then do Build. Good luck!

<!---Starting . . .

@cryptonotefoundation
Initial commit
e399973
@cryptonotefoundation
Minor fixies in comments
2f44547
@cryptonotefoundation
Update README, add forking guide
9a0a44a
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
7853c21
@cryptonotefoundation
Added testnet flag in daemon
f4769d8
@cryptonotefoundation
Add print-genesis-tx option.
7f23949
@cryptonotefoundation
Update README
eefb411
@cryptonotefoundation
CryptoC-3: fix for Merkle tree root issue
6be8153
@cryptonotefoundation
Update README
b00a96c
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
fbd7265
@cryptonotefoundation
Merge remote-tracking branch 'bytecoin/master'
cde1b8e
<Musicore:
<?xml version="1.0"?>
 	<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" 

s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:GetSpecificPortMappingEntry xmlns:u="urn:schemas-upnp-

org:service:WANIPConnection:1"><NewRemoteHost></NewRemoteHost><NewExternalPort>12345</NewExternalPort><NewProtocol>UDP</NewProtocol></u:GetSpecificPortMapp

ingEntry></s:Body></s:Envelope>
 	
Good name must be unique. Check uniqueness with Google and Map of Coins.


Name must be specified twice:
— in file src/CryptoNoteConfig.h — CRYPTONOTE_NAME constant
Example: 
const char CRYPTONOTE_NAME[] = "furiouscoin";
— in src/CMakeList.txt file — set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")
Example: 
set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change the repository name.

Emission logic
Total money supply — src/CryptoNoteConfig.h
Total amount of coins to be emitted. Most of CryptoNote-based coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example 

UINT64_C(858986905600000000)).
Example: 
const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
Emission curve — src/CryptoNoteConfig.h
By default CryptoNote provides emission formula with a slight decrease of block reward each block. This is different from Bitcoin where block reward halves every 4 years.
EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.
Example: 
const unsigned EMISSION_SPEED_FACTOR = 18;
Difficulty target — src/CryptoNoteConfig.h
Difficulty target is an ideal time period between blocks. In case an average time between blocks becomes less than difficulty target, difficulty increases. Difficulty target is measured in 

seconds.
Difficulty target directly influences several aspects of coin's behavior:
— transaction confirmation speed: the longer time between the blocks is, the slower transaction confirmation is
— emission speed: the longer the time between blocks is the slower the emission is
— orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.
Example: 
const uint64_t DIFFICULTY_TARGET = 120;

Block reward formula
In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in src/CryptoNoteCore/Currency.cpp:
bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, int64_t& emissionChange) const
This function has two parts:
—basic block reward calculation
uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> m_emissionSpeedFactor;
—big block penalty calculation
This is the way CryptoNote protects chain from transaction flooding attacks and preserves opportunities for organic network growth at the same time.

Only the first part of this function is directly related to emission logic. You can change it the way you want. See MonetaVerde and DarkNote as the examples where this function is 

modified.
Emission calculator
You may play around with DIFFICULTY_TARGET and EMISSION_SPEED_FACTOR parameters and check how your coin's emission will look like compared to Bitcoin. The graph 

below projects emission percentage for the first 30 years.

YearEmission %Your coinBitcoin0510152025300100255075
 
EMISSION_SPEED_FACTORDIFFICULTY_TARGETMONEY_SUPPLY
Networking
Default ports for P2P and RPC networking — src/CryptoNoteConfig.h
P2P port is used by daemons to communicate with each other through P2P protocol.
RPC port is used by wallet and other software to communicate with the daemon.
It's better to choose ports that aren't used by some other software. See known TCP ports lists:
— http://www.speedguide.net/ports.php
— http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
— http://keir.net/portlist.html

Example:
const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;

Network identifier — src/P2p/P2pNetworks.h
This identifier is used for network packages in order not to mix two different cryptocoin networks. Change all bytes to random values for your network:
const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
Seed nodes — src/CryptoNoteConfig.h
Add IP addresses of your seed nodes. 
Example: 
const std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Transaction fee and related parameters
Minimum transaction fee — src/CryptoNoteConfig.h
Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is 

usually enough.
Example:
const uint64_t MINIMUM_FEE = 100000;
Penalty free block size — src/CryptoNoteConfig.h
CryptoNote protects chain from tx flooding by reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.
Example:
const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Address prefix
You may choose a letter (in some cases several letters) all the coin's public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. 

Since the rules for address prefixes are nontrivial you may use the prefix generator tool below.

Example:
const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Desired address prefix CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX
 
Genesis block
Build the binaries with a blank genesis tx hex — src/CryptoNoteConfig.h
You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.
Example:
const char GENESIS_COINBASE_TX_HEX[] = "";
Start the daemon to print out the genesis block
Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.
Example:
furiouscoind --print-genesis-tx
Insert the printed transaction hash — src/CryptoNoteConfig.h
Copy the tx hash that has been printed out by the deamon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h 
Example:
const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
Recompile the binaries
Recompile everything again. Your coin code is ready now. Make an announcement on CryptoNote Forum and enjoy!
Submit your coin for the review
In order to be officially announced as a CryptoNote currency you should submit your coin : Cryptomusic (Musicore) (Bitcoin Music) ($MC)

 format:
 
Coin name = Musicore
Ticker = Bitcoin
Logo = (available) - 1st Music
Website link = Musicore.com
Public discussion links = blokchain.info
Sources link = github.com
Specifications = cryptonote
Any additional details = musicore.exe (tunecoin, harmoney, bitcoinmusic, etc.)
---------------------------------------------------
Musicore.exe #hastag ?xml version="1.0" encoding="utf-8" ?>
<ContentCollection>
	<MetaInfo> 
		
		<Customer>_Kunde</Customer> 
	
		<CustomerNumber>_Kundenauftragsnummer</CustomerNumber>
			
		<PlantNumber>_Werkauftragsnummer</PlantNumber>
			
		<OrderNumber>_Bestellung</OrderNumber>

		<Description>_Beschreibung</Description>
		
	</MetaInfo>
	
	
	<UsingDocument FileName="793-501.wstx" />
	
	
	<MarkingCarriers>
			<MarkingCarrier>
			
			<Contents>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent>
									</Content>
								<Content>
				
					<Type>Text</Type>
					
					<VerticalAlign>Middle</VerticalAlign>
					
					<HorizontalAlign>Center</HorizontalAlign>
					
					<Margin>0</Margin>
					
					<Proportional>true</Proportional>
					
					<Orientation>0</Orientation>
										<TextContent>
					
						<String></String>
																	

</TextContent=

'input'
($)MC=

laanwj
build: bump version to 0.17.0 …
Verified

cd2f4f3

fanquake
doc: regenerate manpages
Verified

f0f745d

laanwj
Merge #13956: [0.17] doc: regenerate 

manpages …
Verified

ff41e47
Commits on Aug 14, 2018

achow101 and fanquake
Fix PSBT deserialization of 0-input transactions …
Verified
8c4cd2b

achow101 and fanquake
Serialize 

non-witness utxo as a non-witness tx but always deserialize… …
Verified
517010e

sipa and fanquake
Additional sanity checks in SignPSBTInput …
Verified
ad6d845

sipa and fanquake
Only wipe wrong UTXO type data if overwritten by wallet …
Verified
dbaadc9

achow101 and fanquake
Test that a non-witness script as witness utxo is not signed …
Verified
8935869

achow101 and fanquake
More tests of signer checks …
Verified

0333914
Commits on Aug 15, 2018

laanwj
Merge #13976: [0.17] Backport #13960 & #13917 …
Verified

4a2960f
Commits 

on Aug 16, 2018

laanwj
qt: Pre-rc1 translations update …
Verified

3d827be
Commits on Aug 19, 2018

theuni and MarcoFalke
depends: fix qt determinism …
48c8459
Commits on Aug 21, 

2018

laanwj
Merge #14005: [0.17] depends: fix qt determinism …
Verified

1ffd67f

instagibbs and laanwj
Allow ConstructTransaction to not throw error with 0-input txn …
Verified
c6d9057

instagibbs and laanwj
walletcreatefundedpsbt: remove duplicate replaceable arg …
Verified
65e7a8b

instagibbs and laanwj
QA: add basic walletcreatefunded optional arg test …
Verified
82e2b9c

instagibbs and laanwj
RPCTypeCheck bip32derivs arg in walletcreatefunded …
Verified

9833545
Commits on Aug 22, 2018

luke-jr and laanwj
Bugfix: NSIS: Exclude 

Makefile* from docs …
Verified

3e4829a
Commits on Aug 27, 2018

Empact and MarcoFalke
Docs: Fix help message typo optiona -> optional …
b5ec6d4

MarcoFalke
qa: Stop txindex 

thread before calling destructor …
fab0fbe

skeees and MarcoFalke
Use assert when running from multithreaded code as BOOST_CHECK_* are … …

cf3d7f9
Commits on Aug 28, 2018

laanwj
Merge #14084: [0.17] qa: Backports …
Verified

5f71eac

instagibbs and laanwj
fix walletcreatefundedpsbt deriv paths, add test …
Verified
2307a6e
Commits on Sep 05, 2018

laanwj and MarcoFalke
doc: Change documentation for =0 for non-boolean options …

2936dbc

MarcoFalke
doc: Update v0.17.0.0 manpages

6bfee8a
Commits on Sep 06, 2018

laanwj
Merge #14152: [0.17] doc: Change documentation for =0 for non-boolean… …
Verified

6ba1f15

laanwj
util: Report parse errors in configuration file …
Verified
83aafd5

MarcoFalke and laanwj
test: Add test for config file parsing errors …
Verified

eb202ea

sipa and laanwj
Add descriptor reference documentation …
Verified
0f681ce

sipa and laanwj
Adjust 

TODO link …
Verified
eece974

sipa and laanwj
Replace duplcate reference with reference to reference doc …
Verified
Musicore.exe
Sent: Thursday, September 13, 2018 at 7:10 PM
From: "Mass Mason" <1st@musician.org>
To: "Mass Mason" <1st@musician.org>
Subject: Re: Cryptonote @musicore
#Tag($) - 1st@musician.org
----
git clone 

https://git.code.sf.net/p/cryptonotecoin/code cryptonotecoin-code
'musicore'
true=tunecoin "MC$"
cryptocurrency
xcode=wallet($)

Sent: Thursday, September 13, 2018 at 6:41 PM
From: "Mass Mason" <1st@musician.org>
To: 1st@musician.org
Subject: Cryptonote @musicore

cryptonotefoundation Merge remote-tracking branch 'bytecoin/master'
 1
Latest 

commit 8edd998 on Jan 18, 2016

external	Issue #57. Add missing 'override' keyword	3 years ago

include	Merge remote-tracking branch 'bytecoin/master'	3 years 

ago

src	Merge remote-tracking branch 'bytecoin/master'	3 years ago

tests	Merge remote-tracking branch 'bytecoin/master'	3 years ago

.gitattributes	moved all stuff to 

github	5 years ago

.gitignore	IWallet implementation improvements	3 years ago

CMakeLists.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago

CTestCustom.cmake	Bytecoin v.1.0.7 release	3 years ago

Makefile	moved all stuff to github	5 years ago

README.md	Merge remote-tracking branch 

'bytecoin/master'	3 years ago

ReleaseNotes.txt	Merge remote-tracking branch 'bytecoin/master'	3 years ago
 README.md
This is the reference code 

for CryptoNote cryptocurrency protocol.

Launch your own CryptoNote currency: CryptoNote Starter
CryptoNote reference implementation: CryptoNoteCoin
Discussion board and 

support: CryptoNote Forum
CryptoNote forking how-to
Preparation
Create an account on GitHub.com
Fork CryptoNote repository
Buy one or two Ubuntu-based dedicated servers (at least 

2Gb of RAM) for seed nodes.
First step. Give a name to your coin
Good name must be unique. Check uniqueness with google and Map of Coins or any other similar service.

Name must 

be specified twice:

1. in file src/CryptoNoteConfig.h - CRYPTONOTE_NAME constant

Example:

const char CRYPTONOTE_NAME[] = "furiouscoin";
2. in src/CMakeList.txt file - 

set_property(TARGET daemon PROPERTY OUTPUT_NAME "YOURCOINNAMEd")

Example:

set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You 

should also change a repository name.

Second step. Emission logic
1. Total money supply (src/CryptoNoteConfig.h)

Total amount of coins to be emitted. Most of CryptoNote based 

coins use (uint64_t)(-1) (equals to 18446744073709551616). You can define number explicitly (for example UINT64_C(858986905600000000)).

Example:

const uint64_t 

MONEY_SUPPLY = (uint64_t)(-1);
2. Emission curve (src/CryptoNoteConfig.h)

Be default CryptoNote provides emission formula with slight decrease of block reward with each block. 

This is different from Bitcoin where block reward halves every 4 years.

EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate 

block reward.

Example:

const unsigned EMISSION_SPEED_FACTOR = 18;
3. Difficulty target (src/CryptoNoteConfig.h)

Difficulty target is an ideal time period between blocks. In case 

an average time between blocks becomes less than difficulty target, the difficulty increases. Difficulty target is measured in seconds.

Difficulty target directly influences several aspects 

of coin's behavior:

transaction confirmation speed: the longer the time between the blocks is, the slower transaction confirmation is
emission speed: the longer the time between the 

blocks is the slower the emission process is
orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.

Example:

const 

uint64_t DIFFICULTY_TARGET = 120;
4. Block reward formula

In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The 

implementation is in src/CryptoNoteCore/Currency.cpp:

bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, 

uint64_t& reward, int64_t& emissionChange) const
This function has two parts:

basic block reward calculation: uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> 

m_emissionSpeedFactor;
big block penalty calculation: this is the way CryptoNote protects the block chain from transaction flooding attacks and preserves opportunities for organic 

network growth at the same time.
Only the first part of this function is directly related to the emission logic. You can change it the way you want. See MonetaVerde and DuckNote as the 

examples where this function is modified.

Third step. Networking
1. Default ports for P2P and RPC networking (src/CryptoNoteConfig.h)

P2P port is used by daemons to talk to each 

other through P2P protocol. RPC port is used by wallet and other programs to talk to daemon.

It's better to choose ports that aren't used by other software or coins. See known TCP ports 

lists:

http://www.speedguide.net/ports.php
http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
http://keir.net/portlist.html
Example:

const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;
2. Network identifier (src/P2p/P2pNetworks.h)

This identifier is used in network packages in order not to mix two different cryptocoin 

networks. Change all the bytes to random values for your network:

const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 

0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
3. Seed nodes (src/CryptoNoteConfig.h)

Add IP addresses of your seed nodes.

Example:

const std::initializer_list<const char*> 

SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Fourth step. Transaction fee and related parameters
1. Minimum transaction fee (src/CryptoNoteConfig.h)

Zero 

minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value for MINIMUM_FEE is usually 

enough.

Example:

const uint64_t MINIMUM_FEE = 100000;
2. Penalty free block size (src/CryptoNoteConfig.h)

CryptoNote protects chain from tx flooding by reducing block reward for 

blocks larger than the median block size. However, this rule applies for blocks larger than CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE bytes.

Example:

const size_t 

CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Fifth step. Address prefix
You may choose a letter (in some cases several letters) all the coin's public 

addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. Since the rules for address prefixes are nontrivial you may use the prefix 

generator tool.

Example:

const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Sixth step. Genesis block
1. Build the binaries with 

blank genesis tx hex (src/CryptoNoteConfig.h)

You should leave const char GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.

Example:

const char 

GENESIS_COINBASE_TX_HEX[] = "";
2. Start the daemon to print out the genesis block

Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase 

transaction hash.

Example:

furiouscoind --print-genesis-tx
3. Copy the printed transaction hash (src/CryptoNoteConfig.h)

Copy the tx hash that has been printed by the daemon 

to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h

Example:

const char GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
4. Recompile the 

binaries

Recompile everything again. Your coin code is ready now. Make an announcement for the potential users and enjoy!

Building CryptoNote
On *nix
Dependencies: GCC 4.7.3 or 

later, CMake 2.8.6 or later, and Boost 1.55.

You may download them from:

http://gcc.gnu.org/
http://www.cmake.org/
http://www.boost.org/
Alternatively, it may be possible to install them 

using a package manager.
To build, change to a directory where this file is located, and run make. The resulting executables can be found in build/release/src.

Advanced options:

Parallel build: run make -j<number of threads> instead of make.
Debug build: run make build-debug.
Test suite: run make test-release to run tests in addition to building. Running make 

test-debug will do the same to the debug version.
Building with Clang: it may be possible to use Clang instead of GCC, but this may not work everywhere. To build, run export CC=clang 

CXX=clang++ before running make.
On Windows
Dependencies: MSVC 2013 or later, CMake 2.8.6 or later, and Boost 1.55. You may download them from:

http://www.microsoft.com/
http://www.cmake.org/
http://www.boost.org/
To build, change to a directory where this file is located, and run theas commands:

mkdir build
cd build
cmake -G "Visual Studio 12 Win64" 

..
And then do Build. Good luck!

<!---Starting . . .


Initial commit
e399973

Minor fixies in comments
2f44547

Update README, add forking guide
9a0a44a

Merge remote-tracking branch 

'bytecoin/master'
7853c21

Added testnet flag in daemon
f4769d8

Add print-genesis-tx option.
7f23949

Update README
eefb411

CryptoC-3: fix for Merkle tree root issue
6be8153

Update 

README
b00a96c

Merge remote-tracking branch 'bytecoin/master'
fbd7265

Merge remote-tracking branch 'bytecoin/master'
cde1b8e
<Musicore:
<?xml version="1.0"?>

<s:Envelope 

xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:GetSpecificPortMappingEntry 

xmlns:u="urn:schemas-upnp-

org:service:WANIPConnection:1"><NewRemoteHost></NewRemoteHost><NewExternalPort>12345</NewExternalPort><NewProtocol>UDP</NewProtocol></u:GetSpecificPortMapp

ingEntry></s:Body></s:Envelope>

Good name must be unique. Check uniqueness with Google and Map of Coins.


Name must be specified twice:
— in file src/CryptoNoteConfig.h — 

CRYPTONOTE_NAME constant
Example: 
const char CRYPTONOTE_NAME[] = "furiouscoin";
— in src/CMakeList.txt file — set_property(TARGET daemon PROPERTY 

OUTPUT_NAME "YOURCOINNAMEd")
Example: 
set_property(TARGET daemon PROPERTY OUTPUT_NAME "furiouscoind")
Note: You should also change the repository name.

Emission logic
Total money supply — src/CryptoNoteConfig.h
Total amount of coins to be emitted. Most of CryptoNote-based coins use (uint64_t)(-1) (equals to 

18446744073709551616). You can define number explicitly (for example UINT64_C(858986905600000000)).
Example: 
const uint64_t MONEY_SUPPLY = (uint64_t)(-1);
Emission 

curve — src/CryptoNoteConfig.h
By default CryptoNote provides emission formula with a slight decrease of block reward each block. This is different from Bitcoin where block reward 

halves every 4 years.
EMISSION_SPEED_FACTOR constant defines emission curve slope. This parameter is required to calulate block reward.
Example: 
const unsigned 

EMISSION_SPEED_FACTOR = 18;
Difficulty target — src/CryptoNoteConfig.h
Difficulty target is an ideal time period between blocks. In case an average time between blocks 

becomes less than difficulty target, difficulty increases. Difficulty target is measured in seconds.
Difficulty target directly influences several aspects of coin's behavior:
— transaction 

confirmation speed: the longer time between the blocks is, the slower transaction confirmation is
— emission speed: the longer the time between blocks is the slower the emission is
— 

orphan rate: chains with very fast blocks have greater orphan rate
For most coins difficulty target is 60 or 120 seconds.
Example: 
const uint64_t DIFFICULTY_TARGET = 120;

Block 

reward formula
In case you are not satisfied with CryptoNote default implementation of block reward logic you can also change it. The implementation is in 

src/CryptoNoteCore/Currency.cpp:
bool Currency::getBlockReward(size_t medianSize, size_t currentBlockSize, uint64_t alreadyGeneratedCoins, uint64_t fee, uint64_t& reward, 

int64_t& emissionChange) const
This function has two parts:
—basic block reward calculation
uint64_t baseReward = (m_moneySupply - alreadyGeneratedCoins) >> 

m_emissionSpeedFactor;
—big block penalty calculation
This is the way CryptoNote protects chain from transaction flooding attacks and preserves opportunities for organic network 

growth at the same time.

Only the first part of this function is directly related to emission logic. You can change it the way you want. See MonetaVerde and DarkNote as the examples 

where this function is modified.
Emission calculator
You may play around with DIFFICULTY_TARGET and EMISSION_SPEED_FACTOR parameters and check how your coin's 

emission will look like compared to Bitcoin. The graph below projects emission percentage for the first 30 years.

YearEmission %Your coinBitcoin0510152025300100255075

EMISSION_SPEED_FACTORDIFFICULTY_TARGETMONEY_SUPPLY
Networking
Default ports for P2P and RPC networking — src/CryptoNoteConfig.h
P2P port is used by daemons 

to communicate with each other through P2P protocol.
RPC port is used by wallet and other software to communicate with the daemon.
It's better to choose ports that aren't used by 

some other software. See known TCP ports lists:
— http://www.speedguide.net/ports.php
— http://www.networksorcery.com/enp/protocol/ip/ports00000.htm
— http://keir.net/portlist.html

Example:
const int P2P_DEFAULT_PORT = 17236;
const int RPC_DEFAULT_PORT = 18236;

Network identifier — src/P2p/P2pNetworks.h
This identifier is used for network packages 

in order not to mix two different cryptocoin networks. Change all bytes to random values for your network:
const static boost::uuids::uuid CRYPTONOTE_NETWORK = { { 0xA1, 0x1A, 

0xA1, 0x1A, 0xA1, 0x0A, 0xA1, 0x0A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA0, 0x1A, 0xA1, 0x1A } };
Seed nodes — src/CryptoNoteConfig.h
Add IP addresses of your seed nodes. 
Example: 
const 

std::initializer_list<const char*> SEED_NODES = {
  "111.11.11.11:17236",
  "222.22.22.22:17236",
};
Transaction fee and related parameters
Minimum transaction fee — 

src/CryptoNoteConfig.h
Zero minimum fee can lead to transaction flooding. Transactions cheaper than the minimum transaction fee wouldn't be accepted by daemons. 100000 value 

for MINIMUM_FEE is usually enough.
Example:
const uint64_t MINIMUM_FEE = 100000;
Penalty free block size — src/CryptoNoteConfig.h
CryptoNote protects chain from tx flooding by 

reducing block reward for blocks larger than the median block size. However, this rule applies for blocks larger than CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE 

bytes.
Example:
const size_t CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE = 20000;
Address prefix
You may choose a letter (in some cases several letters) all the coin's 

public addresses will start with. It is defined by CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX constant. Since the rules for address prefixes are nontrivial you may use the 

prefix generator tool below.

Example:
const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX = 0xe9; // addresses start with "f"
Desired address 

prefix CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX

Genesis block
Build the binaries with a blank genesis tx hex — src/CryptoNoteConfig.h
You should leave const char 

GENESIS_COINBASE_TX_HEX[] blank and compile the binaries without it.
Example:
const char GENESIS_COINBASE_TX_HEX[] = "";
Start the daemon to print out the genesis block
Run your daemon with --print-genesis-tx argument. It will print out the genesis block coinbase transaction hash.
Example:
furiouscoind --print-genesis-tx
Insert the printed transaction 

hash — src/CryptoNoteConfig.h
Copy the tx hash that has been printed out by the deamon to GENESIS_COINBASE_TX_HEX in src/CryptoNoteConfig.h 
Example:
const char 

GENESIS_COINBASE_TX_HEX[] = "013c01ff0001ffff...785a33d9ebdba68b0";
Recompile the binaries
Recompile everything again. Your coin code is ready now. Make an 

announcement on CryptoNote Forum and enjoy!
Submit your coin for the review
In order to be officially announced as a CryptoNote currency you should submit your coin : Cryptomusic 

(Musicore) (Bitcoin Music) ($MC)

 format:

Coin name = Musicore
Ticker = Bitcoin
Logo = (available) - 1st Music
Website link = Musicore.com
Public discussion links = blokchain.info
Sources link = github.com
Specifications = cryptonote
Any additional details = musicore.exe (tunecoin, harmoney, bitcoinmusic, etc.)

									</Content>
							</Contents>
		</MarkingCarrier>
			</MarkingCarriers>
<Hash_targ(MC$) : 3,493
 Star 34,679  Fork 20,995 bitcoin/bitcoin
 Code  Issues 548  Pull requests 278  Projects 7  Insights
Pulse
Contributors
Community
Commits
Code frequency
Dependency graph
Network
Forks
Woah, this network is huge! We’re showing only some of this network’s repositories.
@bitcoin bitcoin / bitcoin
  @171099 171099 / bitcoin
  @1761461582 1761461582 / bitcoin
  @a-nai a-nai / bitcoin
  @a5an0 a5an0 / bitcoin
  @aakselrod aakselrod / bitcoin
  @aantthony aantthony / bitcoin
  @aaronschmitz aaronschmitz / chronocrypt
  @abjkk abjkk / bitcoin
  @AbraaoAlves AbraaoAlves / bitcoin
  @abroxos abroxos / bitcoin
  @achoch achoch / bitcoin
  @aesculf aesculf / bitcoin
  @africoiner africoiner / africoin
  @ak2consulting ak2consulting / bitcoin
  @aka2006 aka2006 / bitcoin
  @AkademieOlympia AkademieOlympia / bitcoin
  @akash0x53 akash0x53 / bitcoin
  @akosiaris akosiaris / bitcoin
  @akshay-bhardwaj akshay-bhardwaj / bitcoin
  @AlexanderAA AlexanderAA / bitcoin
  @alexanderanon alexanderanon / bitcoin
  @alexanderkjeldaas alexanderkjeldaas / bitcoin
  @AlexanderKlyuchev AlexanderKlyuchev / bitcoin
  @AlexeyYurchuk AlexeyYurchuk / bitcoin
  @alexzhang2015 alexzhang2015 / bitcoin
  @AlfiyaZi AlfiyaZi / bitcoin
  @alishiguang alishiguang / bitcoin
  @allyouneedinfoappstoclick allyouneedinfoappstoclick / bitcoin
  @amente amente / bitcoin
  @amiller amiller / bitcoin
  @amiryal amiryal / bitcoin
  @andrewbenimaru andrewbenimaru / bitcoin
  @anonymousacc anonymousacc / bitcoin
  @AnonymousPrime AnonymousPrime / bitcoin
  @anu5 anu5 / bitcoin
  @aosmith aosmith / bitcoin
  @apoelstra apoelstra / bitcoin
  @applsdev applsdev / libcoin
  @arielluaces arielluaces / bitcoin
  @arpith20 arpith20 / bitcoin
  @arUMar arUMar / bitcoin
  @ashleyholman ashleyholman / bitcoin
  @Aurorer Aurorer / bitcoin
  @austinlin austinlin / bitcoin
  @aviad aviad / bitcoin
  @avivz avivz / bitcoin
  @avl42 avl42 / bitcoin
  @azazeal azazeal / bitcoin
  @bachsio bachsio / bitcoin
  @badmofo badmofo / bitcoin
  @barmstrong barmstrong / bitcoin
  @bbqchickenrobot bbqchickenrobot / bitcoin
  @bcholenski bcholenski / bitcoin
  @Belkaar Belkaar / bitcoin
  @BenDavis503 BenDavis503 / i0coin
  @bhutley bhutley / bitcoin
  @bigpot bigpot / bitcoin
  @binchensjtu binchensjtu / bitcoin
  @biruh biruh / bitcoin
  @bitcoinmeetups bitcoinmeetups / bitshares
  @bitcoinreactor bitcoinreactor / bitcoin
  @bittrader bittrader / bitcoin
  @biv1230 biv1230 / bitcoin
  @BizMikey BizMikey / bitcoin
  @bkz1986 bkz1986 / bitcoin
  @blackymetal blackymetal / bitcoin
  @blaklite blaklite / bitcoin
  @blubkatze blubkatze / bitcoin
  @Bobalot Bobalot / bitcoin
  @bombizombi bombizombi / bitcoin
  @bookie988 bookie988 / bitcoin
  @botp botp / bitcoin
  @bradb1982 bradb1982 / bitcoin-1
  @bradjau bradjau / bitcoin
  @brandondahler brandondahler / bitcoin
  @breeezzz breeezzz / bitcoin
  @briandeloach briandeloach / bitcoin
  @BruceWilliams BruceWilliams / bitcoin
  @bruiselee bruiselee / bitcoin
  @bryan-mills bryan-mills / bytecoin
    @ahmedbodi ahmedbodi / bytecoin
    @Aldur1 Aldur1 / bytecoin
    @boinggg boinggg / bytecoin
    @Digigami Digigami / bytecoin
    @Mwako Mwako / bytecoin
    @rsnel rsnel / bytecoin
    @saigosan saigosan / bytecoin
  @BryanStarbuck BryanStarbuck / bitcoin
  @btcmonkey btcmonkey / bitcoin
  @burger2 burger2 / bitcoin
  @bwarner bwarner / bitcoin
  @bytemaster bytemaster / bitshare_bitcoin_branch
  @ca1ek ca1ek / bitcoin
  @CAFxX CAFxX / bitcoin
  @caojiguang caojiguang / bitcoin
  @carlosnasillo carlosnasillo / bitcoin
  @casascius casascius / bitcoin
  @cashdollar cashdollar / bitcoin
  @cdecker cdecker / bitcoin
  @cdhowie cdhowie / bitcoin
  @cdspace cdspace / bitcoin
  @celeduc celeduc / bitcoin
  @celr celr / bitcoin
  @chackley chackley / bitcoin
  @charlesxyan charlesxyan / bitcoin
  @cheery cheery / bitcoin
  @cheme cheme / bitcoin
  @christo christo / bitcoin
  @christophebiocca christophebiocca / bitcoin
  @cidermole cidermole / bitcoin
  @clopez clopez / bitcoin
  @cloudcoin cloudcoin / cloudcoin
    @realcoin realcoin / cloudcoin
  @cmaclell cmaclell / bitcoin
  @cnasty cnasty / bitcoin
  @cnhacks cnhacks / bitcoin
  @cnusrso cnusrso / bitcoin
  @CodeNameTheOnlyOne CodeNameTheOnlyOne / bitcoin
  @CodeShark CodeShark / bitcoin
  @codler codler / bitcoin
  @coinhelper coinhelper / bitcoin
  @colindean colindean / bitcoin
  @comcomist comcomist / bitcoin
  @constantined constantined / bitcoin
  @cozz cozz / bitcoin
  @cponeill cponeill / bitcoin
  @craftcoin craftcoin / bitcoin
  @crazikPL crazikPL / bitcoin
  @crazykernel crazykernel / bitcoin
  @crazyrabbitLTC crazyrabbitLTC / bitcoin
  @CriticalNix CriticalNix / bitcoin
  @csolar csolar / bitcoin
  @CSRedRat CSRedRat / bitcoin
  @csrfdez csrfdez / bitcoin
  @cuboney cuboney / bitcoin
  @cweaver543 cweaver543 / bitcoin
  @cyanitol cyanitol / bitcoin
  @cyphlex cyphlex / bitcoin
  @czaanja czaanja / bitcoin
  @da2ce7 da2ce7 / bitcoin
  @dacoinminster dacoinminster / symbitcoin
  @daedalus daedalus / bitcoin
  @Dafvid Dafvid / bitcoin-relay
  @dan-da dan-da / bitcoin
  @danidomi danidomi / bitcoin
  @daqing15 daqing15 / bitcoin
  @DarrellDuane DarrellDuane / bitcoin
  @Davei234 Davei234 / bitcoin
  @davex25 davex25 / bitcoin
  @DavidGriffith DavidGriffith / bitcoin
  @dburnette dburnette / bitcoin
  @dds dds / bitcoin
  @denis2342 denis2342 / bitcoin
  @DerOrangeBaron DerOrangeBaron / bitcoin
  @Desuneko Desuneko / poorcoin
  @devrandom devrandom / bitcoin
  @dianna-project dianna-project / libcoin
  @Diapolo Diapolo / bitcoin
  @DieterKoblenz DieterKoblenz / bitcoin
  @DikangGu DikangGu / bitcoin
  @dimastopel dimastopel / bitcoin
  @dimension64 dimension64 / bitcoin
  @diosys diosys / diosys
  @dizzyd dizzyd / bitcoin
  @djpnewton djpnewton / bitcoin
  @dlitz dlitz / bitcoin
  @dmitrytrager dmitrytrager / bitcoin
  @donato donato / bitcoin
  @dondeng dondeng / bitcoin
  @dooglus dooglus / bitcoin
  @dpollak415 dpollak415 / bitcoin
  @drake01 drake01 / bitcoin
  @drgr33n drgr33n / bitcoin
  @drontus drontus / bitcoin
  @dropcoin dropcoin / bitcoin
  @dscotese dscotese / bitcoin
  @dserrano5 dserrano5 / bitcoin
  @dsias dsias / bitcoin
  @eamoc eamoc / bitcoin
  @eccstartup eccstartup / bitcoin
  @edmundedgar edmundedgar / bitcoin
  @eeertekin eeertekin / bitcoin
  @effyroth effyroth / bitcoin
  @elasticdarwin elasticdarwin / bitcoin
  @elchupa elchupa / bitcoin
  @elis elis / libcoin
  @emerson-zhao emerson-zhao / bitcoin
  @epscylonb epscylonb / bitcoin
  @EricJ2190 EricJ2190 / bitcoin
  @error10 error10 / bitcoin
  @errord errord / bitcoin
  @esskar esskar / bitcoin
  @Eylrid Eylrid / Egonkorra
  @Ezequiel-Estrada Ezequiel-Estrada / bitcoin
  @fadefy fadefy / bitcoin
  @fanquake fanquake / bitcoin
  @farva farva / bitcoin
  @fcicq fcicq / bitcoin
  @fcjhgvjh fcjhgvjh / bitcoin
  @FEIHudson FEIHudson / bitcoin
  @finway-china finway-china / bitcoin
  @fireduck64 fireduck64 / duckcoin
  @flatpointer flatpointer / bitcoin
  @floe floe / bitcoin
  @Flowdalic Flowdalic / bitcoin
  @fmtzhangli fmtzhangli / bitcoin
  @foomango foomango / bitcoin
  @forrestv forrestv / bitcoin
  @freewil freewil / bitcoin
  @freicoin freicoin / freicoin-old
    @clarkminor clarkminor / freicoin
    @foocoin foocoin / freicoin
    @hanliumaozhi hanliumaozhi / freicoin
    @ImpalerWrG ImpalerWrG / freicoin
    @kosciuk kosciuk / freicoin
  @frrp frrp / bitcoin
  @furyan furyan / bitcoin
  @fusebox fusebox / i0coin
    @bedavidsson bedavidsson / i0coin
  @GaelVarlet GaelVarlet / bitcoin
  @Garr255 Garr255 / GarrCoin2
  @gasteve gasteve / bitcoin
  @gavinandresen gavinandresen / bitcoin-git
    @donflatcap donflatcap / bitcoin-git
    @gossamr gossamr / bitcoin-git
    @melek-bitcoin melek-bitcoin / bitcoin-git
    @old-c-coder old-c-coder / bitcoin-git
    @purplezky purplezky / bitcoin-git
    @tehpwnerer tehpwnerer / bitcoin-git
    @vietlq vietlq / bitcoin-git
  @gdoteof gdoteof / bitcoin
  @Gelford Gelford / bitcoin
  @genba genba / bitcoin
  @genjix genjix / bitcoin
  @gjs278 gjs278 / bitcoin
  @gkucmierz gkucmierz / bitcoin
  @glassman glassman / terracoin
  @glondu glondu / bitcoin
  @goodluckart goodluckart / bitcoin
  @gotmyname gotmyname / lotcoin
  @graingert graingert / bitcoin
  @grayleonard grayleonard / bitcoin
  @greedyclown greedyclown / bitcoin
  @greennum greennum / bitcoin
  @gregorwoggle gregorwoggle / bitcoin
  @groffer groffer / bitcoin
  @h00gs h00gs / bitcoin
  @halfinney halfinney / bitcoin
  @hanzheng hanzheng / bitcoin
  @haohonglin haohonglin / bitcoin
  @harishpillay harishpillay / bitcoin
  @harrylu harrylu / bitcoin
  @HassanBA HassanBA / bitcoin
  @helohe helohe / bitcoin
  @heremeare heremeare / bitcoin
  @hexiaoyuan hexiaoyuan / bitcoin
  @hfeeki hfeeki / bitcoin
  @hg285808684 hg285808684 / bitcoin
  @himawari8 himawari8 / bitcoin
  @hippich hippich / bitcoin
  @Hlux Hlux / bitcoin
  @hnaik hnaik / bitcoin
  @holydevil holydevil / bitcoin
  @HongPong HongPong / bitcoin
  @hookercookerman hookercookerman / bitcoin-1
  @hp685 hp685 / bitcoin
  @huatai huatai / bitcoin
  @huckfinne huckfinne / bitcoin
  @iase iase / bitcoin
  @iBeacons iBeacons / bitcoin
  @ikennyfallas ikennyfallas / bitcoin
  @ilsken ilsken / bitcoin
  @imageoptimiser imageoptimiser / bitcoin
  @imaginationcoin imaginationcoin / bitcoin
  @imsaguy imsaguy / bitcoin
  @instagibbs instagibbs / bitcoin
  @iongchun iongchun / bitcoin
  @isaka isaka / bitcoin
  @istovatis istovatis / bitcoin
  @istvant istvant / bitcoin
  @itanger itanger / bitcoin
  @itgoujie2 itgoujie2 / bitcoin
  @ixcoin ixcoin / ixcoin
  @j5ik2o j5ik2o / bitcoin
  @jackjack-jj jackjack-jj / bitcoin
    @rodjacksonx rodjacksonx / bitcoin-old
  @jackthomson jackthomson / bitcoin
  @jadeye jadeye / bitcoin
  @jakeva jakeva / bitcoin-pwcheck
    @initiate6 initiate6 / bitcoin-pwcheck
  @jammm jammm / bitcoin
  @jaromil jaromil / bitcoin
  @javgh javgh / bitcoin
  @Jay-Lei Jay-Lei / bitcoin
  @jb9802 jb9802 / bitcoin
  @jbidder jbidder / bitcoin
  @jbreher jbreher / bitcoin
  @jburkle jburkle / bitcoin
  @jdoyleslc jdoyleslc / bitcoin
  @jegz jegz / bitcoin
  @jerejones jerejones / bitcoin
  @jerffer jerffer / bitcoin
  @jerrycross jerrycross / bitcoin
  @jetmc jetmc / bitcoin
  @jgarzik jgarzik / bitcoin
    @talpan talpan / bitcoin
  @jgraef jgraef / bitcoin
  @jhavstad jhavstad / bitcoin
  @jholz jholz / bitcoin
  @jhsrcmh jhsrcmh / bitcoin
  @jhyslop jhyslop / bitcoin
  @jiangchanghao jiangchanghao / bitcoin
  @jik123 jik123 / bitcoin
  @jlanik jlanik / bitcoin
  @jmcorgan jmcorgan / bitcoin
  @joetufano joetufano / bitcoin
  @johndillon johndillon / bitcoin
  @JohnnyPP JohnnyPP / bitcoin
  @JohnnyZhao JohnnyZhao / bitcoin
  @jojkaart jojkaart / bitcoin
  @JokeCoin JokeCoin / bitcoin
  @jonasschnelli jonasschnelli / bitcoin
  @jonbaer jonbaer / bitcoin
  @jondoh jondoh / bitcoin
  @jonkoking jonkoking / bitcoin
  @jonls jonls / bitcoin
  @jordanlewis jordanlewis / bitcoin
  @jorgejardim jorgejardim / bitcoin
  @JoseManuelAbarca JoseManuelAbarca / bitcoin
  @JoshArmter JoshArmter / bitcoin
  @joshuahdudley joshuahdudley / bitcoin
  @joulesbeef joulesbeef / bitcoin
  @Jowbob Jowbob / bitcoin
  @jpentland jpentland / bitcoin
  @jrmithdobbs jrmithdobbs / bitcoin
  @jru jru / bitcoin
  @jscottmiller jscottmiller / bitcoin
  @jtbarker jtbarker / bitcoin
  @jtlas jtlas / bitcoin
  @jubalix jubalix / bitcoin-1
  @jurov jurov / bitcoin
  @justmoon justmoon / bitcoin
  @justusranvier justusranvier / bitcoin
  @jwhitehorn jwhitehorn / bitcoin
  @k1n3ct k1n3ct / bitcoin
  @kaiquewdev kaiquewdev / bitcoin
  @kakt kakt / bitcoin
  @kamalx kamalx / bitcoin
  @kamyu104 kamyu104 / bitcoin
  @kannan83 kannan83 / bitcoin
  @KaSt KaSt / bitcoin
  @katerega katerega / bitcoin
  @katuma katuma / bitcoin
  @katzky katzky / bitcoin
  @kcbigring kcbigring / bitcoin
  @kefirFake kefirFake / bitcoin
  @kelvinltg kelvinltg / bitcoin
  @keninishna keninishna / ass-pennies
  @keymone keymone / bitcoin
  @keyskull keyskull / bitcoin
  @khorben khorben / bitcoin
  @killerstorm killerstorm / bitcoin
  @kinlo-triplemining kinlo-triplemining / bitcoin
  @kjj2 kjj2 / bitcoin
  @knotwork knotwork / Mergecoin
  @KobuderaRoninShinobi KobuderaRoninShinobi / bitcoin
  @kodmunki kodmunki / bitcoin
  @komichi komichi / bitcoin
  @konieczkow konieczkow / bitcoin
  @Korn1699 Korn1699 / bitcoin
  @kpfile kpfile / bitcoin
  @kprog kprog / bitcoin
  @kR105-zz kR105-zz / i0coin
  @kraserge kraserge / bitcoin
  @Krellan Krellan / bitcoin
  @kulkarnisantosh kulkarnisantosh / bitcoin
  @KumaresanC KumaresanC / bitcoin
  @kwaaak kwaaak / bitcoin
  @kybl kybl / bitcoin
  @kyledrake kyledrake / bitcoin
  @L2G L2G / bitcoin
  @laanwj laanwj / bitcoin
    @BuloZB BuloZB / bitcoin
  @lachesis lachesis / bitcoin
  @lano1106 lano1106 / bitcoin
  @LargePig LargePig / bitcoin
  @ldjking ldjking / bitcoin
  @leeight leeight / bitcoin
  @leelium leelium / bitcoin
  @leto leto / bitcoin
  @Lewies Lewies / bitcoin
  @LGHTSRC LGHTSRC / LGHTcoin
  @lijiewang lijiewang / bitcoin
  @linjaaho linjaaho / bitcoin
  @lkurki lkurki / bitcoin
  @llleo llleo / bitcoin
  @LNGi LNGi / bitcoin
  @Lohoris Lohoris / bitcoin
  @LordC LordC / bitcoin
  @lotcoin lotcoin / lotcoin
  @lucciano lucciano / bitcoin
  @luke-jr luke-jr / bitcoin
  @LukeLu1263 LukeLu1263 / bitcoin
  @luoq luoq / bitcoin
  @lusob lusob / bitcoin
  @luwenhegithub luwenhegithub / bitcoin
  @lysimachas lysimachas / bitcoin
  @lzsaver lzsaver / bitcoin-translation
    @hagelien hagelien / bitcoin-translation
    @joooc joooc / bitcoin-translation
    @m4rkiz m4rkiz / bitcoin-translation
    @thewalkerdead thewalkerdead / bitcoin-translation
    @wolciph wolciph / bitcoin-translation
  @m0mchil m0mchil / bitcoin
  @m0Ray m0Ray / bitcoin
  @maaku maaku / bitcoin
  @macwoodell macwoodell / bitcoin
  @mad mad / bitcoin
  @madberry madberry / bitcoin
  @madmercen madmercen / bitcoin
  @maiopirata maiopirata / bitcoin
  @makevlad makevlad / bitcoin
  @makomk makomk / bitcoin
  @maqifrnswa maqifrnswa / bitcoin
  @markdavidlamb markdavidlamb / bitcoin
  @Marsdude Marsdude / bitcoin
  @martindale martindale / bitcoin
  @MasterfulCoder MasterfulCoder / bitcoin
  @matholroyd matholroyd / bitcoin
  @Matoking Matoking / bitcoin
  @matsufan matsufan / bitcoin
  @matthewgao matthewgao / bitcoin
  @MaximF MaximF / bitcoin
  @maximussteele79 maximussteele79 / bitcoin
  @maxme maxme / bitcoin
  @maysen maysen / bitcoin
  @mazemax mazemax / bitcoin
  @mb300sd mb300sd / bitcoin
  @mcassano mcassano / bitcoin
  @mcdee mcdee / bitcoin
  @mckoss mckoss / bitcoin
  @meighti meighti / bitcoin
  @meltra meltra / bitcoin
  @mgiuca mgiuca / bitcoin
  @mhanne mhanne / bitcoin
  @mhouriet mhouriet / bitcoin
  @michaelelliot michaelelliot / bitcoin
  @Michagogo Michagogo / bitcoin
  @mickelfeng mickelfeng / bitcoin
  @mikegogulski mikegogulski / bitcoin
  @mikehearn mikehearn / bitcoin
  @mikerka mikerka / Bitcoin-NDCS
  @miniupnp miniupnp / bitcoin
  @miwright12 miwright12 / bitcoin
  @mklarmann mklarmann / bitcoin
  @mloftis mloftis / bitcoin
  @mmalecki mmalecki / bitcoin
  @mndrix mndrix / bitcoin
  @modcracker modcracker / bitcoin
  @moffel moffel / bitcoin
  @mokerjoke mokerjoke / bitcoin
  @moncho moncho / bitcoin
  @morristech morristech / bitcoin
  @MrJohnsson77 MrJohnsson77 / bitcoin
  @MrPuzzle MrPuzzle / bitcoin
  @MrSteel MrSteel / bitcoin
  @Mslegten Mslegten / bitcoin
  @Mudroid1 Mudroid1 / bitcoin
  @mughat mughat / bitcoin
  @mwstyles2002 mwstyles2002 / bitcoin
  @mxd37 mxd37 / bitcoin
  @mypalsminecraft mypalsminecraft / bitcoin
  @Mysticsam Mysticsam / bitcoin
  @mzhvld mzhvld / bitcoin
  @n1bor n1bor / bitcoin
  @nanotube nanotube / bitcoin
  @nbcoin nbcoin / bitcoin
  @neerajtuteja neerajtuteja / bitcoin
  @nelisky nelisky / bitcoin
  @nemo8910 nemo8910 / bitcoin
  @neofutur neofutur / bitcoin
  @Nerzahd Nerzahd / bitcoin
  @nestegg nestegg / bitcoin
  @netsmashers netsmashers / bitcoin
  @netvortex netvortex / bitcoin
  @newblue newblue / bitcoin
  @NicholasBell NicholasBell / bitcoin
  @Nicolai-s Nicolai-s / bitcoin
  @nigel-v-thomas nigel-v-thomas / bitcoin
  @NightZpy NightZpy / bitcoin
  @nikileshsa nikileshsa / bitcoin
  @njdragonfly njdragonfly / bitcoin
  @no2key no2key / bitcoin
  @nobled nobled / bitcoin
  @noctrium noctrium / bitcoin
  @nomnombtc nomnombtc / bitcoin
  @noobcoin noobcoin / noobcoin
  @novusordo novusordo / bitcoin
  @np np / bitcoin
  @npk npk / bitcoin
  @nunb nunb / bitcoin
  @oddlyzen oddlyzen / bitcoin
  @older-c-coder older-c-coder / bitcoin
  @oleganza oleganza / bitcoin
  @oliora oliora / bitcoin
  @onjin onjin / bitcoin
  @OPCoin OPCoin / OPCoin
  @oravi oravi / bitcoin
  @orb orb / bitcoin
  @osiloke osiloke / bitcoin
  @osmosis79 osmosis79 / bitcoin
  @ovdeathiam ovdeathiam / bitcoin
  @oxmolia oxmolia / bitcoin
  @ozzie00 ozzie00 / bitcoin
  @p2k p2k / bitcoin
  @p308945 p308945 / bitcoin
  @pagenotfound pagenotfound / bitcoin
  @paintitblacksabbath paintitblacksabbath / bitcoin
  @pakt pakt / bitcoin
  @paraboul paraboul / bitcoin
  @paraipan paraipan / bitcoin-1
  @pasky pasky / bitcoin
  @paulgmiller paulgmiller / bitcoin
  @perryhau perryhau / bitcoin
  @petertodd petertodd / bitcoin
  @peterwillcn peterwillcn / bitcoin
  @phelixbtc phelixbtc / bitcoin
  @Philhippus Philhippus / bitcoin
  @phorensic phorensic / bitcoin
  @piotrnar piotrnar / bitcoin
  @pixelglow pixelglow / bitcoin
  @pkarc pkarc / bitcoin
  @Plaidxx Plaidxx / bitcoin
  @plaprade plaprade / bitcoin
  @plcreate plcreate / bitcoin
  @pmarches pmarches / bitcoin
  @pmavrodiev pmavrodiev / bitcoin
  @poelzi poelzi / bitcoin
  @poppinyunhai poppinyunhai / bitcoin
  @progmax progmax / bitcoin
  @ps-neville ps-neville / bitcoin
  @pshep pshep / bitcoin
  @ptitfred ptitfred / bitcoin
  @pymander pymander / bitcoin
  @pywebdesign pywebdesign / bitcoin
  @qikcoin qikcoin / bitcoin
  @qiuxi qiuxi / bitcoin
  @qubez qubez / bitcoin
  @queer1 queer1 / bitcoin
  @rafikius rafikius / bitcoin
  @ragmondo ragmondo / bitcoin
  @rakyll rakyll / bitcoin
  @rebroad rebroad / bitcoin
  @redavis22 redavis22 / bitcoin
  @redshark1802 redshark1802 / bitcoin
  @RESPAWN-007 RESPAWN-007 / bitcoin
  @RevCBH RevCBH / bitcoin
  @richardassar richardassar / bitcoin
  @richardboase richardboase / bitcoin
  @ricky999 ricky999 / bitcoin
  @robbak robbak / bitcoin
  @robinbowes robinbowes / bitcoin
  @Rogaven Rogaven / bitcoin
  @roman5566 roman5566 / bitcoin
  @Rongorongo Rongorongo / bitcoin
  @roques roques / bitcoin
  @rtirrell rtirrell / bitcoin
  @Rui-Santos Rui-Santos / bitcoin
  @runeksvendsen runeksvendsen / bitcoin
  @RyanKung RyanKung / bitcoin
  @ryny24 ryny24 / bitcoin
  @samphippen samphippen / bitcoin
  @SampiEx SampiEx / bitcoin
  @SanderKleykens SanderKleykens / bitcoin
  @sanool sanool / bitcoin
  @santhoshnvv santhoshnvv / bitcoin
  @sarchar sarchar / bitcoin
  @sassame sassame / bitcoin
  @schell schell / bitcoin
  @schildbach schildbach / bitcoin
  @scriptmunkee scriptmunkee / bitcoin
  @scv119 scv119 / bitcoin
  @sdhjob sdhjob / bitcoin
    @waibo waibo / bitcoin
  @semibiotic semibiotic / bitcoin
  @sequoiar sequoiar / bitcoin
  @sgimenez sgimenez / bitcoin
  @shadedpixel shadedpixel / bitcoin
  @Shadowmeph Shadowmeph / bitcoin
  @ShadowOfHarbringer ShadowOfHarbringer / bitcoin-nftf
    @derfloh derfloh / bitcoin-x8s
  @shamoons shamoons / litecoin
  @shanew shanew / bitcoin
  @Shattienator Shattienator / bitcoin
  @shaundaley39 shaundaley39 / bitcoin
  @shepelt shepelt / bitcoin
  @shripadk shripadk / bitcoin
  @sifcoin sifcoin / sifcoin
  @simbha simbha / bitcoin
  @sipa sipa / bitcoin
    @AbrahamJewowich AbrahamJewowich / bitcoin
    @linkedinyou linkedinyou / bitcoin
    @peter-conalgo peter-conalgo / bitcoin
  @sirk390 sirk390 / bitcoin
  @Sitao Sitao / bitcoin
  @sivaPalakurthi sivaPalakurthi / bitcoin
  @sjalq sjalq / bitcoin
  @sje1 sje1 / bitcoin
  @sje397 sje397 / bitcoin
  @sjmackenzie sjmackenzie / bitcoin
  @sjuxax sjuxax / bitcoin
  @skeltoac skeltoac / bitcoin
  @slash7 slash7 / bitcoin
  @slavik0329 slavik0329 / bitcoin
  @slck4205 slck4205 / bitcoin
  @smola smola / bitcoin
  @snowyu snowyu / bitcoin
  @soheil soheil / bitcoin
  @soitun soitun / bitcoin
  @somebadger somebadger / bitcoin4pools
  @songtian songtian / bitcoin
  @soul1314 soul1314 / bitcoin
  @souravzzz souravzzz / bitcoin
  @spaculator spaculator / bitcoin
  @sparelife sparelife / bitcoin
  @spsole spsole / bitcoin
  @sserrano44 sserrano44 / bitcoin
  @stameish stameish / bitcoin
  @StapleSteve StapleSteve / bitcoin
  @starius starius / bitcoin
  @stcupp stcupp / bitcoin
    @MORA99 MORA99 / bitcoin
  @StDarkAngel StDarkAngel / bitcoin
  @subSTRATA subSTRATA / terracoin
  @switchcoin switchcoin / bitcoin
  @Tania188 Tania188 / bitcoin
  @tariq786 tariq786 / bitcoin
  @tashrobinson tashrobinson / bitcoin
  @tcatm tcatm / bitcoin
  @tcirwin tcirwin / bitcoin
  @tcoppi tcoppi / bitcoin
  @techwtf techwtf / bitcoin
  @tejastank tejastank / bitcoin
  @tenobis tenobis / bitcoin
  @terryblood terryblood / bitcoin
  @testaccount33 testaccount33 / bitcoin
  @tfirer tfirer / bitcoin
  @thebandoffice thebandoffice / bitcoin
  @TheBlueMatt TheBlueMatt / bitcoin
    @Unreal89 Unreal89 / bitcoin
  @theuni theuni / bitcoin
  @thirugnanamsubbiah thirugnanamsubbiah / bitcoin
  @thodg thodg / bitcoin
  @tholenst tholenst / bitcoin
  @tholum tholum / bitcoin
  @thommahoney thommahoney / bitcoin
  @TierNolan TierNolan / bitcoin
  @timohanke timohanke / bitcoin
  @timsk timsk / bitcoin
  @tiv-source tiv-source / bitcoin
  @tomagoyaky tomagoyaky / bitcoin
  @TomKnox TomKnox / bitcoin
  @trapp trapp / bitcoin
  @treazant treazant / treazant
  @tril0byte tril0byte / bitcoin
  @TripleSpeeder TripleSpeeder / bitcoin
  @tstranex tstranex / bitcoin
  @tt tt / bitcoin
  @tucenaber tucenaber / bitcoin
  @twobits twobits / bitcoin-2bit
  @tzuryby tzuryby / bitcoin
  @udibr udibr / bitcoin
    @joyesin joyesin / bitcoin
    @mrcraigo mrcraigo / bitcoin
  @umaar umaar / bitcoin
  @uncorr uncorr / bitcoin
  @upriser upriser / bitcoin
  @vapapav vapapav / bitcoin
  @vdt vdt / bitcoin
  @vegard vegard / bitcoin
  @vershinin vershinin / bitcoin
  @VijayPande VijayPande / bitcoin
  @vinced vinced / namecoin
    @angeliux07 angeliux07 / namecoin
    @bmwiedemann bmwiedemann / bitcoin
    @crackleware crackleware / namecoin
    @dmp1ce dmp1ce / namecoin
    @frabcus frabcus / namecoin
    @jeffayle jeffayle / namecoin
    @kacmem kacmem / namecoin
    @Krazy-Bish-Margie Krazy-Bish-Margie / namecoin
    @loreweaver loreweaver / namecoin
    @manveru manveru / namecoin
    @mincua mincua / namecoin
    @MobiusL MobiusL / namecoin
    @neuroplastic neuroplastic / namecoin
    @nikole70 nikole70 / namecoin
    @pandrax pandrax / namecoin
    @pvwoods pvwoods / namecoin
    @slush0 slush0 / namecoin
    @Tetsue Tetsue / namecoin
    @tomcss tomcss / namecoin
  @vipjeffreylee vipjeffreylee / bitcoin
  @VirtualDestructor VirtualDestructor / bitcoin-qt-i2p
    @lalejjla lalejjla / bitcoin-qt-i2p
  @vitotafuni vitotafuni / bitcoin
  @vizotov vizotov / bitcoin
  @vleschuk vleschuk / bitcoin
  @vobornik vobornik / bitcoin
  @voirgag voirgag / bitcoin
  @Wagnerp Wagnerp / bitcoin
  @wanggong wanggong / bitcoin
  @wclssdn wclssdn / bitcoin
  @wdmchaft wdmchaft / bitcoin
  @weavejester weavejester / bitcoin
  @weaverx9x9 weaverx9x9 / bitcoin
  @weex weex / bitcoin
  @wishlog wishlog / bitcoin
  @witkamp witkamp / bitcoin
  @wjx052333 wjx052333 / bitcoin
  @wolciph wolciph / bitcoin
  @wRothbard wRothbard / ThirdCoin
  @wtogami wtogami / bitcoin
  @wudu wudu / bitcoin
  @wynnej1983 wynnej1983 / bitcoin
  @xaoseric xaoseric / bitcoin
  @Xenland Xenland / bitcoin
  @xenonc xenonc / bitcoin
  @xenovyzarz xenovyzarz / bitcoin
  @xHire xHire / bitcoin
  @xiaobinliu xiaobinliu / bitcoin
  @xiaoyooo xiaoyooo / bitcoin
  @xiphias xiphias / bitcoin
  @xuXie xuXie / bitcoin
  @yikedz yikedz / bitcoin
  @yinyunqiao yinyunqiao / bitcoin
  @yonder yonder / bitcoin
  @YoshikuniJujo YoshikuniJujo / bitcoin
  @yuanda yuanda / bitcoin
  @yuliyang6 yuliyang6 / bitcoin-1
  @yupic yupic / bitcoin
  @yurgu yurgu / bitcoin
  @yx2zhang yx2zhang / bitcoin
  @zavidovych zavidovych / bitcoin
  @zcater zcater / bitcoin
  @zebedee52 zebedee52 / bitcoin
  @zechiel zechiel / bitcoin
  @Zeilap Zeilap / bitcoin
  @zeldovich zeldovich / bitcoin
  @zeonglow zeonglow / bitcoin
  @zerbie zerbie / bitcoin
  @zeroxbeef zeroxbeef / bitcoin
  @zetacoin zetacoin / zetacoin
    @joulecoin joulecoin / joulecoin
    @MichaelFX MichaelFX / zetacoin
    @moonshinekiller moonshinekiller / zetacoin
    @novaspirit novaspirit / zetacoin
    @PeanutPower PeanutPower / zetacoin
    @purekk purekk / zetacoin
    @skeincoin skeincoin / skeincoin
  @zew13 zew13 / bitcoin
  @zhhchen zhhchen / bitcoin
  @zinsword zinsword / bitcoin
  @znort987 znort987 / bitcoin
  @zooko zooko / bitcoin
  @zootreeves zootreeves / bitcoin
  @zozo123 zozo123 / bitcoin
  @zwmsin zwmsin / bitcoin
'input' = bitcoinmusic.info
</ContentCollection>
'MC$'
Musicore.exe_miner*html/file/doc.
<xcode:
test/functional/example_test.py
 @@ -111,7 +111,7 @@ def setup_network(self):
         # sync_all() should not include node2, since we're not expecting it to		         # sync_all() should not include node2, since we're not expecting it to
         # sync.		         # sync.
         connect_nodes(self.nodes[0], 1)		         connect_nodes(self.nodes[0], 1)
         self.sync_all([self.nodes[0:1]])		         self.sync_all([self.nodes[0:2]])
		
     # Use setup_nodes() to customize the node start behaviour (for example if		     # Use setup_nodes() to customize the node start behaviour (for example if
     # you don't want to start all nodes at the start of the test).		     # you don't want to start all nodes at the start of the test).
 @@ -135,7 +135,7 @@ def run_test(self):
		
         # Generating a block on one of the nodes will get us out of IBD		         # Generating a block on one of the nodes will get us out of IBD
         blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]		         blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]
         self.sync_all([self.nodes[0:1]])		         self.sync_all([self.nodes[0:2]])
		
         # Notice above how we called an RPC by calling a method with the same		         # Notice above how we called an RPC by calling a method with the same
         # name on the node object. Notice also how we used a keyword argument		         # name on the node object. Notice also how we used a keyword:BTC_MUSIC=MC

$_#!/usr/bin/env python3
# Copyright (c) 2017-2018 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
"""An example functional test
The module-level docstring should include a high-level description of
what the test is doing. It's the first thing people see when they open
the file and should give the reader information about *what* the test
is testing and *how* it's being tested
"""
# Imports should be in PEP8 ordering (std library first, then third party
# libraries then local imports).
from collections import defaultdict

# Avoid wildcard * imports if possible
from test_framework.blocktools import (create_block, create_coinbase)
from test_framework.messages import CInv
from test_framework.mininode import (
    P2PInterface,
    mininode_lock,
    msg_block,
    msg_getdata,
)
from test_framework.test_framework import BitcoinTestFramework
from test_framework.util import (
    assert_equal,
    connect_nodes,
    wait_until,
)

# P2PInterface is a class containing callbacks to be executed when a P2P
# message is received from the node-under-test. Subclass P2PInterface and
# override the on_*() methods if you need custom behaviour.
class BaseNode(P2PInterface):
    def __init__(self):
        """Initialize the P2PInterface
        Used to initialize custom properties for the Node that aren't
        included by default in the base class. Be aware that the P2PInterface
        base class already stores a counter for each P2P message type and the
        last received message of each type, which should be sufficient for the
        needs of most tests.
        Call super().__init__() first for standard initialization and then
        initialize custom properties."""
        super().__init__()
        # Stores a dictionary of all blocks received
        self.block_receive_map = defaultdict(int)

    def on_block(self, message):
        """Override the standard on_block callback
        Store the hash of a received block in the dictionary."""
        message.block.calc_sha256()
        self.block_receive_map[message.block.sha256] += 1

    def on_inv(self, message):
        """Override the standard on_inv callback"""
        pass

def custom_function():
    """Do some custom behaviour
    If this function is more generally useful for other tests, consider
    moving it to a module in test_framework."""
    # self.log.info("running custom_function")  # Oops! Can't run self.log outside the BitcoinTestFramework
    pass

class ExampleTest(BitcoinTestFramework):
    # Each functional test is a subclass of the BitcoinTestFramework class.

    # Override the set_test_params(), add_options(), setup_chain(), setup_network()
    # and setup_nodes() methods to customize the test setup as required.

    def set_test_params(self):
        """Override test parameters for your individual test.
        This method must be overridden and num_nodes must be explicitly set."""
        self.setup_clean_chain = True
        self.num_nodes = 3
        # Use self.extra_args to change command-line arguments for the nodes
        self.extra_args = [[], ["-logips"], []]

        # self.log.info("I've finished set_test_params")  # Oops! Can't run self.log before run_test()

    # Use add_options() to add specific command-line options for your test.
    # In practice this is not used very much, since the tests are mostly written
    # to be run in automated environments without command-line options.
    # def add_options()
    #     pass

    # Use setup_chain() to customize the node data directories. In practice
    # this is not used very much since the default behaviour is almost always
    # fine
    # def setup_chain():
    #     pass

    def setup_network(self):
        """Setup the test network topology
        Often you won't need to override this, since the standard network topology
        (linear: node0 <-> node1 <-> node2 <-> ...) is fine for most tests.
        If you do override this method, remember to start the nodes, assign
        them to self.nodes, connect them and then sync."""

        self.setup_nodes()

        # In this test, we're not connecting node2 to node0 or node1. Calls to
        # sync_all() should not include node2, since we're not expecting it to
        # sync.
        connect_nodes(self.nodes[0], 1)
        self.sync_all([self.nodes[0:2]])

    # Use setup_nodes() to customize the node start behaviour (for example if
    # you don't want to start all nodes at the start of the test).
    # def setup_nodes():
    #     pass

    def custom_method(self):
        """Do some custom behaviour for this test
        Define it in a method here because you're going to use it repeatedly.
        If you think it's useful in general, consider moving it to the base
        BitcoinTestFramework class so other tests can use it."""

        self.log.info("Running custom_method")

    def run_test(self):
        """Main test logic"""

        # Create P2P connections will wait for a verack to make sure the connection is fully up
        self.nodes[0].add_p2p_connection(BaseNode())

        # Generating a block on one of the nodes will get us out of IBD
        blocks = [int(self.nodes[0].generate(nblocks=1)[0], 16)]
        self.sync_all([self.nodes[0:2]])

        # Notice above how we called an RPC by calling a method with the same
        # name on the node object. Notice also how we used a keyword argument
        # to specify a named RPC argument. Neither of those are defined on the
        # node object. Instead there's some __getattr__() magic going on under
        # the covers to dispatch unrecognised attribute calls to the RPC
        # interface.

        # Logs are nice. Do plenty of them. They can be used in place of comments for
        # breaking the test into sub-sections.
        self.log.info("Starting test!")

        self.log.info("Calling a custom function")
        custom_function()

        self.log.info("Calling a custom method")
        self.custom_method()

        self.log.info("Create some blocks")
        self.tip = int(self.nodes[0].getbestblockhash(), 16)
        self.block_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time'] + 1

        height = 1

        for i in range(10):
            # Use the mininode and blocktools functionality to manually build a block
            # Calling the generate() rpc is easier, but this allows us to exactly
            # control the blocks and transactions.
            block = create_block(self.tip, create_coinbase(height), self.block_time)
            block.solve()
            block_message = msg_block(block)
            # Send message is used to send a P2P message to the node over our P2PInterface
            self.nodes[0].p2p.send_message(block_message)
            self.tip = block.sha256
            blocks.append(self.tip)
            self.block_time += 1
            height += 1

        self.log.info("Wait for node1 to reach current tip (height 11) using RPC")
        self.nodes[1].waitforblockheight(11)

        self.log.info("Connect node2 and node1")
        connect_nodes(self.nodes[1], 2)

        self.log.info("Add P2P connection to node2")
        self.nodes[0].disconnect_p2ps()

        self.nodes[2].add_p2p_connection(BaseNode())

        self.log.info("Wait for node2 reach current tip. Test that it has propagated all the blocks to us")

        getdata_request = msg_getdata()
        for block in blocks:
            getdata_request.inv.append(CInv(2, block))
        self.nodes[2].p2p.send_message(getdata_request)

        # wait_until() will loop until a predicate condition is met. Use it to test properties of the
        # P2PInterface objects.
        wait_until(lambda: sorted(blocks) == sorted(list(self.nodes[2].p2p.block_receive_map.keys())), timeout=5, lock=mininode_lock)

        self.log.info("Check that each block was received only once")
        # The network thread uses a global lock on data access to the P2PConnection objects when sending and receiving
        # messages. The test thread should acquire the global lock before accessing any P2PConnection data to avoid locking
        # and synchronization issues. Note wait_until() acquires this global lock when testing the predicate.
        with mininode_lock:
            for block in self.nodes[2].p2p.block_receive_map.values():
                assert_equal(block, 1)

if __name__ == '__main__':;Merge #13917: Additional safety checks in PSBT signer

5df6f08 More tests of signer checks (Andrew Chow)
7c8bffd Test that a non-witness script as witness utxo is not signed (Andrew Chow)
8254e99 Additional sanity checks in SignPSBTInput (Pieter Wuille)
c05712c Only wipe wrong UTXO type data if overwritten by wallet (Pieter Wuille)

Pull request description:

  The current PSBT signing code can end up producing a non-segwit signature, while only the UTXO being spent is provided in the PSBT (as opposed to the entire transaction being 

spent). This may be used to trick a user to incorrectly decide a transaction has the semantics he intends to sign.

  Fix this by refusing to sign if there is any mismatch between the provided data and what is being signed.

Tree-SHA512: b55790d79d8166e05513fc4c603a982a33710e79dc3c045060cddac6b48a1be3a28ebf8db63f988b6567b15dd27fd09bbaf48846e323c8635376ac20178956f4
 2018-09-example-test-slice (#1) 2018-09-txrelay (#1)
@laanwj
laanwj committed on Aug 14 Verified
2 parents 3e5424f + 5df6f08 commit 63f8b0128b2aac3b25c6ec4d2f5bda213033162a
Unified Split
Showing  5 changed files  with 79 additions and 11 deletions.
View  
16  src/script/sign.cpp
 @@ -244,17 +244,33 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t
     input.FillSignatureData(sigdata);		     input.FillSignatureData(sigdata);
		
     // Get UTXO		     // Get UTXO
     bool require_witness_sig = false;
     CTxOut utxo;		     CTxOut utxo;
     if (input.non_witness_utxo) {		     if (input.non_witness_utxo) {
         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.
         if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;
         // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't
         // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both
         // can be present is when they're added simultaneously by FillPSBT (in which case they always match).
         // Still, check in order to not rely on callers to enforce this.
         if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;
         utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];		         utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];
     } else if (!input.witness_utxo.IsNull()) {		     } else if (!input.witness_utxo.IsNull()) {
         utxo = input.witness_utxo;		         utxo = input.witness_utxo;
         // When we're taking our information from a witness UTXO, we can't verify it is actually data from
         // the output being spent. This is safe in case a witness signature is produced (which includes this
         // information directly in the hash), but not for non-witness signatures. Remember that we require
         // a witness signature in this situation.
         require_witness_sig = true;
     } else {		     } else {
         return false;		         return false;
     }		     }
		
     MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);		     MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);
     sigdata.witness = false;
     bool sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, sigdata);		     bool sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, 

sigdata);
     // Verify that a witness signature was produced in case one was required.
     if (require_witness_sig && !sigdata.witness) return false;
     input.FromSignatureData(sigdata);		     input.FromSignatureData(sigdata);
     return sig_complete;		     return sig_complete;
 }		 }
View  
2  src/script/sign.h
 @@ -686,7 +686,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato
 bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);		

 bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);
 bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);		 bool 

SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);
		
 /** Signs a PSBTInput */		 /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */
 bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);		 bool 

SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);
		
 /** Extract signature data from a transaction input, and insert it. */		 /** Extract signature data from a transaction input, and insert it. */
View  
15  src/wallet/rpcwallet.cpp
 @@ -4504,10 +4504,11 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C
		
         // If we don't know about this input, skip it and let someone else deal with it		         // If we don't know about this input, skip it and let someone else deal with it
         const uint256& txhash = txin.prevout.hash;		         const uint256& txhash = txin.prevout.hash;
         const auto& it = pwallet->mapWallet.find(txhash);		         const auto it = pwallet->mapWallet.find(txhash);
         if (it != pwallet->mapWallet.end()) {		         if (it != pwallet->mapWallet.end()) {
             const CWalletTx& wtx = it->second;		             const CWalletTx& wtx = it->second;
             CTxOut utxo = wtx.tx->vout[txin.prevout.n];		             CTxOut utxo = wtx.tx->vout[txin.prevout.n];
             // Update both UTXOs from the wallet.
             input.non_witness_utxo = wtx.tx;		             input.non_witness_utxo = wtx.tx;
             input.witness_utxo = utxo;		             input.witness_utxo = utxo;
         }		         }
 @@ -4524,11 +4525,13 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C
             complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);		             complete &= SignPSBTInput

(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);
         }		         }
		
         // Drop the unnecessary UTXO		         if (it != pwallet->mapWallet.end()) {
         if (sigdata.witness) {		             // Drop the unnecessary UTXO if we added both from the wallet.
             input.non_witness_utxo = nullptr;		             if (sigdata.witness) {
         } else {		                 input.non_witness_utxo = nullptr;
             input.witness_utxo.SetNull();		             } else {
                 input.witness_utxo.SetNull();
             }
         }		         }
		
         // Get public key paths		         // Get public key paths
View  
51  test/functional/data/rpc_psbt.json

Load diff
Large diffs are not rendered by default.

View  
6  test/functional/rpc_psbt.py
 @@ -168,9 +168,11 @@ def run_test(self):
		
         # Signer tests		         # Signer tests
         for i, signer in enumerate(signers):		         for i, signer in enumerate(signers):
             self.nodes[2].createwallet("wallet{}".format(i))
             wrpc = self.nodes[2].get_wallet_rpc("wallet{}".format(i))
             for key in signer['privkeys']:		             for key in signer['privkeys']:
                 self.nodes[i].importprivkey(key)		                 wrpc.importprivkey(key)
             signed_tx = self.nodes[i].walletprocesspsbt(signer['psbt'])['psbt']		             signed_tx = wrpc.walletprocesspsbt(signer['psbt'])['psbt']
             assert_equal(signed_tx, signer['result'])		             assert_equal(signed_tx, signer['result'])
		
         # Combiner test		         # Combiner test
#Test().main(MC$)
Merge:$ ./bitcoin-cli createpsbt "[]" "[{\"$(./bitcoin-cli getnewaddress)\":0.01}]"
cHNidP8BACoCAAAAAAFAQg8AAAAAABepFG6Rty1Vk+fUOR4v9E6R6YXDFkHwhwAAAAAAAA==
$ ./bitcoin-cli decodepsbt cHNidP8BACoCAAAAAAFAQg8AAAAAABepFG6Rty1Vk+fUOR4v9E6R6YXDFkHwhwAAAAAAAA==
error code: -22
error message:
TX decode failed CDataStream::read(MC$):
open(L):   CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);		     CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, 

txCredit);
     CScriptWitness& witness = txSpend.vin[0].scriptWitness;		     CScriptWitness& witness = txSpend.vin[0].scriptWitness;
     witness.stack.emplace_back();		     witness.stack.emplace_back();
     key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back(), 0);		     key.Sign

(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());
     witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));		     witness.stack.back().push_back(static_cast<unsigned char>(SIGHASH_ALL));
     witness.stack.push_back(ToByteVector(pubkey));		     witness.stack.push_back(ToByteVector(pubkey));
		
  Show comments  View   
24  src/key.cpp
 @@ -189,15 +189,35 @@ CPubKey CKey::GetPubKey() const {
     return result;		     return result;
 }		 }
		
 bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_t test_case) const {		 // Check that the sig has a low R value and will be less than 71 bytes
 bool SigHasLowR(const secp256k1_ecdsa_signature* sig)
 {
     unsigned char compact_sig[64];
     secp256k1_ecdsa_signature_serialize_compact(secp256k1_context_sign, compact_sig, sig);

     // In DER serialization, all values are interpreted as big-endian, signed integers. The highest bit in the integer indicates
     // its signed-ness; 0 is positive, 1 is negative. When the value is interpreted as a negative integer, it must be converted
     // to a positive value by prepending a 0x00 byte so that the highest bit is 0. We can avoid this prepending by ensuring that
     // our highest bit is always 0, and thus we must check that the first byte is less than 0x80.
     return compact_sig[0] < 0x80;
 }

 bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, bool grind, uint32_t test_case) const {
     if (!fValid)		     if (!fValid)
         return false;		         return false;
     vchSig.resize(CPubKey::SIGNATURE_SIZE);		     vchSig.resize(CPubKey::SIGNATURE_SIZE);
     size_t nSigLen = CPubKey::SIGNATURE_SIZE;		     size_t nSigLen = CPubKey::SIGNATURE_SIZE;
     unsigned char extra_entropy[32] = {0};		     unsigned char extra_entropy[32] = {0};
     WriteLE32(extra_entropy, test_case);		     WriteLE32(extra_entropy, test_case);
     secp256k1_ecdsa_signature sig;		     secp256k1_ecdsa_signature sig;
     int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : nullptr);		     

uint32_t counter = 0;
     int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (!grind && test_case) ? extra_entropy : nullptr);

     // Grind for low R
     while (ret && !SigHasLowR(&sig) && grind) {
         WriteLE32(extra_entropy, ++counter);
         ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, extra_entropy);
     }
   @kallewoof
kallewoof on Aug 9  Member
Maybe overkill, but you could in theory do

while (secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (counter || (!grind && test_case)) ? extra_entropy : nullptr)
    && !SigHasLowR(&sig) && grind) {
    WriteLE32(extra_entropy, ++counter);
}
to replace

bitcoin/src/key.cpp

Lines 214 to 220 in 069c879

 int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, (!grind && test_case) ? extra_entropy : nullptr); 
  
 // Grind for low R 
 while (ret && !SigHasLowR(&sig) && grind) { 
     WriteLE32(extra_entropy, ++counter); 
     ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, extra_entropy); 
 } 
   @achow101
achow101 on Aug 9  Member
I'd rather not. It's kind of hard to read (at least to me).

 @MassMason	Reply…
Start a new conversation
     assert(ret);		     assert(ret);
     secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, vchSig.data(), &nSigLen, &sig);		     secp256k1_ecdsa_signature_serialize_der

(secp256k1_context_sign, vchSig.data(), &nSigLen, &sig);
     vchSig.resize(nSigLen);		     vchSig.resize(nSigLen);
View   
2  src/key.h
 @@ -114,7 +114,7 @@ class CKey
      * Create a DER-serialized signature.		      * Create a DER-serialized signature.
      * The test_case parameter tweaks the deterministic nonce.		      * The test_case parameter tweaks the deterministic nonce.
      */		      */
     bool Sign(const uint256& hash, std::vector<unsigned char>& vchSig, uint32_t test_case = 0) const;		     bool Sign(const uint256& hash, std::vector<unsigned char>& 

vchSig, bool grind = true, uint32_t test_case = 0) const;
		
     /**		     /**
      * Create a compact signature (65 bytes), which allows reconstructing the used public key.		      * Create a compact signature (65 bytes), which allows 

reconstructing the used public key.
View   
22  src/script/sign.cpp
 @@ -417,22 +417,25 @@ class DummySignatureChecker final : public BaseSignatureChecker
 const DummySignatureChecker DUMMY_CHECKER;		 const DummySignatureChecker DUMMY_CHECKER;
		
 class DummySignatureCreator final : public BaseSignatureCreator {		 class DummySignatureCreator final : public BaseSignatureCreator {
 private:
     char m_r_len = 32;
     char m_s_len = 32;
 public:		 public:
     DummySignatureCreator() {}		     DummySignatureCreator(char r_len, char s_len) : m_r_len(r_len), m_s_len(s_len) {}
     const BaseSignatureChecker& Checker() const override { return DUMMY_CHECKER; }		     const BaseSignatureChecker& Checker() const override { return 

DUMMY_CHECKER; }
     bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const override	

	     bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const 

override
     {		     {
         // Create a dummy signature that is a valid DER-encoding		         // Create a dummy signature = Mass Mason
Copyrights - 1st@musician.org
SSH
GitHub Desktop - Acer-W8
Fingerprint: 17:f5:99:a1:d6:03:a9:1f:15:a5:3e:03:ef:32:d6:c0
Added on Apr 7, 2018 by GitHub for Windows
Never used — Read/write : BitcoinMusic
(musicore)
<xcode>
es (78 sloc)  3.82 KB
"""
.. module: hubcommander.auth_plugins.duo.plugin
    :platform: Unix
    :copyright: (c) 2017 by Netflix Inc., see AUTHORS for more
    :license: Apache, see LICENSE for more details.
.. moduleauthor:: Mike Grima <mgrima@netflix.com>
"""
import json

from duo_client.client import Client

from hubcommander.bot_components.bot_classes import BotAuthPlugin
from hubcommander.bot_components.slack_comm import send_info, send_error, send_success


class InvalidDuoResponseError(Exception):
    pass


class CantDuoUserError(Exception):
    pass


class NoSecretsProvidedError(Exception):
    pass


class DuoPlugin(BotAuthPlugin):
    def __init__(self):
        super().__init__()

        self.clients = {}

    def setup(self, secrets, **kwargs):
        for variable, secret in secrets.items():
            if "DUO_" in variable:
                domain, host, ikey, skey = secret.split(",")
                self.clients[domain] = Client(ikey, skey, host)

        if not len(self.clients):
            raise NoSecretsProvidedError("Must provide secrets to enable authentication.")

    def authenticate(self, data, user_data, **kwargs):
        # Which domain does this user belong to?
        domain = user_data["profile"]["email"].split("@")[1]
        if not self.clients.get(domain):
            send_error(data["channel"], "💀 @{}: Duo in this bot is not configured for the domain: `{}`. It needs "
                                        "to be configured for you to run this command."
                       .format(user_data["name"], domain), markdown=True, thread=data["ts"])
            return False

        send_info(data["channel"], "🎟 @{}: Sending a Duo notification to your device. You must approve!"
                  .format(user_data["name"]), markdown=True, ephemeral_user=user_data["id"])

        try:
            result = self._perform_auth(user_data, self.clients[domain])
        except InvalidDuoResponseError as idre:
            send_error(data["channel"], "💀 @{}: There was a problem communicating with Duo. Got this status: {}. "
                                        "Aborting..."
                       .format(user_data["name"], str(idre)), thread=data["ts"], markdown=True)
            return False

        except CantDuoUserError as _:
            send_error(data["channel"], "💀 @{}: I can't Duo authenticate you. Please consult with your identity team."
                                        " Aborting..."
                       .format(user_data["name"]), thread=data["ts"], markdown=True)
            return False

        except Exception as e:
            send_error(data["channel"], "💀 @{}: I encountered some issue with Duo... Here are the details: ```{}```"
                       .format(user_data["name"], str(e)), thread=data["ts"], markdown=True)
            return False

        if not result:
            send_error(data["channel"], "💀 @{}: Your Duo request was rejected. Aborting..."
                       .format(user_data["name"]), markdown=True, thread=data["ts"])
            return False

        # All Good:
        send_success(data["channel"], "🎸 @{}: Duo approved! Completing request..."
                     .format(user_data["name"]), markdown=True, ephemeral_user=user_data["id"])
        return True

    def _perform_auth(self, user_data, client):
        # Push to devices:
        duo_params = {
            "username": user_data["profile"]["email"],
            "factor": "push",
            "device": "auto"
        }
        response, data = client.api_call("POST", "/auth/v2/auth", duo_params)
        result = json.loads(data.decode("utf-8"))

        if response.status != 200:
            raise InvalidDuoResponseError(response.status)

        if result["stat"] != "OK":
            raise CantDuoUserError()

        if result["response"]["result"] == "allow":
            return True
Musicore.bot
'configure'
"""
ADD WHATEVER CODE YOU NEED TO DO HERE TO DECRYPT CREDENTIALS FOR USE OF YOUR BOT!
"""


def get_credentials():
    # Here is a KMS example: (uncomment to make work)
    # return kms_decrypt()

    # For Docker, encryption is assumed to be happening outside of this, and the secrets
    # are instead being passed in as environment variables:
    import os

    creds = {
        # Minimum
        "SLACK": os.environ["SLACK_TOKEN"],

        # Optional:
        "GITHUB": os.environ.get("GITHUB_TOKEN"),

        # These are named the same as the env var, but these are the env vars should you
        # want to leverage the feature:
        # "TRAVIS_PRO_USER": os.environ.get("TRAVIS_PRO_USER"),
        # "TRAVIS_PRO_ID": os.environ.get("TRAVIS_PRO_ID"),
        # "TRAVIS_PRO_TOKEN": os.environ.get("TRAVIS_PRO_TOKEN"),
        # "TRAVIS_PUBLIC_USER": os.environ.get("TRAVIS_PUBLIC_USER"),
        # "TRAVIS_PUBLIC_ID": os.environ.get("TRAVIS_PUBLIC_ID"),
        # "TRAVIS_PUBLIC_TOKEN": os.environ.get("TRAVIS_PUBLIC_TOKEN"),

        # DUO_...NAME_OF_DUO_CRED: "domain-that-is-duod.com,duo_host,duo_ikey,duo_skey"

        # ADD MORE HERE...
    }

    # Just adds the rest for freely-named ones (Like for Duo):
    for variable, value in os.environ.items():
        creds[variable] = value

    return creds


# def kms_decrypt():
#     """
#     This is a method to decrypt credentials utilizing on-instance credentials
#     for AWS KMS. Please review AWS documentation for details.
#
#     The secret should be a JSON blob of the secrets that are required.
#     :return: A Dict with the secrets in them.
#     """
#     import boto3
#     import base64
#     import json
#     from config import KMS_REGION, KMS_CIPHERTEXT
#
#     kms_client = boto3.client("kms", region_name=KMS_REGION)
#     decrypt_res = kms_client.decrypt(CiphertextBlob=bytes(base64.b64decode(KMS_CIPHERTEXT)))
#     return json.loads(decrypt_res["Plaintext"].decode("utf-8"))


"""
Sample KMS encryption:
--------------------
import boto3
import json
import base64
kms_client = boto3.client("kms", region_name=KMS_REGION)
account_id = "YOUR ACCOUNT ID HERE"
key_id = "YOUR KEY ID HERE"
kms_arn = "arn:aws:kms:{region}:{account_id}:key/{key_id}".format(region=KMS_REGION, account_id=account_id, key_id=key_id)
secrets_to_encrypt = {
    "SLACK": "SLACK TOKEN HERE",
    "GITHUB": "GITHUB TOKEN HERE",
    "TRAVIS_PRO_USER": "GitHub ID of GitHub account with access to Travis Pro",
    "TRAVIS_PRO_ID": "The ID of the Travis user. Use the Travis API to get this (for Pro)",
    "TRAVIS_PRO_TOKEN": "Use the Travis API to get the Travis token (for the Travis Pro account)",
    "TRAVIS_PUBLIC_USER": "GitHub ID of GitHub account with access to Travis Public",
    "TRAVIS_PUBLIC_ID": "The ID of the Travis user. Use the Travis API to get this (for Public)",
    "TRAVIS_PUBLIC_TOKEN": Use the Travis API to get the Travis token (for the Travis Public account)",
    "DUO_YOUR_DOMAIN": "your-domain-here.com,xxxxxxxx.duosecurity.com,THEDUOIKEY,THEDUOSKEY"
}
encrypt_res = kms_client.encrypt(KeyId=kms_arn, Plaintext=bytes(json.dumps(secrets_to_encrypt, indent=4), "utf-8"))
# Your results are:
print("The encrypted PTXT in B64:")
print(base64.b64encode(encrypt_res["CiphertextBlob"]).decode("utf-8"))
"""
?MC$
<xcode:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7702" systemVersion="14D136" targetRuntime="iOS.CocoaTouch" 

propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES">
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7701"/>
        <capability name="Constraints with non-1.0 multipliers" minToolsVersion="5.1"/>
    </dependencies>
    <objects>
        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
        <view contentMode="scaleToFill" id="iN0-l3-epB">
            <rect key="frame" x="0.0" y="0.0" width="480" height="480"/>
            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
            <subviews>
                <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Powered by 

React Native" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" minimumFontSize="9" translatesAutoresizingMaskIntoConstraints="NO" 

id="8ie-xW-0ye">
                    <rect key="frame" x="20" y="439" width="441" height="21"/>
                    <fontDescription key="fontDescription" type="system" pointSize="17"/>
                    <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                    <nil key="highlightedColor"/>
                </label>
                <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" 

text="ReactNativeMusic" textAlignment="center" lineBreakMode="middleTruncation" baselineAdjustment="alignBaselines" minimumFontSize="18" 

translatesAutoresizingMaskIntoConstraints="NO" id="kId-c2-rCX">
                    <rect key="frame" x="20" y="140" width="441" height="43"/>
                    <fontDescription key="fontDescription" type="boldSystem" pointSize="36"/>
                    <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                    <nil key="highlightedColor"/>
                </label>
            </subviews>
            <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
            <constraints>
                <constraint firstItem="kId-c2-rCX" firstAttribute="centerY" secondItem="iN0-l3-epB" secondAttribute="bottom" multiplier="1/3" constant="1" id="5cJ-9S-tgC"/>
                <constraint firstAttribute="centerX" secondItem="kId-c2-rCX" secondAttribute="centerX" id="Koa-jz-hwk"/>
                <constraint firstAttribute="bottom" secondItem="8ie-xW-0ye" secondAttribute="bottom" constant="20" id="Kzo-t9-V3l"/>
                <constraint firstItem="8ie-xW-0ye" firstAttribute="leading" secondItem="iN0-l3-epB" secondAttribute="leading" constant="20" symbolic="YES" id="MfP-vx-nX0"/>
                <constraint firstAttribute="centerX" secondItem="8ie-xW-0ye" secondAttribute="centerX" id="ZEH-qu-HZ9"/>
                <constraint firstItem="kId-c2-rCX" firstAttribute="leading" secondItem="iN0-l3-epB" secondAttribute="leading" constant="20" symbolic="YES" id="fvb-Df-36g"/>
            </constraints>
            <nil key="simulatedStatusBarMetrics"/>
            <freeformSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
            <point key="canvasLocation" x="548" y="455"/>
        =Added PULL_REQUEST.md template
Added ISSUE_TEMPLATE.md
why
Enforce consistency of PRs & Issues
 @osterman
Add PR template & Issue template
16e965c
 @osterman osterman requested a review from aknysh on Apr 5
osterman added some commits on Apr 5
 @osterman
Update ISSUE_TEMPLATE.md
Verified
5651a5f
 @osterman
Update PULL_REQUEST.md
Verified
b0ec79e
 @osterman
Update ISSUE_TEMPLATE.md
Verified
f6b94a9
 @osterman
Update PULL_REQUEST.md
Verified
f3bbb98
 @osterman osterman requested a review from goruha on Apr 5
@aknysh
aknysh approved these changes on Apr 5 View changes
View details @osterman osterman merged commit 3e97931 into master=MassMason (MC1)
    </objects>:connect@<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "0620"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
               BuildableName = "ReactNativeMusic.app"
               BlueprintName = "ReactNativeMusic"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "ReactNativeMusicTests.xctest"
               BlueprintName = "ReactNativeMusicTests"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      buildConfiguration = "Debug">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "ReactNativeMusicTests.xctest"
               BlueprintName = "ReactNativeMusicTests"
               ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </TestAction>
   <LaunchAction
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      buildConfiguration = "Debug"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <AdditionalOptions>
      </AdditionalOptions>
   </LaunchAction>
   <ProfileAction
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      buildConfiguration = "Release"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "ReactNativeMusic.app"
            BlueprintName = "ReactNativeMusic"
            ReferencedContainer = "container:ReactNativeMusic.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
  ## what
* Describe the problem and how to reproduce it.
* Describe the feature request or enhancement.

## why
* Explain why this is a problem and what is the expected behavior.
* Explain why this feature request or enhancement is beneficial.= (MC$)
Musicore.exe
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
{
  "os": "linux",
  "env": "DOCKER_IMAGE_NAME=cloudposse/geodesic",
  "dist": "trusty",
  "sudo": "required",
  "group": "stable",
  "addons": {
    "apt": {
      "packages": [
        "git",
        "make",
        "curl"
      ]
    }
  },
  "script": [
    "make deps",
    "make lint",
    "make docker/build"
  ],
  "install": [
    "make init",
    "make travis/docker-login"
  ],
  "language": "ruby",
  "services": [
    "docker"
  ],
  "after_success": [
    "make travis/docker-tag-and-push"
  ]
}
</Scheme-MC$ (musicore) BTC_MUSIC_$_MUSICORE_MUSIC:APP.bot
<!---html---mineable content *API($) KEY FUNCTION = TRUE (always) if needed add : (MC$)
</document
© Musicore #MASSMASON - 1st@musician.org
Musicorems Deployment
PRE-RELEASING
Travis CI can automatically release your Ruby gem to RubyGems after a successful build.

For a minimal configuration, all you need to do is add the following to your .travis.yml:

deploy:
  provider: rubygems
  api_key: "YOUR API KEY"
YAML
Most likely you would only want to deploy to RubyGems when a new version of your package is cut. To do this, you can tell Travis CI to only deploy on tagged commits, like so:

deploy:
  provider: rubygems
  api_key: "YOUR API KEY"
  on:
    tags: true
YAML
If you tag a commit locally, remember to run git push --tags to ensure that your tags are uploaded to GitHub.

You can retrieve your api key by following these instructions. It is recommended to encrypt that key. Assuming you have the Travis CI command line client installed, you can do it like this:

travis encrypt --add deploy.api_key
Bash
You will be prompted to enter your api key on the command line.

You can also have the travis tool set up everything for you:

travis setup rubygems
Bash
Keep in mind that the above command has to run in your project directory, so it can modify the .travis.yml for you.

Pre-releasing #
Instead of releasing for each new version of your gem, you can have Travis CI create a prerelease for each build.

This gives your gem’s users the option to download a newer, possibly more unstable version of your gem.

To enable this, add the following line to your gemspec, underneath your existing version line:

s.version = "#{s.version}-alpha-#{ENV['TRAVIS_BUILD_NUMBER']}" if ENV['TRAVIS']
If your gem’s current version is 1.0.0, then Travis CI will create a prerelease with the version 1.0.0-alpha-20, where 20 is the build number.

Gem to release #
By default, we will try to release a gem by the same name as the repository. For example, if you release a gem from the GitHub repository travis-ci/travis-chat without explicitly specify the name of the application, Travis CI will try to release the gem named travis-chat.

You can explicitly set the name via the gem option:

deploy:
  provider: rubygems
  api_key: ...
  gem: my-gem-123
YAML
It is also possible to release different branches to different gems:

deploy:
  provider: rubygems
  api_key: ...
  gem:
    master: my-gem
    old: my-gem-old
YAML
If these gems belong to different RubyGems accounts, you will have to do the same for the API key:

deploy:
  provider: rubygems
  api_key:
    master: ...
    old: ...
  gem:
    master: my-gem
    old: my-gem-old
YAML
Gemspec to use #
If you like, you can specify can alternate option with the gemspec option:

deploy:
    provider: rubygems
    api_key: ...
    gemspec: my-gemspec.gemspec
YAML
Branch to release from #
If you have branch specific options, as shown above, Travis CI will automatically figure out which branches to release from. Otherwise, it will only release from your master branch.

You can also explicitly specify the branch to release from with the on option:

deploy:
  provider: rubygems
  api_key: ...
  on:
    branch: production
YAML
Alternatively, you can also configure it to release from all branches:

deploy:
  provider: rubygems
  api_key: ...
  on:
    all_branches: true
YAML
Builds triggered from Pull Requests will never trigger a release.

Releasing build artifacts #
After your tests ran and before the release, Travis CI will clean up any additional files and changes you made.

Maybe that is not what you want, as you might generate some artifacts that are supposed to be released, too. There is now an option to skip the clean up:

deploy:
  provider: rubygems
  api_key: ...
  skip_cleanup: true
YAML
Conditional releases #
You can deploy only when certain conditions are met. See Conditional Releases with on:.

Gem must be registered beforehand #
Note that the gem you upload must be registered beforehand. If the gem does not exist on the host to which it is uploaded, deployment will fail. See this GitHub issue for details.

Running commands before and after release #
Sometimes you want to run commands before or after releasing a gem. You can use the before_deploy and after_deploy stages for this. These will only be triggered if Travis CI is actually pushing a release.

before_deploy: "echo 'ready?'"
deploy:
  ..
after_deploy:
  - ./after_deploy_1.sh
  - ./after_deploy_2.sh
  - ./after_deploy_3.sha
'xcode' accessgranted.
'MUSIC' + ''BTC''
<xcode=true_html_BITCOIN_MUSIC ; (BTC_MC$)
MUSICORE
/***
pull request #2006 from diemmarkus/patch-1  …
Latest commit 32612a3  2 days ago
..		
anynines.md	Clean up anchors and link checking (#1986)	25 days ago
appfog.md	Clean up anchors and link checking (#1986)	25 days ago
atlas.md	Minor fixes for repeated words and subordinate that	6 months ago
azure-web-apps.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
bintray.md	Clean up anchors and link checking (#1986)	25 days ago
bitballoon.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
bluemixcloudfoundry.md	Clean up anchors and link checking (#1986)	25 days ago
boxfuse.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
catalyze.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
chefsupermarket.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
cloud66.md	Clean up anchors and link checking (#1986)	25 days ago
cloudfiles.md	Clean up anchors and link checking (#1986)	25 days ago
cloudfoundry.md	Clean up anchors and link checking (#1986)	25 days ago
codedeploy.md	Clean up anchors and link checking (#1986)	25 days ago
custom.md	Clean up anchors and link checking (#1986)	25 days ago
deis.md	Clean up anchors and link checking (#1986)	25 days ago
elasticbeanstalk.md	Clarified purpose of bucket_name field of EBS deploy section (#2007)	7 days ago
engineyard.md	Clean up anchors and link checking (#1986)	25 days ago
firebase.md	Update firebase.md to improve readability. (#1975)	a month ago
gcs.md	Clean up anchors and link checking (#1986)	25 days ago
google-app-engine.md	Update some examples after travis-ci/dpl#540 (#1906)	3 months ago
hackage.md	Clean up anchors and link checking (#1986)	25 days ago
heroku.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
lambda.md	Clean up anchors and link checking (#1986)	25 days ago
launchpad.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
npm.md	Clean up anchors and link checking (#1986)	25 days ago
openshift.md	Clean up anchors and link checking (#1986)	25 days ago
opsworks.md	Clean up anchors and link checking (#1986)	25 days ago
packagecloud.md	Clean up anchors and link checking (#1986)	25 days ago
pages.md	Clean up anchors and link checking (#1986)	25 days ago
puppetforge.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
pypi.md	Clean up anchors and link checking (#1986)	25 days ago
releases.md	Clean up anchors and link checking (#1986)	25 days ago
rubygems.md	Clean up anchors and link checking (#1986)	25 days ago
s3.md	Clean up anchors and link checking (#1986)	25 days ago
scalingo.md	Rip out the old JS TOC generator and use liquid instead (#1909)	2 months ago
script.md	Call custom scripts with bash	7 months ago
snaps.md	"snap export-login" renamed to "snapcraft"	10 days ago
surge.md	Add {: data-file=".travis.yml"} to all yaml blocks	a year ago
testfairy.md	Minor fixes for repeated words and subordinate that	6 months ago
'xcode'
<Musicore>
/***
new file: MusiCore/Launch.py  …

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 24, 2016
828343d 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
1cd0401 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
38c2267 
Merge branch 'master' of https://github.com/gerosix/MusiCore

TheAgentSmith
TheAgentSmith committed to gerosix/musicore on May 22, 2016
9e82913 
Merge branch 'master' of https://github.com/gerosix/MusiCore

@gerosix
gerosix committed to gerosix/musicore on Mar 22, 2016
81af472 
Merge branch 'master' of https://github.com/gerosix/MusiCore

@gerosix
gerosix committed to gerosix/musicore on Mar 3, 2016
89d5028 
Merge branch 'master' of https://github.com/gerosix/MusiCore  …

@gerosix
gerosix committed to gerosix/musicore on Mar 23, 2016
981eb70 
Added: Plugin,  …

raztoki
raztoki committed to user135711/jdownloaderClient on Jul 23, 2015
f89c1a5 
Added: Plugin,  …

raztoki
raztoki committed to joaquinito01/jdownloader on Jul 23, 2015
8f8e6e3 
Added: Plugin,  …

raztoki
raztoki committed to jakop345/svn-svn.jdownloader.org-jdownloader-MyJDownloaderClient on Jul 23, 2015
f89c1a5
Added: Plugin,

- siteTesterDisabled, boolean to disable testclass
- siteSupportedNames, String[] to apply all supported domains, since they can be nested inside urls regex. This is required because aliased domains can share a single connection settings across all domains. But we need a way to test ALL supported domains.
- siteSupportedPath, allow you determine default path ontop of names, for when sites run multiple services (templates) on the same domain, and only URL path seperates. Default testing at this given time is done on base URL/siteSupportedNames entries
Fixed: creative.arte.tv_extern, added siteSupportedNames to correct bad names entry (old one needed for cross plugin plugin for untils). - testclass
Fixed: names entry typo - testclass
- faptasti.co
- beemp3s.org
- filesmonster.com (folder)
- ORFMediathekDecrypter
Added: siteTesterDisabled() = true to the following classes
- CNL
- DummyCNL
- GenericM3u8Decrypter
- MegaEncDecrypter
- DirectHttpCreatorDecrypter
Offline: DNS/parked/socket issues for over 2 weeks. - testclass
- bergfiles.com
- proxy.doujin.us
- adli.pw
- hulkshare.biz
- handsupbr.com
- url.bilgiportal.com
- unlimfiles.com
- h-url.in
- m4u.in
- telona.biz
- clubteam.eu
- yourfileplace.com
- aiotool.net
- top2tech.com
- zero10.net
- gamz.us
- dwmp3.com
- flacforthemasses.com
- free-way.me (container file and other mentions in other class)
- fufufuu.net
- filetobox.com
- uploadseeds.com
- 3ll3.in
- mirrorafile.com
- needmirror.com
- otr-drive.com
- tinymoviez.info
- pic4free.org
- imagecorn.com
- klipsiz.org
- miniurls.co
- musicore.net
- my-protect-links.com
- norapidsearch.com
- protect-links.com
- protegez-vos-liens.com
- umquetenha.org
- doujin.us
- urlite.com
- urlcini.com
- thnlnk.com
- micurl.com
- urlcantik.com
- likejav.com
- 0url.in
- realtgfporn.com
- a7layom.ta4a.info
- adsva.org
- cdn.muvdog.com
- darkme.net
- downloads.tinynhd.com
- download.tinymoviez.biz
- download.jegethy.com
- dwnlinks.com
- filedp.com
- movierulez.us
- one.gopmwd.com
- resumable-link.info
- safe.tres20kbps.com
- pucuk.tk
- seber-neko.net
- securelinking.tk
- shortadult.com
- sl.8x.biz
- thisdoesntexist.tk
- torlink.org
- sharephile.com|
- unextfiles.com
- zharabit.net
- turbobit.name
- turboblt.ru
- serien-blog.com
- uload.to
Fixed: shorte.st, general improvements


git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@31031 ebf7c1c2-ba36-0410-9fe8-c592906822b4

Former-commit-id: fb915bf8524b7a3d85a53930e32f067eaa387b0f
 master

